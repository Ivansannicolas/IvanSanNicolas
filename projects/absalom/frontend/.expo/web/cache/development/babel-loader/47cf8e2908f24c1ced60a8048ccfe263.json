{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { connect } from 'react-redux';\nimport { loadUser } from \"../../redux/actions/userActions\";\nimport styles from \"./CharacterListStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\n\nfunction CharacterList(_ref) {\n  var userItem = _ref.userItem,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      characterList = _useState2[0],\n      setCharacterList = _useState2[1];\n\n  useEffect(function () {\n    if (!characterList) {\n      dispatch(loadUser('5fc3f007332636744ff4a820'));\n    }\n\n    setCharacterList(userItem.characters);\n  }, [userItem]);\n  var characterData = characterList ? characterList.map(function (character) {\n    var id = Math.random();\n    return {\n      id: id,\n      characterName: character.name,\n      characterLvl: character.lvl,\n      characterGame: character.game,\n      characterRace: character.race,\n      characterClass: character.characterClass\n    };\n  }) : null;\n  var characterBlock = characterList ? {\n    id: id,\n    characterName: character.name,\n    characterLvl: character.lvl,\n    characterGame: character.game,\n    characterRace: character.race,\n    characterClass: character.characterClass\n  } : null;\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, characterList ? React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, userItem.userName + \" Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, characterList[0].name)) : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"No user\")));\n}\n\nfunction mapStateToProps(_ref2) {\n  var usersReducer = _ref2.usersReducer;\n  return {\n    userItem: usersReducer.userItem\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx"],"names":["React","useState","useEffect","connect","loadUser","styles","absalomBackground","CharacterList","userItem","dispatch","characterList","setCharacterList","characters","characterData","map","character","id","Math","random","characterName","name","characterLvl","lvl","characterGame","game","characterRace","race","characterClass","characterBlock","backgroundImage","container","title__bar","characterList__title","userName","mapStateToProps","usersReducer"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  ScrollView, ImageBackground, View, Text, FlatList,\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport { loadUser } from '../../redux/actions/userActions';\nimport styles from './CharacterListStyles';\nimport absalomBackground from '../../images/absalom-background.png';\n\nfunction CharacterList({ userItem, dispatch }) {\n  const [characterList, setCharacterList] = useState(null);\n\n  useEffect(() => {\n    if (!characterList) {\n      dispatch(loadUser('5fc3f007332636744ff4a820'));\n    }\n    setCharacterList(userItem.characters);\n  }, [userItem]);\n\n  const characterData = characterList ? (\n    characterList.map((character) => {\n      const id = Math.random();\n      return ({\n        id,\n        characterName: character.name,\n        characterLvl: character.lvl,\n        characterGame: character.game,\n        characterRace: character.race,\n        characterClass: character.characterClass,\n      });\n    })\n  ) : (null);\n\n  const characterBlock = characterList ? (({\n    id,\n    characterName: character.name,\n    characterLvl: character.lvl,\n    characterGame: character.game,\n    characterRace: character.race,\n    characterClass: character.characterClass,\n  })) : (null);\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <ScrollView style={styles.container}>\n        {characterList ? (\n          <View style={styles.characterList}>\n            <View style={styles.title__bar} />\n            <Text style={styles.characterList__title}>{`${userItem.userName} Characters`}</Text>\n            <View style={styles.title__bar} />\n            <Text>{characterList[0].name}</Text>\n          </View>\n        ) : (\n          <Text>No user</Text>\n        )}\n      </ScrollView>\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    userItem: usersReducer.userItem,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);\n"]},"metadata":{},"sourceType":"module"}