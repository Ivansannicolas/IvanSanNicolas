{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterDetail/CharacterDetail.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { loadCharacter } from \"../../redux/actions/characterActions\";\nimport { setVisibility, changeSetVisibility, displayEditModal, editCharacterMethods, editCharacter } from \"./CharacterDetailFunctions\";\nimport styles from \"./CharacterDetailStyles\";\nimport visibilityPrivateIcon from \"../../images/character-private-icon.png\";\nimport visibilityPublicIcon from \"../../images/character-public-icon.png\";\nimport characterSheetIcon from \"../../images/character-sheet-icon.png\";\nimport characterInventoryIcon from \"../../images/character-inventory-icon.png\";\nimport characterNotesIcon from \"../../images/character-notes-icon.png\";\n\nfunction CharacterDetail(_ref) {\n  var characterItem = _ref.characterItem,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(characterItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  var _useState3 = useState(characterItem.name),\n      _useState4 = _slicedToArray(_useState3, 2),\n      characterName = _useState4[0],\n      setCharacterName = _useState4[1];\n\n  var _useState5 = useState(characterItem.game),\n      _useState6 = _slicedToArray(_useState5, 2),\n      characterGame = _useState6[0],\n      setCharacterGame = _useState6[1];\n\n  var _useState7 = useState(characterItem.race),\n      _useState8 = _slicedToArray(_useState7, 2),\n      characterRace = _useState8[0],\n      setCharacterRace = _useState8[1];\n\n  var _useState9 = useState(characterItem.characterClass),\n      _useState10 = _slicedToArray(_useState9, 2),\n      characterClass = _useState10[0],\n      setCharacterClass = _useState10[1];\n\n  var _useState11 = useState(characterItem.lvl),\n      _useState12 = _slicedToArray(_useState11, 2),\n      characterLvl = _useState12[0],\n      setCharacterLvl = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      editModalView = _useState14[0],\n      setEditModalView = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      editModalTextValue = _useState16[0],\n      setEditModalTextValue = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      characterModalField = _useState18[0],\n      setCharacterModalField = _useState18[1];\n\n  useEffect(function () {\n    if (!character._id) {\n      dispatch(loadCharacter('5fc807a93a0fe248776f937a'));\n    }\n\n    setCharacter(characterItem);\n    setCharacterName(characterItem.name);\n    setCharacterGame(characterItem.game);\n    setCharacterRace(characterItem.race);\n    setCharacterClass(characterItem.characterClass);\n    setCharacterLvl(characterItem.lvl);\n  }, [characterItem]);\n  var backgroundImage = {\n    uri: 'https://trello-attachments.s3.amazonaws.com/5f8ca3639574d3550b3ad495/5fc038fa8e33794c73d2f2fb/2a011a9d89ff63df678311667a0173cd/Portfolio19.png'\n  };\n  return React.createElement(ImageBackground, {\n    source: backgroundImage,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, character.name ? React.createElement(View, {\n    style: styles.character,\n    alwaysBounceVertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.character__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, character.name)), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.character__owner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.character__owner__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"User:\"), React.createElement(View, {\n    style: styles.character__owner__info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__owner__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, character.owner.userName), React.createElement(Image, {\n    source: {\n      uri: character.owner.profilePic\n    },\n    style: styles.character__owner__profilePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.character__description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Name:\"), React.createElement(Button, {\n    style: styles.character__description__text,\n    title: characterName,\n    type: \"clear\",\n    onPress: function onPress() {\n      setEditModalTextValue(characterName);\n      setCharacterModalField(editCharacterMethods.editName);\n      displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Game:\"), React.createElement(Button, {\n    style: styles.character__description__text,\n    title: characterGame,\n    type: \"clear\",\n    onPress: function onPress() {\n      setEditModalTextValue(characterGame);\n      setCharacterModalField(editCharacterMethods.editGame);\n      displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"race\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Race:\"), React.createElement(Button, {\n    style: styles.character__description__text,\n    title: characterRace,\n    type: \"clear\",\n    onPress: function onPress() {\n      setEditModalTextValue(characterRace);\n      setCharacterModalField(editCharacterMethods.editRace);\n      displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Class:\"), React.createElement(Button, {\n    style: styles.character__description__text,\n    title: characterClass,\n    type: \"clear\",\n    onPress: function onPress() {\n      setEditModalTextValue(characterClass);\n      setCharacterModalField(editCharacterMethods.editClass);\n      displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"lvl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Level:\"), React.createElement(Button, {\n    style: styles.character__description__text,\n    title: characterLvl,\n    type: \"clear\",\n    onPress: function onPress() {\n      setEditModalTextValue(characterLvl);\n      setCharacterModalField(editCharacterMethods.editLvl);\n      displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.character__set,\n    name: \"sheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.set__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__set__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"Character Sheet:\"), React.createElement(Image, {\n    source: characterSheetIcon,\n    style: styles.character__set__icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSetVisibility(character, setCharacter, setVisibility.sheetVisibility, setVisibility, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, character.sheet.public ? React.createElement(Image, {\n    source: visibilityPublicIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.SheetVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }) : React.createElement(Image, {\n    source: visibilityPrivateIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.SheetVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    style: styles.character__set,\n    name: \"inventory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.set__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__set__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Inventory:\"), React.createElement(Image, {\n    source: characterInventoryIcon,\n    style: styles.character__set__icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSetVisibility(character, setCharacter, setVisibility.inventoryVisibility, setVisibility, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, character.inventory.public ? React.createElement(Image, {\n    source: visibilityPublicIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.inventoryVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }) : React.createElement(Image, {\n    source: visibilityPrivateIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.inventoryVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    style: styles.character__set,\n    name: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.set__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__set__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"Notes:\"), React.createElement(Image, {\n    source: characterNotesIcon,\n    style: styles.character__set__icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSetVisibility(character, setCharacter, setVisibility.notesVisibility, setVisibility, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, character.notes.public ? React.createElement(Image, {\n    source: visibilityPublicIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.notesVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }) : React.createElement(Image, {\n    source: visibilityPrivateIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.notesVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    style: styles.character__button__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    type: \"solid\",\n    title: \"Delete Character\",\n    buttonStyle: styles.button__delete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  })), React.createElement(Overlay, {\n    isVisible: editModalView,\n    overlayStyle: styles.editModal,\n    backdropStyle: styles.editModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      return displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, \"style=\", styles.character__description__text, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, characterModalField), React.createElement(TextInput, {\n    style: styles.character__description__text,\n    onChangeText: function onChangeText(text) {\n      return setEditModalTextValue(text);\n    },\n    value: editModalTextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"Confirm\",\n    buttonStyle: styles.buttonConfirmEditModal,\n    onPress: function onPress() {\n      return editCharacter(characterModalField, character, editModalTextValue, editCharacterMethods, setEditModalView, editModalView, setCharacterName, setCharacterGame, setCharacterRace, setCharacterClass, setCharacterLvl, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  })))) : React.createElement(View, {\n    style: styles.character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.no__character__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, \"No Character\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }))));\n}\n\nCharacterDetail.propTypes = {\n  characterItem: PropTypes.shape({\n    name: PropTypes.string,\n    game: PropTypes.string,\n    race: PropTypes.string,\n    characterClass: PropTypes.string,\n    lvl: PropTypes.string\n  }),\n  dispatch: PropTypes.func.isRequired\n};\nCharacterDetail.defaultProps = {\n  characterItem: {\n    name: null\n  }\n};\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer;\n  return {\n    characterItem: charactersReducer.characterItem\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterDetail);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterDetail/CharacterDetail.jsx"],"names":["React","useState","useEffect","Button","Overlay","connect","PropTypes","loadCharacter","setVisibility","changeSetVisibility","displayEditModal","editCharacterMethods","editCharacter","styles","visibilityPrivateIcon","visibilityPublicIcon","characterSheetIcon","characterInventoryIcon","characterNotesIcon","CharacterDetail","characterItem","dispatch","character","setCharacter","name","characterName","setCharacterName","game","characterGame","setCharacterGame","race","characterRace","setCharacterRace","characterClass","setCharacterClass","lvl","characterLvl","setCharacterLvl","editModalView","setEditModalView","editModalTextValue","setEditModalTextValue","characterModalField","setCharacterModalField","_id","backgroundImage","uri","container","character__title","title__bar","character__name","character__owner","character__owner__text","character__owner__info","owner","userName","profilePic","character__owner__profilePic","character__description","character__description__row","character__description__text","editName","editGame","editRace","editClass","editLvl","character__set","set__bar","character__set__text","character__set__icon","sheetVisibility","sheet","public","character__set__visible__icon","SheetVisibility","inventoryVisibility","inventory","notesVisibility","notes","character__button__container","button__delete","editModal","editModal__background","editModal__block","text","buttonConfirmEditModal","no__character__title","propTypes","shape","string","func","isRequired","defaultProps","mapStateToProps","charactersReducer"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAKA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,aAAT;AACA,SACEC,aADF,EACiBC,mBADjB,EACsCC,gBADtC,EACwDC,oBADxD,EAC8EC,aAD9E;AAGA,OAAOC,MAAP;AAEA,OAAOC,qBAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,kBAAP;;AAEA,SAASC,eAAT,OAAsD;AAAA,MAA3BC,aAA2B,QAA3BA,aAA2B;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBAClBpB,QAAQ,CAACmB,aAAD,CADU;AAAA;AAAA,MAC7CE,SAD6C;AAAA,MAClCC,YADkC;;AAAA,mBAEVtB,QAAQ,CAACmB,aAAa,CAACI,IAAf,CAFE;AAAA;AAAA,MAE7CC,aAF6C;AAAA,MAE9BC,gBAF8B;;AAAA,mBAGVzB,QAAQ,CAACmB,aAAa,CAACO,IAAf,CAHE;AAAA;AAAA,MAG7CC,aAH6C;AAAA,MAG9BC,gBAH8B;;AAAA,mBAIV5B,QAAQ,CAACmB,aAAa,CAACU,IAAf,CAJE;AAAA;AAAA,MAI7CC,aAJ6C;AAAA,MAI9BC,gBAJ8B;;AAAA,mBAKR/B,QAAQ,CAACmB,aAAa,CAACa,cAAf,CALA;AAAA;AAAA,MAK7CA,cAL6C;AAAA,MAK7BC,iBAL6B;;AAAA,oBAMZjC,QAAQ,CAACmB,aAAa,CAACe,GAAf,CANI;AAAA;AAAA,MAM7CC,YAN6C;AAAA,MAM/BC,eAN+B;;AAAA,oBAQVpC,QAAQ,CAAC,KAAD,CARE;AAAA;AAAA,MAQ7CqC,aAR6C;AAAA,MAQ9BC,gBAR8B;;AAAA,oBASAtC,QAAQ,CAAC,EAAD,CATR;AAAA;AAAA,MAS7CuC,kBAT6C;AAAA,MASzBC,qBATyB;;AAAA,oBAUExC,QAAQ,CAAC,IAAD,CAVV;AAAA;AAAA,MAU7CyC,mBAV6C;AAAA,MAUxBC,sBAVwB;;AAYpDzC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACoB,SAAS,CAACsB,GAAf,EAAoB;AAClBvB,MAAAA,QAAQ,CAACd,aAAa,CAAC,0BAAD,CAAd,CAAR;AACD;;AACDgB,IAAAA,YAAY,CAACH,aAAD,CAAZ;AACAM,IAAAA,gBAAgB,CAACN,aAAa,CAACI,IAAf,CAAhB;AACAK,IAAAA,gBAAgB,CAACT,aAAa,CAACO,IAAf,CAAhB;AACAK,IAAAA,gBAAgB,CAACZ,aAAa,CAACU,IAAf,CAAhB;AACAI,IAAAA,iBAAiB,CAACd,aAAa,CAACa,cAAf,CAAjB;AACAI,IAAAA,eAAe,CAACjB,aAAa,CAACe,GAAf,CAAf;AACD,GAVQ,EAUN,CAACf,aAAD,CAVM,CAAT;AAYA,MAAMyB,eAAe,GAAG;AACtBC,IAAAA,GAAG,EAAE;AADiB,GAAxB;AAIA,SACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAED,eAAzB;AAA0C,IAAA,KAAK,EAAEhC,MAAM,CAACgC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEhC,MAAM,CAACkC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,SAAS,CAACE,IAAV,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACS,SAApB;AAA+B,IAAA,oBAAoB,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACmC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnC,MAAM,CAACoC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpC,MAAM,CAACqC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsC5B,SAAS,CAACE,IAAhD,CADF,CAFF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACoC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpC,MAAM,CAACsC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtC,MAAM,CAACuC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,MAAM,CAACwC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExC,MAAM,CAACuC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C9B,SAAS,CAACgC,KAAV,CAAgBC,QAA7D,CADF,EAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE;AAAET,MAAAA,GAAG,EAAExB,SAAS,CAACgC,KAAV,CAAgBE;AAAvB,KADV;AAEE,IAAA,KAAK,EAAE3C,MAAM,CAAC4C,4BAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CARF,EAkBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5C,MAAM,CAAC6C,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7C,MAAM,CAAC8C,2BAApB;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,MAAM,CAAC+C,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE/C,MAAM,CAAC+C,4BADhB;AAEE,IAAA,KAAK,EAAEnC,aAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EACL,mBAAM;AACJgB,MAAAA,qBAAqB,CAAChB,aAAD,CAArB;AACAkB,MAAAA,sBAAsB,CAAChC,oBAAoB,CAACkD,QAAtB,CAAtB;AACAnD,MAAAA,gBAAgB,CAAC6B,gBAAD,EAAmBD,aAAnB,CAAhB;AACD,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAgBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAAC8C,2BAApB;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,MAAM,CAAC+C,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE/C,MAAM,CAAC+C,4BADhB;AAEE,IAAA,KAAK,EAAEhC,aAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EACL,mBAAM;AACJa,MAAAA,qBAAqB,CAACb,aAAD,CAArB;AACAe,MAAAA,sBAAsB,CAAChC,oBAAoB,CAACmD,QAAtB,CAAtB;AACApD,MAAAA,gBAAgB,CAAC6B,gBAAD,EAAmBD,aAAnB,CAAhB;AACD,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhBF,EA+BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAAC8C,2BAApB;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,MAAM,CAAC+C,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE/C,MAAM,CAAC+C,4BADhB;AAEE,IAAA,KAAK,EAAE7B,aAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EACL,mBAAM;AACJU,MAAAA,qBAAqB,CAACV,aAAD,CAArB;AACAY,MAAAA,sBAAsB,CAAChC,oBAAoB,CAACoD,QAAtB,CAAtB;AACArD,MAAAA,gBAAgB,CAAC6B,gBAAD,EAAmBD,aAAnB,CAAhB;AACD,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA/BF,EA8CE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAAC8C,2BAApB;AAAiD,IAAA,IAAI,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,MAAM,CAAC+C,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE/C,MAAM,CAAC+C,4BADhB;AAEE,IAAA,KAAK,EAAE3B,cAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EACL,mBAAM;AACJQ,MAAAA,qBAAqB,CAACR,cAAD,CAArB;AACAU,MAAAA,sBAAsB,CAAChC,oBAAoB,CAACqD,SAAtB,CAAtB;AACAtD,MAAAA,gBAAgB,CAAC6B,gBAAD,EAAmBD,aAAnB,CAAhB;AACD,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA9CF,EA6DE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAAC8C,2BAApB;AAAiD,IAAA,IAAI,EAAC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,MAAM,CAAC+C,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE/C,MAAM,CAAC+C,4BADhB;AAEE,IAAA,KAAK,EAAExB,YAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EACL,mBAAM;AACJK,MAAAA,qBAAqB,CAACL,YAAD,CAArB;AACAO,MAAAA,sBAAsB,CAAChC,oBAAoB,CAACsD,OAAtB,CAAtB;AACAvD,MAAAA,gBAAgB,CAAC6B,gBAAD,EAAmBD,aAAnB,CAAhB;AACD,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA7DF,CAlBF,EA+FE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACqD,cAApB;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErD,MAAM,CAACsD,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtD,MAAM,CAACuD,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEpD,kBADV;AAEE,IAAA,KAAK,EAAEH,MAAM,CAACwD,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAM5D,mBAAmB,CAClDa,SADkD,EACvCC,YADuC,EACzBf,aAAa,CAAC8D,eADW,EACM9D,aADN,EACqBa,QADrB,CAAzB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGC,SAAS,CAACiD,KAAV,CAAgBC,MAAhB,GACC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEzD,oBADV;AAEE,IAAA,KAAK,EAAEF,MAAM,CAAC4D,6BAFhB;AAGE,IAAA,EAAE,EAAEjE,aAAa,CAACkE,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE5D,qBADV;AAEE,IAAA,KAAK,EAAED,MAAM,CAAC4D,6BAFhB;AAGE,IAAA,EAAE,EAAEjE,aAAa,CAACkE,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CARF,CA/FF,EA0HE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7D,MAAM,CAACqD,cAApB;AAAoC,IAAA,IAAI,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErD,MAAM,CAACsD,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtD,MAAM,CAACuD,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEnD,sBADV;AAEE,IAAA,KAAK,EAAEJ,MAAM,CAACwD,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAM5D,mBAAmB,CAClDa,SADkD,EACvCC,YADuC,EACzBf,aAAa,CAACmE,mBADW,EACUnE,aADV,EACyBa,QADzB,CAAzB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGC,SAAS,CAACsD,SAAV,CAAoBJ,MAApB,GACC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEzD,oBADV;AAEE,IAAA,KAAK,EAAEF,MAAM,CAAC4D,6BAFhB;AAGE,IAAA,EAAE,EAAEjE,aAAa,CAACmE,mBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE7D,qBADV;AAEE,IAAA,KAAK,EAAED,MAAM,CAAC4D,6BAFhB;AAGE,IAAA,EAAE,EAAEjE,aAAa,CAACmE,mBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CARF,CA1HF,EAqJE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9D,MAAM,CAACqD,cAApB;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErD,MAAM,CAACsD,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtD,MAAM,CAACuD,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAElD,kBADV;AAEE,IAAA,KAAK,EAAEL,MAAM,CAACwD,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAM5D,mBAAmB,CAClDa,SADkD,EACvCC,YADuC,EACzBf,aAAa,CAACqE,eADW,EACMrE,aADN,EACqBa,QADrB,CAAzB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGC,SAAS,CAACwD,KAAV,CAAgBN,MAAhB,GACC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEzD,oBADV;AAEE,IAAA,KAAK,EAAEF,MAAM,CAAC4D,6BAFhB;AAGE,IAAA,EAAE,EAAEjE,aAAa,CAACqE,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE/D,qBADV;AAEE,IAAA,KAAK,EAAED,MAAM,CAAC4D,6BAFhB;AAGE,IAAA,EAAE,EAAEjE,aAAa,CAACqE,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CARF,CArJF,EAgLE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhE,MAAM,CAACkE,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,KAAK,EAAC,kBAA3B;AAA8C,IAAA,WAAW,EAAElE,MAAM,CAACmE,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhLF,EAmLE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAE1C,aADb;AAEE,IAAA,YAAY,EAAEzB,MAAM,CAACoE,SAFvB;AAGE,IAAA,aAAa,EAAEpE,MAAM,CAACqE,qBAHxB;AAIE,IAAA,aAAa,EAAC,MAJhB;AAKE,IAAA,UAAU,MALZ;AAME,IAAA,eAAe,EAAE;AAAA,aAAMxE,gBAAgB,CAAC6B,gBAAD,EAAmBD,aAAnB,CAAtB;AAAA,KANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACsE,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEGtE,MAAM,CAAC+C,4BAFV,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOlB,mBAAP,CAHF,EAIE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE7B,MAAM,CAAC+C,4BADhB;AAEE,IAAA,YAAY,EAAE,sBAACwB,IAAD;AAAA,aAAU3C,qBAAqB,CAAC2C,IAAD,CAA/B;AAAA,KAFhB;AAGE,IAAA,KAAK,EAAE5C,kBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,EAAE3B,MAAM,CAACwE,sBAFtB;AAGE,IAAA,OAAO,EACL;AAAA,aAAMzE,aAAa,CACjB8B,mBADiB,EACIpB,SADJ,EACekB,kBADf,EACmC7B,oBADnC,EAEjB4B,gBAFiB,EAECD,aAFD,EAEgBZ,gBAFhB,EAEkCG,gBAFlC,EAGjBG,gBAHiB,EAGCE,iBAHD,EAGoBG,eAHpB,EAGqChB,QAHrC,CAAnB;AAAA,KAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CARF,CAnLF,CADD,GAoNC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACoC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpC,MAAM,CAACyE,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzE,MAAM,CAACoC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CArNJ,CADF,CADF;AAgOD;;AAED9B,eAAe,CAACoE,SAAhB,GAA4B;AAC1BnE,EAAAA,aAAa,EAAEd,SAAS,CAACkF,KAAV,CAAgB;AAC7BhE,IAAAA,IAAI,EAAElB,SAAS,CAACmF,MADa;AAE7B9D,IAAAA,IAAI,EAAErB,SAAS,CAACmF,MAFa;AAG7B3D,IAAAA,IAAI,EAAExB,SAAS,CAACmF,MAHa;AAI7BxD,IAAAA,cAAc,EAAE3B,SAAS,CAACmF,MAJG;AAK7BtD,IAAAA,GAAG,EAAE7B,SAAS,CAACmF;AALc,GAAhB,CADW;AAQ1BpE,EAAAA,QAAQ,EAAEf,SAAS,CAACoF,IAAV,CAAeC;AARC,CAA5B;AAWAxE,eAAe,CAACyE,YAAhB,GAA+B;AAC7BxE,EAAAA,aAAa,EAAE;AACbI,IAAAA,IAAI,EAAE;AADO;AADc,CAA/B;;AAOA,SAASqE,eAAT,QAAgD;AAAA,MAArBC,iBAAqB,SAArBA,iBAAqB;AAC9C,SAAO;AACL1E,IAAAA,aAAa,EAAE0E,iBAAiB,CAAC1E;AAD5B,GAAP;AAGD;;AAED,eAAef,OAAO,CAACwF,eAAD,CAAP,CAAyB1E,eAAzB,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  ImageBackground, Text, View,\n  ScrollView, Image, TouchableOpacity, TextInput,\n} from 'react-native';\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { loadCharacter } from '../../redux/actions/characterActions';\nimport {\n  setVisibility, changeSetVisibility, displayEditModal, editCharacterMethods, editCharacter,\n} from './CharacterDetailFunctions';\nimport styles from './CharacterDetailStyles';\n\nimport visibilityPrivateIcon from '../../images/character-private-icon.png';\nimport visibilityPublicIcon from '../../images/character-public-icon.png';\nimport characterSheetIcon from '../../images/character-sheet-icon.png';\nimport characterInventoryIcon from '../../images/character-inventory-icon.png';\nimport characterNotesIcon from '../../images/character-notes-icon.png';\n\nfunction CharacterDetail({ characterItem, dispatch }) {\n  const [character, setCharacter] = useState(characterItem);\n  const [characterName, setCharacterName] = useState(characterItem.name);\n  const [characterGame, setCharacterGame] = useState(characterItem.game);\n  const [characterRace, setCharacterRace] = useState(characterItem.race);\n  const [characterClass, setCharacterClass] = useState(characterItem.characterClass);\n  const [characterLvl, setCharacterLvl] = useState(characterItem.lvl);\n\n  const [editModalView, setEditModalView] = useState(false);\n  const [editModalTextValue, setEditModalTextValue] = useState('');\n  const [characterModalField, setCharacterModalField] = useState(null);\n\n  useEffect(() => {\n    if (!character._id) {\n      dispatch(loadCharacter('5fc807a93a0fe248776f937a'));\n    }\n    setCharacter(characterItem);\n    setCharacterName(characterItem.name);\n    setCharacterGame(characterItem.game);\n    setCharacterRace(characterItem.race);\n    setCharacterClass(characterItem.characterClass);\n    setCharacterLvl(characterItem.lvl);\n  }, [characterItem]);\n\n  const backgroundImage = {\n    uri: 'https://trello-attachments.s3.amazonaws.com/5f8ca3639574d3550b3ad495/5fc038fa8e33794c73d2f2fb/2a011a9d89ff63df678311667a0173cd/Portfolio19.png',\n  };\n\n  return (\n    <ImageBackground source={backgroundImage} style={styles.backgroundImage}>\n      <ScrollView style={styles.container}>\n        {character.name ? (\n          <View style={styles.character} alwaysBounceVertical>\n            <View style={styles.character__title}>\n              <View style={styles.title__bar} />\n              <View>\n                <Text style={styles.character__name}>{character.name}</Text>\n              </View>\n              <View style={styles.title__bar} />\n            </View>\n            <View style={styles.character__owner}>\n              <Text style={styles.character__owner__text}>User:</Text>\n              <View style={styles.character__owner__info}>\n                <Text style={styles.character__owner__text}>{character.owner.userName}</Text>\n                <Image\n                  source={{ uri: character.owner.profilePic }}\n                  style={styles.character__owner__profilePic}\n                />\n              </View>\n            </View>\n            <View style={styles.character__description}>\n              <View style={styles.character__description__row} name=\"name\">\n                <Text style={styles.character__description__text}>Name:</Text>\n                <Button\n                  style={styles.character__description__text}\n                  title={characterName}\n                  type=\"clear\"\n                  onPress={\n                    () => {\n                      setEditModalTextValue(characterName);\n                      setCharacterModalField(editCharacterMethods.editName);\n                      displayEditModal(setEditModalView, editModalView);\n                    }\n                  }\n                />\n              </View>\n              <View style={styles.character__description__row} name=\"game\">\n                <Text style={styles.character__description__text}>Game:</Text>\n                <Button\n                  style={styles.character__description__text}\n                  title={characterGame}\n                  type=\"clear\"\n                  onPress={\n                    () => {\n                      setEditModalTextValue(characterGame);\n                      setCharacterModalField(editCharacterMethods.editGame);\n                      displayEditModal(setEditModalView, editModalView);\n                    }\n                  }\n                />\n              </View>\n              <View style={styles.character__description__row} name=\"race\">\n                <Text style={styles.character__description__text}>Race:</Text>\n                <Button\n                  style={styles.character__description__text}\n                  title={characterRace}\n                  type=\"clear\"\n                  onPress={\n                    () => {\n                      setEditModalTextValue(characterRace);\n                      setCharacterModalField(editCharacterMethods.editRace);\n                      displayEditModal(setEditModalView, editModalView);\n                    }\n                  }\n                />\n              </View>\n              <View style={styles.character__description__row} name=\"class\">\n                <Text style={styles.character__description__text}>Class:</Text>\n                <Button\n                  style={styles.character__description__text}\n                  title={characterClass}\n                  type=\"clear\"\n                  onPress={\n                    () => {\n                      setEditModalTextValue(characterClass);\n                      setCharacterModalField(editCharacterMethods.editClass);\n                      displayEditModal(setEditModalView, editModalView);\n                    }\n                  }\n                />\n              </View>\n              <View style={styles.character__description__row} name=\"lvl\">\n                <Text style={styles.character__description__text}>Level:</Text>\n                <Button\n                  style={styles.character__description__text}\n                  title={characterLvl}\n                  type=\"clear\"\n                  onPress={\n                    () => {\n                      setEditModalTextValue(characterLvl);\n                      setCharacterModalField(editCharacterMethods.editLvl);\n                      displayEditModal(setEditModalView, editModalView);\n                    }\n                  }\n                />\n              </View>\n            </View>\n            <View style={styles.character__set} name=\"sheet\">\n              <View style={styles.set__bar}>\n                <Text style={styles.character__set__text}>Character Sheet:</Text>\n                <Image\n                  source={characterSheetIcon}\n                  style={styles.character__set__icon}\n                />\n              </View>\n              <TouchableOpacity onPress={() => changeSetVisibility(\n                character, setCharacter, setVisibility.sheetVisibility, setVisibility, dispatch,\n              )}\n              >\n                {character.sheet.public ? (\n                  <Image\n                    source={visibilityPublicIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.SheetVisibility}\n                  />\n                ) : (\n                  <Image\n                    source={visibilityPrivateIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.SheetVisibility}\n                  />\n                )}\n              </TouchableOpacity>\n            </View>\n            <View style={styles.character__set} name=\"inventory\">\n              <View style={styles.set__bar}>\n                <Text style={styles.character__set__text}>Inventory:</Text>\n                <Image\n                  source={characterInventoryIcon}\n                  style={styles.character__set__icon}\n                />\n              </View>\n              <TouchableOpacity onPress={() => changeSetVisibility(\n                character, setCharacter, setVisibility.inventoryVisibility, setVisibility, dispatch,\n              )}\n              >\n                {character.inventory.public ? (\n                  <Image\n                    source={visibilityPublicIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.inventoryVisibility}\n                  />\n                ) : (\n                  <Image\n                    source={visibilityPrivateIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.inventoryVisibility}\n                  />\n                )}\n              </TouchableOpacity>\n            </View>\n            <View style={styles.character__set} name=\"notes\">\n              <View style={styles.set__bar}>\n                <Text style={styles.character__set__text}>Notes:</Text>\n                <Image\n                  source={characterNotesIcon}\n                  style={styles.character__set__icon}\n                />\n              </View>\n              <TouchableOpacity onPress={() => changeSetVisibility(\n                character, setCharacter, setVisibility.notesVisibility, setVisibility, dispatch,\n              )}\n              >\n                {character.notes.public ? (\n                  <Image\n                    source={visibilityPublicIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.notesVisibility}\n                  />\n                ) : (\n                  <Image\n                    source={visibilityPrivateIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.notesVisibility}\n                  />\n                )}\n              </TouchableOpacity>\n            </View>\n            <View style={styles.character__button__container}>\n              <Button type=\"solid\" title=\"Delete Character\" buttonStyle={styles.button__delete} />\n            </View>\n            <Overlay\n              isVisible={editModalView}\n              overlayStyle={styles.editModal}\n              backdropStyle={styles.editModal__background}\n              animationType=\"fade\"\n              fullScreen\n              onBackdropPress={() => displayEditModal(setEditModalView, editModalView)}\n            >\n              <View style={styles.editModal__block}>\n                style=\n                {styles.character__description__text}\n                <Text>{characterModalField}</Text>\n                <TextInput\n                  style={styles.character__description__text}\n                  onChangeText={(text) => setEditModalTextValue(text)}\n                  value={editModalTextValue}\n                />\n                <Button\n                  title=\"Confirm\"\n                  buttonStyle={styles.buttonConfirmEditModal}\n                  onPress={\n                    () => editCharacter(\n                      characterModalField, character, editModalTextValue, editCharacterMethods,\n                      setEditModalView, editModalView, setCharacterName, setCharacterGame,\n                      setCharacterRace, setCharacterClass, setCharacterLvl, dispatch,\n                    )\n                    }\n                />\n              </View>\n            </Overlay>\n          </View>\n        ) : (\n          <View style={styles.character}>\n            <View style={styles.title__bar} />\n            <Text style={styles.no__character__title}>No Character</Text>\n            <View style={styles.title__bar} />\n          </View>\n        )}\n      </ScrollView>\n    </ImageBackground>\n  );\n}\n\nCharacterDetail.propTypes = {\n  characterItem: PropTypes.shape({\n    name: PropTypes.string,\n    game: PropTypes.string,\n    race: PropTypes.string,\n    characterClass: PropTypes.string,\n    lvl: PropTypes.string,\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nCharacterDetail.defaultProps = {\n  characterItem: {\n    name: null,\n  },\n\n};\n\nfunction mapStateToProps({ charactersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterDetail);\n"]},"metadata":{},"sourceType":"module"}