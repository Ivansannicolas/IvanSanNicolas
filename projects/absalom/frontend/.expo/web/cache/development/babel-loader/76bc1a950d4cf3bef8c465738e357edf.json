{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/SearchList/SearchList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SearchBar } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { loadUser, setUserId } from \"../../redux/actions/userActions\";\nimport { setCharacterId, loadCharacterByKey } from \"../../redux/actions/characterActions\";\nimport { loadCharactersByOwner } from \"../../redux/actions/charactersActions\";\nimport Header from \"../Header/Header\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\nimport styles from \"./SearchListStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport addIcon from \"../../images/add-icon-blue.png\";\n\nfunction SearchList(_ref) {\n  var _this = this;\n\n  var userItem = _ref.userItem,\n      userId = _ref.userId,\n      charactersArray = _ref.charactersArray,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characterList = _useState2[0],\n      setCharacterList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addCharacterModalView = _useState4[0],\n      setAddCharacterModalView = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchValue = _useState6[0],\n      setSearchValue = _useState6[1];\n\n  useEffect(function () {\n    if (!(userId != null && userId.length)) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    }\n\n    if (!(userItem != null && userItem._id)) {\n      dispatch(loadUser(userItem._id));\n      setCharacterList([]);\n    }\n\n    if (userId && (!charactersArray || !(charactersArray != null && charactersArray.length))) {\n      dispatch(loadCharactersByOwner(userItem._id));\n    }\n\n    setCharacterList(charactersArray || null);\n  }, [userItem, userId, charactersArray]);\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    userId: userItem._id,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.characterList__title__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, userItem.userName + \" Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), React.createElement(SearchBar, {\n    containerStyle: styles.searchList__searchBar,\n    inputContainerStyle: styles.searchList__searchBar__input__container,\n    inputStyle: styles.searchList__searchBar__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, characterList != null && characterList.length && userItem != null && userItem.userName ? React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.characterList__list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, characterList.map(function (character) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.characterList__list__block,\n      key: \"\" + character._id + Math.random(),\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        dispatch(setCharacterId(character._id));\n        dispatch(loadCharacterByKey(character.uniqueKey, userItem._id));\n        navigation.navigate('CharacterDetail');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__character__firstRow__name__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.characterList__character__firstRow__name__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }, character.name)), React.createElement(Text, {\n      testID: \"LevelText\",\n      style: styles.characterList__character__firstRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Level:\", ' ', character.lvl)), React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, character.game), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, character.race), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, character.characterClass)));\n  }))) : React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"You have no characters\"), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Add a character to start!\"), React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    onPress: function onPress() {\n      return setAddCharacterModalView(!addCharacterModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: addIcon,\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userItem._id,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var usersReducer = _ref2.usersReducer,\n      charactersReducer = _ref2.charactersReducer;\n  return {\n    usersArray: usersReducer.usersArray,\n    userItem: usersReducer.userItem,\n    charactersArray: charactersReducer.charactersArray\n  };\n}\n\nexport default connect(mapStateToProps)(SearchList);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/SearchList/SearchList.jsx"],"names":["React","useState","useEffect","SearchBar","connect","loadUser","setUserId","setCharacterId","loadCharacterByKey","loadCharactersByOwner","Header","NavigationBar","LoadingSpinner","styles","absalomBackground","addIcon","SearchList","userItem","userId","charactersArray","dispatch","navigation","characterList","setCharacterList","addCharacterModalView","setAddCharacterModalView","searchValue","setSearchValue","length","_id","backgroundImage","characterList__title__block","title__bar","characterList__title","userName","searchList__searchBar","searchList__searchBar__input__container","searchList__searchBar__input","container","characterList__list","map","character","characterList__list__block","Math","random","uniqueKey","navigate","characterList__list__block__row","characterList__character__firstRow__name__block","characterList__character__firstRow__name__text","name","characterList__character__firstRow__text","lvl","characterList__character__secondRow__text","game","race","characterClass","addIcon__block","icon","mapStateToProps","usersReducer","charactersReducer","usersArray"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  ScrollView, ImageBackground, TextInput,\n  View, Text, TouchableOpacity, Image,\n} from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { loadUser, setUserId } from '../../redux/actions/userActions';\nimport {\n  setCharacterId, loadCharacterByKey,\n} from '../../redux/actions/characterActions';\nimport { loadCharactersByOwner } from '../../redux/actions/charactersActions';\nimport Header from '../Header/Header';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport styles from './SearchListStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport addIcon from '../../images/add-icon-blue.png';\n\nfunction SearchList({\n  userItem, userId, charactersArray, dispatch, navigation,\n}) {\n  const [characterList, setCharacterList] = useState([]);\n  const [addCharacterModalView, setAddCharacterModalView] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  useEffect(() => {\n    if (!userId?.length) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    }\n\n    if (!userItem?._id) {\n      dispatch(loadUser(userItem._id));\n      setCharacterList([]);\n    }\n\n    if (userId && (!charactersArray || !charactersArray?.length)) {\n      dispatch(loadCharactersByOwner(userItem._id));\n    }\n\n    setCharacterList(charactersArray || null);\n  }, [userItem, userId, charactersArray]);\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <Header navigation={navigation} userId={userItem._id} dispatch={dispatch} />\n      <View style={styles.characterList__title__block}>\n        <View style={styles.title__bar} />\n        <Text style={styles.characterList__title}>{`${userItem.userName} Characters`}</Text>\n        <View style={styles.title__bar} />\n      </View>\n      <SearchBar\n        containerStyle={styles.searchList__searchBar}\n        inputContainerStyle={styles.searchList__searchBar__input__container}\n        inputStyle={styles.searchList__searchBar__input}\n      />\n      <ScrollView style={styles.container}>\n        {(characterList?.length && userItem?.userName) ? (\n          <View style={styles.characterList}>\n            <View style={styles.characterList__list}>\n              {characterList.map((character) => (\n                <TouchableOpacity\n                  style={styles.characterList__list__block}\n                  key={`${character._id}${Math.random()}`}\n                  activeOpacity={0.8}\n                  onPress={() => {\n                    dispatch(setCharacterId(character._id));\n                    dispatch(loadCharacterByKey(character.uniqueKey, userItem._id));\n                    navigation.navigate('CharacterDetail');\n                  }}\n                >\n                  <View style={styles.characterList__list__block__row}>\n                    <View style={styles.characterList__character__firstRow__name__block}>\n                      <Text style={styles.characterList__character__firstRow__name__text}>\n                        {character.name}\n                      </Text>\n                    </View>\n                    <Text\n                      testID=\"LevelText\"\n                      style={styles.characterList__character__firstRow__text}\n                    >\n                      Level:\n                      {' '}\n                      {character.lvl}\n                    </Text>\n                  </View>\n                  <View style={styles.characterList__list__block__row}>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.game}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.race}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.characterClass}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n          </View>\n        ) : (\n          <View style={styles.characterList}>\n            <Text style={styles.characterList__title}>You have no characters</Text>\n            <Text style={styles.characterList__title}>Add a character to start!</Text>\n            <LoadingSpinner />\n          </View>\n        )}\n      </ScrollView>\n      <TouchableOpacity\n        style={styles.addIcon__block}\n        onPress={() => setAddCharacterModalView(!addCharacterModalView)}\n      >\n        <Image source={addIcon} style={styles.icon} />\n      </TouchableOpacity>\n      <NavigationBar navigation={navigation} userId={userItem._id} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ usersReducer, charactersReducer }) {\n  return {\n    usersArray: usersReducer.usersArray,\n    userItem: usersReducer.userItem,\n    charactersArray: charactersReducer.charactersArray,\n  };\n}\n\nexport default connect(mapStateToProps)(SearchList);\n"]},"metadata":{},"sourceType":"module"}