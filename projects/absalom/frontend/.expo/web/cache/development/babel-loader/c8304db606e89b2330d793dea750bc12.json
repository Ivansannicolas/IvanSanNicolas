{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport { Overlay, Button } from 'react-native-elements';\nimport { loadUser, setUserId } from \"../../redux/actions/userActions\";\nimport { setCharacterId, createCharacter } from \"../../redux/actions/characterActions\";\nimport { loadCharactersByOwner } from \"../../redux/actions/charactersActions\";\nimport displayAddCharacterModal from \"./CharacterListFunctions\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterListStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport addIcon from \"../../images/add-icon.png\";\n\nfunction CharacterList(_ref) {\n  var _this = this;\n\n  var userItem = _ref.userItem,\n      userId = _ref.userId,\n      charactersArray = _ref.charactersArray,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n  debugger;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characterList = _useState2[0],\n      setCharacterList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addCharacterModalView = _useState4[0],\n      setAddCharacterModalView = _useState4[1];\n\n  var isFocused = useIsFocused();\n\n  var _useState5 = useState('Name'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newCharacterName = _useState6[0],\n      setNewCharacterName = _useState6[1];\n\n  var _useState7 = useState('Game'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newCharacterGame = _useState8[0],\n      setNewCharacterGame = _useState8[1];\n\n  var _useState9 = useState('Race'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      newCharacterRace = _useState10[0],\n      setNewCharacterRace = _useState10[1];\n\n  var _useState11 = useState('Class'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      newCharacterClass = _useState12[0],\n      setNewCharacterClass = _useState12[1];\n\n  var _useState13 = useState('Level'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      newCharacterLvl = _useState14[0],\n      setNewCharacterLvl = _useState14[1];\n\n  useEffect(function () {\n    if (!(userId != null && userId.length)) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    } else if (!(userItem != null && userItem._id)) {\n      dispatch(loadUser(userId));\n      setCharacterList([]);\n    }\n\n    if (userId && (!charactersArray || !(charactersArray != null && charactersArray.length))) {\n      dispatch(loadCharactersByOwner(userId));\n    }\n\n    setCharacterList(charactersArray || null);\n  }, [userItem, isFocused, userId, charactersArray, characterList]);\n  var newCharacter = {\n    name: '',\n    game: '',\n    race: '',\n    lvl: '',\n    characterClass: '',\n    owner: userId,\n    sheet: {\n      public: true,\n      url: ''\n    },\n    inventory: {\n      public: true,\n      categories: []\n    },\n    notes: {\n      public: true,\n      characterNotes: []\n    }\n  };\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, characterList != null && characterList.length ? React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, userItem.userName + \" Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.characterList__list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, characterList.map(function (character) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.characterList__list__block,\n      key: \"\" + character._id + Math.random(),\n      onPress: function onPress() {\n        dispatch(setCharacterId(character._id));\n        navigation.navigate('CharacterDetail');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__character__firstRow__name__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.characterList__character__firstRow__name__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }, character.name)), React.createElement(Text, {\n      style: styles.characterList__character__firstRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Level:\", ' ', character.lvl)), React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, character.game), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, character.race), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, character.characterClass)));\n  }))) : React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"You have no characters\"), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Add a character to start!\")), React.createElement(Overlay, {\n    name: \"add character modal\",\n    isVisible: addCharacterModalView,\n    overlayStyle: styles.addCharacterModal,\n    backdropStyle: styles.addCharacterModal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      displayAddCharacterModal(setAddCharacterModalView, addCharacterModalView);\n      setNewCharacterName('Name');\n      setNewCharacterGame('Game');\n      setNewCharacterRace('Race');\n      setNewCharacterClass('Class');\n      setNewCharacterLvl('Level');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addCharacterModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Add a new character\"), React.createElement(View, {\n    style: styles.addCharacterModal__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Name:\"), React.createElement(View, {\n    style: styles.addCharacterModal__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.addCharacterModal__textInput,\n    value: newCharacterName,\n    onChangeText: function onChangeText(text) {\n      return setNewCharacterName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.addCharacterModal__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Game:\"), React.createElement(View, {\n    style: styles.addCharacterModal__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.addCharacterModal__textInput,\n    value: newCharacterGame,\n    onChangeText: function onChangeText(text) {\n      newCharacter.game = text;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.addCharacterModal__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, \"Race:\"), React.createElement(View, {\n    style: styles.addCharacterModal__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.addCharacterModal__textInput,\n    value: newCharacterRace,\n    onChangeText: function onChangeText(text) {\n      newCharacter.game = text;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.addCharacterModal__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"Class:\"), React.createElement(View, {\n    style: styles.addCharacterModal__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.addCharacterModal__textInput,\n    value: newCharacterClass,\n    onChangeText: function onChangeText(text) {\n      newCharacter.game = text;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.addCharacterModal__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"Level:\"), React.createElement(View, {\n    style: styles.addCharacterModal__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.addCharacterModal__textInput,\n    value: newCharacterLvl,\n    onChangeText: function onChangeText(text) {\n      newCharacter.game = text;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }))), React.createElement(Button, {\n    title: \"Create Character\",\n    buttonStyle: styles.buttonConfirmAddCharacterModal,\n    onPress: function onPress() {\n      newCharacter.owner = userId;\n      dispatch(createCharacter(newCharacter));\n      setCharacterList(characterList.push(newCharacter));\n      setAddCharacterModalView(!addCharacterModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  })))), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    onPress: function onPress() {\n      return setAddCharacterModalView(!addCharacterModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: addIcon,\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  })), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var usersReducer = _ref2.usersReducer,\n      charactersReducer = _ref2.charactersReducer;\n  return {\n    userItem: usersReducer.userItem,\n    userId: usersReducer.userId,\n    charactersArray: charactersReducer.charactersArray\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx"],"names":["React","useState","useEffect","useIsFocused","connect","Overlay","Button","loadUser","setUserId","setCharacterId","createCharacter","loadCharactersByOwner","displayAddCharacterModal","NavigationBar","styles","absalomBackground","addIcon","CharacterList","userItem","userId","charactersArray","dispatch","navigation","characterList","setCharacterList","addCharacterModalView","setAddCharacterModalView","isFocused","newCharacterName","setNewCharacterName","newCharacterGame","setNewCharacterGame","newCharacterRace","setNewCharacterRace","newCharacterClass","setNewCharacterClass","newCharacterLvl","setNewCharacterLvl","length","_id","newCharacter","name","game","race","lvl","characterClass","owner","sheet","public","url","inventory","categories","notes","characterNotes","backgroundImage","container","title__bar","characterList__title","userName","characterList__list","map","character","characterList__list__block","Math","random","navigate","characterList__list__block__row","characterList__character__firstRow__name__block","characterList__character__firstRow__name__text","characterList__character__firstRow__text","characterList__character__secondRow__text","addCharacterModal","addCharacterModal__background","addCharacterModal__block","addCharacterModal__title","addCharacterModal__row","addCharacterModal__text","addCharacterModal__input","addCharacterModal__textInput","text","buttonConfirmAddCharacterModal","push","addIcon__block","icon","mapStateToProps","usersReducer","charactersReducer"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  ScrollView, ImageBackground, TextInput,\n  View, Text, TouchableOpacity, Image,\n} from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport { Overlay, Button } from 'react-native-elements';\nimport { loadUser, setUserId } from '../../redux/actions/userActions';\nimport { setCharacterId, createCharacter } from '../../redux/actions/characterActions';\nimport { loadCharactersByOwner } from '../../redux/actions/charactersActions';\nimport displayAddCharacterModal from './CharacterListFunctions';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterListStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport addIcon from '../../images/add-icon.png';\n\nfunction CharacterList({\n  userItem, userId, charactersArray, dispatch, navigation,\n}) {\n  debugger;\n  const [characterList, setCharacterList] = useState([]);\n  const [addCharacterModalView, setAddCharacterModalView] = useState(false);\n  const isFocused = useIsFocused();\n\n  const [newCharacterName, setNewCharacterName] = useState('Name');\n  const [newCharacterGame, setNewCharacterGame] = useState('Game');\n  const [newCharacterRace, setNewCharacterRace] = useState('Race');\n  const [newCharacterClass, setNewCharacterClass] = useState('Class');\n  const [newCharacterLvl, setNewCharacterLvl] = useState('Level');\n\n  useEffect(() => {\n    if (!userId?.length) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    } else if (!userItem?._id) {\n      dispatch(loadUser(userId));\n      setCharacterList([]);\n    }\n    if (userId && (!charactersArray || !charactersArray?.length)) {\n      dispatch(loadCharactersByOwner(userId));\n    }\n    setCharacterList(charactersArray || null);\n  }, [userItem, isFocused, userId, charactersArray, characterList]);\n\n  const newCharacter = {\n    name: '',\n    game: '',\n    race: '',\n    lvl: '',\n    characterClass: '',\n    owner: userId,\n    sheet: {\n      public: true,\n      url: '',\n    },\n    inventory: {\n      public: true,\n      categories: [],\n    },\n    notes: {\n      public: true,\n      characterNotes: [],\n    },\n  };\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <ScrollView style={styles.container}>\n        {characterList?.length ? (\n          <View style={styles.characterList}>\n            <View style={styles.title__bar} />\n            <Text style={styles.characterList__title}>{`${userItem.userName} Characters`}</Text>\n            <View style={styles.title__bar} />\n            <View style={styles.characterList__list}>\n              {characterList.map((character) => (\n                <TouchableOpacity\n                  style={styles.characterList__list__block}\n                  key={`${character._id}${Math.random()}`}\n                  onPress={() => {\n                    dispatch(setCharacterId(character._id));\n                    navigation.navigate('CharacterDetail');\n                  }}\n                >\n                  <View style={styles.characterList__list__block__row}>\n                    <View style={styles.characterList__character__firstRow__name__block}>\n                      <Text style={styles.characterList__character__firstRow__name__text}>\n                        {character.name}\n                      </Text>\n                    </View>\n                    <Text style={styles.characterList__character__firstRow__text}>\n                      Level:\n                      {' '}\n                      {character.lvl}\n                    </Text>\n                  </View>\n                  <View style={styles.characterList__list__block__row}>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.game}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.race}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.characterClass}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n\n          </View>\n        ) : (\n          <View style={styles.characterList}>\n            <Text style={styles.characterList__title}>You have no characters</Text>\n            <Text style={styles.characterList__title}>Add a character to start!</Text>\n          </View>\n        )}\n        <Overlay\n          name=\"add character modal\"\n          isVisible={addCharacterModalView}\n          overlayStyle={styles.addCharacterModal}\n          backdropStyle={styles.addCharacterModal__background}\n          animationType=\"fade\"\n          onBackdropPress={() => {\n            displayAddCharacterModal(\n              setAddCharacterModalView, addCharacterModalView,\n            );\n            setNewCharacterName('Name');\n            setNewCharacterGame('Game');\n            setNewCharacterRace('Race');\n            setNewCharacterClass('Class');\n            setNewCharacterLvl('Level');\n          }}\n        >\n          <View style={styles.addCharacterModal__block}>\n            <Text style={styles.addCharacterModal__title}>\n              Add a new character\n            </Text>\n            <View style={styles.addCharacterModal__row}>\n              <Text style={styles.addCharacterModal__text}>Name:</Text>\n              <View style={styles.addCharacterModal__input}>\n                <TextInput\n                  style={styles.addCharacterModal__textInput}\n                  value={newCharacterName}\n                  onChangeText={(text) => setNewCharacterName(text)}\n                />\n              </View>\n            </View>\n            <View style={styles.addCharacterModal__row}>\n              <Text style={styles.addCharacterModal__text}>Game:</Text>\n              <View style={styles.addCharacterModal__input}>\n                <TextInput\n                  style={styles.addCharacterModal__textInput}\n                  value={newCharacterGame}\n                  onChangeText={(text) => { newCharacter.game = text; }}\n                />\n              </View>\n            </View>\n            <View style={styles.addCharacterModal__row}>\n              <Text style={styles.addCharacterModal__text}>Race:</Text>\n              <View style={styles.addCharacterModal__input}>\n                <TextInput\n                  style={styles.addCharacterModal__textInput}\n                  value={newCharacterRace}\n                  onChangeText={(text) => { newCharacter.game = text; }}\n                />\n              </View>\n            </View>\n            <View style={styles.addCharacterModal__row}>\n              <Text style={styles.addCharacterModal__text}>Class:</Text>\n              <View style={styles.addCharacterModal__input}>\n                <TextInput\n                  style={styles.addCharacterModal__textInput}\n                  value={newCharacterClass}\n                  onChangeText={(text) => { newCharacter.game = text; }}\n                />\n              </View>\n            </View>\n            <View style={styles.addCharacterModal__row}>\n              <Text style={styles.addCharacterModal__text}>Level:</Text>\n              <View style={styles.addCharacterModal__input}>\n                <TextInput\n                  style={styles.addCharacterModal__textInput}\n                  value={newCharacterLvl}\n                  onChangeText={(text) => { newCharacter.game = text; }}\n                />\n              </View>\n            </View>\n            <Button\n              title=\"Create Character\"\n              buttonStyle={styles.buttonConfirmAddCharacterModal}\n              onPress={() => {\n                newCharacter.owner = userId;\n                dispatch(createCharacter(newCharacter));\n                setCharacterList(characterList.push(newCharacter));\n                setAddCharacterModalView(!addCharacterModalView);\n              }}\n            />\n          </View>\n        </Overlay>\n\n      </ScrollView>\n      <TouchableOpacity\n        style={styles.addIcon__block}\n        onPress={() => setAddCharacterModalView(!addCharacterModalView)}\n      >\n        <Image source={addIcon} style={styles.icon} />\n      </TouchableOpacity>\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ usersReducer, charactersReducer }) {\n  return {\n    userItem: usersReducer.userItem,\n    userId: usersReducer.userId,\n    charactersArray: charactersReducer.charactersArray,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);\n"]},"metadata":{},"sourceType":"module"}