{"ast":null,"code":"var _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/CharacterInventory.jsx\";\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Overlay, Button } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterInventoryStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport addIcon from \"../../images/add-icon.png\";\n\nfunction CharacterInventory(_ref) {\n  var _this = this;\n\n  var characterItem = _ref.characterItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n  debugger;\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, characterItem ? React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inventory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.inventory__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.inventory__title__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, characterItem.name + \" Inventory\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  })), characterItem.inventory.categories.map(function (category) {\n    return React.createElement(View, {\n      style: styles.inventory__category,\n      key: performance.now(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.inventory__category__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, category.title), category.items.map(function (item) {\n      var properties = Object.keys(item);\n      return React.createElement(View, {\n        style: styles.inventory__category__item,\n        key: performance.now(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.inventory__category__item__title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.inventory__category__item__title__text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, item.itemTitle)), properties.map(function (property) {\n        if (property !== 'itemTitle') {\n          return React.createElement(View, {\n            style: styles.inventory__category__item__row,\n            key: performance.now(),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            style: styles.inventory__category__item__text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 31\n            }\n          }, \"\" + property), React.createElement(Text, {\n            style: styles.inventory__category__item__text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 31\n            }\n          }, item[property]));\n        }\n      }));\n    }));\n  }))) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 40,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"No Character\")), React.createElement(Overlay, {\n    name: \"add character modal\",\n    isVisible: addCharacterModalView,\n    overlayStyle: styles.addCharacterModal,\n    backdropStyle: styles.addCharacterModal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      displayAddCharacterModal(setAddCharacterModalView, addCharacterModalView);\n      setNewCharacter(newCharacterModel);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Hola\")), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: addIcon,\n    style: styles.addIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterInventory);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/CharacterInventory.jsx"],"names":["React","Overlay","Button","connect","NavigationBar","styles","absalomBackground","addIcon","CharacterInventory","characterItem","userId","dispatch","navigation","backgroundImage","container","inventory","inventory__title","title__bar","inventory__title__text","name","categories","map","category","inventory__category","performance","now","inventory__category__title","title","items","item","properties","Object","keys","inventory__category__item","inventory__category__item__title","inventory__category__item__title__text","itemTitle","property","inventory__category__item__row","inventory__category__item__text","marginTop","textAlign","addCharacterModalView","addCharacterModal","addCharacterModal__background","displayAddCharacterModal","setAddCharacterModalView","setNewCharacter","newCharacterModel","addIcon__block","mapStateToProps","charactersReducer","usersReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  ScrollView, ImageBackground, TextInput,\n  View, Text, TouchableOpacity, Image,\n} from 'react-native';\nimport { Overlay, Button } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterInventoryStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport addIcon from '../../images/add-icon.png';\n\nfunction CharacterInventory({\n  characterItem, userId, dispatch, navigation,\n}) {\n  debugger;\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      {characterItem ? (\n        <ScrollView style={styles.container}>\n          <View style={styles.inventory}>\n            <View style={styles.inventory__title}>\n              <View style={styles.title__bar} />\n              <Text style={styles.inventory__title__text}>{`${characterItem.name} Inventory`}</Text>\n              <View style={styles.title__bar} />\n            </View>\n            {characterItem.inventory.categories.map((category) => (\n              <View style={styles.inventory__category} key={performance.now()}>\n                <Text style={styles.inventory__category__title}>{category.title}</Text>\n                {category.items.map((item) => {\n                  const properties = Object.keys(item);\n                  return (\n                    <View style={styles.inventory__category__item} key={performance.now()}>\n                      <View style={styles.inventory__category__item__title}>\n                        <Text\n                          style={styles.inventory__category__item__title__text}\n                        >\n                          {item.itemTitle}\n                        </Text>\n                      </View>\n                      {properties.map((property) => {\n                        if (property !== 'itemTitle') {\n                          return (\n                            <View\n                              style={styles.inventory__category__item__row}\n                              key={performance.now()}\n                            >\n                              <Text style={styles.inventory__category__item__text}>{`${property}`}</Text>\n                              <Text\n                                style={styles.inventory__category__item__text}\n                              >\n                                {item[property]}\n\n                              </Text>\n                            </View>\n                          );\n                        }\n                      })}\n                    </View>\n                  );\n                })}\n              </View>\n            ))}\n          </View>\n        </ScrollView>\n      ) : (\n        <View>\n          <Text style={{ marginTop: 40, textAlign: 'center' }}>No Character</Text>\n        </View>\n      )}\n      <Overlay\n        name=\"add character modal\"\n        isVisible={addCharacterModalView}\n        overlayStyle={styles.addCharacterModal}\n        backdropStyle={styles.addCharacterModal__background}\n        animationType=\"fade\"\n        onBackdropPress={() => {\n          displayAddCharacterModal(setAddCharacterModalView, addCharacterModalView);\n          setNewCharacter(newCharacterModel);\n        }}\n      >\n        <Text>Hola</Text>\n      </Overlay>\n\n      <TouchableOpacity\n        style={styles.addIcon__block}\n      >\n        <Image source={addIcon} style={styles.addIcon} />\n      </TouchableOpacity>\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterInventory);\n"]},"metadata":{},"sourceType":"module"}