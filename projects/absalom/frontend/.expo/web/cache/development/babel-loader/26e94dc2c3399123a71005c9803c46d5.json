{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport function updateUserName(userItem, newValue, updateUser, dispatch, marker) {\n  debugger;\n\n  var newUser = _objectSpread({}, userItem);\n\n  switch (marker) {\n    case 'user':\n      if (newValue.length) {\n        newUser.userName = newValue;\n      } else {\n        newUser.userName = 'New User';\n      }\n\n      break;\n\n    case 'games':\n      newUser.favouriteGames = _toConsumableArray(newValue);\n      break;\n\n    case 'languages':\n      newUser.languages = _toConsumableArray(newValue);\n      break;\n\n    default:\n      break;\n  }\n\n  dispatch(updateUser(newUser._id, newUser));\n}\nexport function changeListValue(value, text) {\n  value.title = text;\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/UserDetail/UserDetailFunctions.js"],"names":["updateUserName","userItem","newValue","updateUser","dispatch","marker","newUser","length","userName","favouriteGames","languages","_id","changeListValue","value","text","title"],"mappings":";;;;;;;AAAA,OAAO,SAASA,cAAT,CAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,UAA5C,EAAwDC,QAAxD,EAAkEC,MAAlE,EAA0E;AAC/E;;AACA,MAAMC,OAAO,qBAAQL,QAAR,CAAb;;AAEA,UAAQI,MAAR;AACE,SAAK,MAAL;AACE,UAAIH,QAAQ,CAACK,MAAb,EAAqB;AACnBD,QAAAA,OAAO,CAACE,QAAR,GAAmBN,QAAnB;AACD,OAFD,MAEO;AACLI,QAAAA,OAAO,CAACE,QAAR,GAAmB,UAAnB;AACD;;AACD;;AACF,SAAK,OAAL;AACEF,MAAAA,OAAO,CAACG,cAAR,sBAA6BP,QAA7B;AACA;;AACF,SAAK,WAAL;AACEI,MAAAA,OAAO,CAACI,SAAR,sBAAwBR,QAAxB;AACA;;AACF;AACE;AAfJ;;AAiBAE,EAAAA,QAAQ,CAACD,UAAU,CAACG,OAAO,CAACK,GAAT,EAAcL,OAAd,CAAX,CAAR;AACD;AAED,OAAO,SAASM,eAAT,CAAyBC,KAAzB,EAAgCC,IAAhC,EAAsC;AAC3CD,EAAAA,KAAK,CAACE,KAAN,GAAcD,IAAd;AACD","sourcesContent":["export function updateUserName(userItem, newValue, updateUser, dispatch, marker) {\n  debugger;\n  const newUser = { ...userItem };\n\n  switch (marker) {\n    case 'user':\n      if (newValue.length) {\n        newUser.userName = newValue;\n      } else {\n        newUser.userName = 'New User';\n      }\n      break;\n    case 'games':\n      newUser.favouriteGames = [...newValue];\n      break;\n    case 'languages':\n      newUser.languages = [...newValue];\n      break;\n    default:\n      break;\n  }\n  dispatch(updateUser(newUser._id, newUser));\n}\n\nexport function changeListValue(value, text) {\n  value.title = text;\n}\n"]},"metadata":{},"sourceType":"module"}