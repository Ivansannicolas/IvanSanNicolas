{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterSheet/CharacterSheet.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Overlay, Button } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport ImageZoom from 'react-native-image-pan-zoom';\nimport { connect } from 'react-redux';\nimport pickImageFromDevice from \"./CharacterSheetFunctions/CharacterSheetPickImage\";\nimport addImage from \"./CharacterSheetFunctions/CharacterSheetAddImage\";\nimport editImage from \"./CharacterSheetFunctions/CharacterSheetEditImage\";\nimport deleteImage from \"./CharacterSheetFunctions/CharacterSheetDeleteImage\";\nimport { updateCharacter, loadError } from \"../../redux/actions/characterActions\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterSheetStyles\";\nimport addIcon from \"../../images/add-icon-blue.png\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport defaultImage from \"../../images/default-image.png\";\n\nfunction CharacterSheet(_ref) {\n  var _this = this;\n\n  var characterItem = _ref.characterItem,\n      navigation = _ref.navigation,\n      userItem = _ref.userItem,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fullImageModalView = _useState4[0],\n      setFullImageModalView = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fullImageModalValue = _useState6[0],\n      setFullImageModalValue = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageKey = _useState8[0],\n      setImageKey = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editImageModalView = _useState10[0],\n      setEditImageModalView = _useState10[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    setImages(characterItem.sheet.uploads);\n  }, [characterItem]);\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.characterSheet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, characterItem.name + \" Sheet\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), characterItem.sheet.uploads.length ? images.map(function (image) {\n    return image.imageBase64 ? React.createElement(View, {\n      key: performance.now(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      activeOpacity: 0.8,\n      style: styles.characterSheet__image__container,\n      onPress: function onPress() {\n        setFullImageModalValue(image.imageBase64);\n        setFullImageModalView(!fullImageModalView);\n      },\n      onLongPress: function onLongPress() {\n        setImageKey(image.uniqueKey);\n        setEditImageModalView(!editImageModalView);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      style: styles.characterSheet__image,\n      source: {\n        uri: \"data:image/png;base64,\" + image.imageBase64\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }))) : React.createElement(View, {\n      key: performance.now(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      activeOpacity: 0.8,\n      style: styles.characterSheet__image__container,\n      onPress: function onPress() {\n        setImageKey(image.uniqueKey);\n        setFullImageModalValue(image.imageBase64);\n        setFullImageModalView(!fullImageModalView);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      style: styles.characterSheet__image,\n      source: defaultImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })));\n  }) : React.createElement(TouchableOpacity, {\n    style: styles.characterSheet__no_images,\n    onPress: function onPress() {\n      return pickImageFromDevice(ImagePicker, characterItem, addImage, updateCharacter, dispatch, loadError);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.characterSheet__no_images__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Add some images to start!\")))), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    onPress: function onPress() {\n      return pickImageFromDevice(ImagePicker, characterItem, addImage, updateCharacter, dispatch, loadError);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: addIcon,\n    style: styles.addIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), React.createElement(Overlay, {\n    name: \"add image modal\",\n    isVisible: fullImageModalView,\n    overlayStyle: styles.imageModal,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setFullImageModalView(!fullImageModalView);\n      setFullImageModalValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageZoom, {\n    cropWidth: Dimensions.get('window').width,\n    cropHeight: Dimensions.get('window').height,\n    imageWidth: 380,\n    imageHeight: 537.43,\n    enableSwipeDown: true,\n    onSwipeDown: function onSwipeDown() {\n      return setFullImageModalView(!fullImageModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.characterSheet__image,\n    source: {\n      uri: \"data:image/jpeg;base64,\" + fullImageModalValue\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }))), React.createElement(Overlay, {\n    name: \"edit image modal\",\n    isVisible: editImageModalView,\n    overlayStyle: styles.editModal,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setEditImageModalView(!editImageModalView);\n      setFullImageModalValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.editModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Edit Image\"), React.createElement(View, {\n    style: styles.editModal__options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    buttonStyle: styles.editModal__editButton,\n    title: \"Choose Image\",\n    onPress: function onPress() {\n      pickImageFromDevice(ImagePicker, characterItem, editImage, updateCharacter, dispatch, imageKey, loadError);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styles.editModal__deleteButton,\n    title: \"Delete\",\n    onPress: function onPress() {\n      setEditImageModalView(!editImageModalView);\n      deleteImage(characterItem, updateCharacter, dispatch, imageKey);\n      setFullImageModalValue('');\n      setImageKey('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })))), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userItem._id,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    characterItem: charactersReducer.characterItem,\n    userItem: usersReducer.userItem\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterSheet);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterSheet/CharacterSheet.jsx"],"names":["React","useState","useEffect","Overlay","Button","ImagePicker","ImageZoom","connect","pickImageFromDevice","addImage","editImage","deleteImage","updateCharacter","loadError","NavigationBar","styles","addIcon","absalomBackground","defaultImage","CharacterSheet","characterItem","navigation","userItem","dispatch","images","setImages","fullImageModalView","setFullImageModalView","fullImageModalValue","setFullImageModalValue","imageKey","setImageKey","editImageModalView","setEditImageModalView","Platform","OS","requestCameraRollPermissionsAsync","status","alert","sheet","uploads","backgroundImage","container","characterSheet","title__bar","characterList__title","name","length","map","image","imageBase64","performance","now","characterSheet__image__container","uniqueKey","characterSheet__image","uri","characterSheet__no_images","characterSheet__no_images__text","addIcon__block","imageModal","Dimensions","get","width","height","editModal","editModal__block","editModal__text","editModal__options","editModal__editButton","editModal__deleteButton","_id","mapStateToProps","charactersReducer","usersReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Image, View, Platform, Text, Dimensions,\n  ImageBackground, ScrollView, TouchableOpacity,\n} from 'react-native';\nimport { Overlay, Button } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport ImageZoom from 'react-native-image-pan-zoom';\nimport { connect } from 'react-redux';\nimport pickImageFromDevice from './CharacterSheetFunctions/CharacterSheetPickImage';\nimport addImage from './CharacterSheetFunctions/CharacterSheetAddImage';\nimport editImage from './CharacterSheetFunctions/CharacterSheetEditImage';\nimport deleteImage from './CharacterSheetFunctions/CharacterSheetDeleteImage';\nimport { updateCharacter, loadError } from '../../redux/actions/characterActions';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterSheetStyles';\nimport addIcon from '../../images/add-icon-blue.png';\nimport absalomBackground from '../../images/absalom-background.png';\nimport defaultImage from '../../images/default-image.png';\n\nfunction CharacterSheet({\n  characterItem, navigation, userItem, dispatch,\n}) {\n  const [images, setImages] = useState([]);\n  const [fullImageModalView, setFullImageModalView] = useState(false);\n  const [fullImageModalValue, setFullImageModalValue] = useState('');\n  const [imageKey, setImageKey] = useState('');\n  const [editImageModalView, setEditImageModalView] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestCameraRollPermissionsAsync();\n        if (status !== 'granted') {\n          alert('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    setImages(characterItem.sheet.uploads);\n  }, [characterItem]);\n\n  return (\n    <ImageBackground\n      source={absalomBackground}\n      style={styles.backgroundImage}\n    >\n      <ScrollView style={styles.container}>\n        <View style={styles.characterSheet}>\n          <View style={styles.title__bar} />\n          <Text style={styles.characterList__title}>{`${characterItem.name} Sheet`}</Text>\n          <View style={styles.title__bar} />\n          {characterItem.sheet.uploads.length ? (\n            images.map((image) => (\n              image.imageBase64 ? (\n                <View key={performance.now()}>\n                  <TouchableOpacity\n                    activeOpacity={0.8}\n                    style={styles.characterSheet__image__container}\n                    onPress={() => {\n                      setFullImageModalValue(image.imageBase64);\n                      setFullImageModalView(!fullImageModalView);\n                    }}\n                    onLongPress={() => {\n                      setImageKey(image.uniqueKey);\n                      setEditImageModalView(!editImageModalView);\n                    }}\n                  >\n                    <Image\n                      style={styles.characterSheet__image}\n                      source={{ uri: `data:image/png;base64,${image.imageBase64}` }}\n                    />\n                  </TouchableOpacity>\n                </View>\n              ) : (\n                <View key={performance.now()}>\n                  <TouchableOpacity\n                    activeOpacity={0.8}\n                    style={styles.characterSheet__image__container}\n                    onPress={() => {\n                      setImageKey(image.uniqueKey);\n                      setFullImageModalValue(image.imageBase64);\n                      setFullImageModalView(!fullImageModalView);\n                    }}\n                  >\n                    <Image\n                      style={styles.characterSheet__image}\n                      source={defaultImage}\n                    />\n                  </TouchableOpacity>\n                </View>\n              )))\n          ) : (\n            <TouchableOpacity\n              style={styles.characterSheet__no_images}\n              onPress={() => pickImageFromDevice(\n                ImagePicker, characterItem, addImage, updateCharacter, dispatch, loadError,\n              )}\n            >\n              <Text style={styles.characterSheet__no_images__text}>Add some images to start!</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      </ScrollView>\n      <TouchableOpacity\n        style={styles.addIcon__block}\n        onPress={() => pickImageFromDevice(\n          ImagePicker, characterItem, addImage, updateCharacter, dispatch, loadError,\n        )}\n      >\n        <Image source={addIcon} style={styles.addIcon} />\n      </TouchableOpacity>\n      <Overlay\n        name=\"add image modal\"\n        isVisible={fullImageModalView}\n        overlayStyle={styles.imageModal}\n        animationType=\"fade\"\n        onBackdropPress={() => {\n          setFullImageModalView(!fullImageModalView);\n          setFullImageModalValue('');\n        }}\n      >\n        <ImageZoom\n          cropWidth={Dimensions.get('window').width}\n          cropHeight={Dimensions.get('window').height}\n          imageWidth={380}\n          imageHeight={537.43}\n          enableSwipeDown\n          onSwipeDown={() => setFullImageModalView(!fullImageModalView)}\n        >\n          <Image\n            style={styles.characterSheet__image}\n            source={{ uri: `data:image/jpeg;base64,${fullImageModalValue}` }}\n          />\n        </ImageZoom>\n      </Overlay>\n      <Overlay\n        name=\"edit image modal\"\n        isVisible={editImageModalView}\n        overlayStyle={styles.editModal}\n        animationType=\"fade\"\n        onBackdropPress={() => {\n          setEditImageModalView(!editImageModalView);\n          setFullImageModalValue('');\n        }}\n      >\n        <View style={styles.editModal__block}>\n          <Text style={styles.editModal__text}>Edit Image</Text>\n          <View style={styles.editModal__options}>\n            <Button\n              buttonStyle={styles.editModal__editButton}\n              title=\"Choose Image\"\n              onPress={() => {\n                pickImageFromDevice(\n                  ImagePicker, characterItem, editImage,\n                  updateCharacter, dispatch, imageKey, loadError,\n                );\n              }}\n            />\n            <Button\n              buttonStyle={styles.editModal__deleteButton}\n              title=\"Delete\"\n              onPress={() => {\n                setEditImageModalView(!editImageModalView);\n                deleteImage(\n                  characterItem, updateCharacter,\n                  dispatch, imageKey,\n                );\n                setFullImageModalValue('');\n                setImageKey('');\n              }}\n            />\n          </View>\n        </View>\n      </Overlay>\n      <NavigationBar navigation={navigation} userId={userItem._id} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n    userItem: usersReducer.userItem,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterSheet);\n"]},"metadata":{},"sourceType":"module"}