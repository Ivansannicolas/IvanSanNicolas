{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterSheet/CharacterSheet.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport { connect } from 'react-redux';\nimport Base64 from 'Base64';\nimport axios from 'axios';\nimport addImage from \"./CharacterSheetFunctions\";\nimport { updateCharacter } from \"../../redux/actions/characterActions\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterSheetStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport defaultImage from \"../../images/default-image.png\";\n\nfunction CharacterSheet(_ref) {\n  var _this = this;\n\n  var characterItem = _ref.characterItem,\n      navigation = _ref.navigation,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(characterItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      images = _useState4[0],\n      setImages = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    setCharacter(characterItem);\n    setImages(characterItem.sheet.uploads);\n  }, [characterItem]);\n\n  var pickImage = function pickImage(actualCharacter, imageDefault, updateCharacterFunction, dispatchFunction) {\n    var result, uri, apiUrl, uriParts, fileType, formData, options, imageBase64;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1,\n              base64: true\n            }));\n\n          case 2:\n            result = _context2.sent;\n            uri = result.uri;\n            apiUrl = 'https://gumdrop.ai/delay';\n            uriParts = uri.split('.');\n            fileType = uri[uri.length - 1];\n            formData = new FormData();\n            formData.append('photo', {\n              uri: uri,\n              name: \"photo.\" + fileType,\n              type: \"image/\" + fileType\n            });\n            options = {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json'\n              }\n            };\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(axios(apiUrl, options));\n\n          case 12:\n            imageBase64 = _context2.sent;\n\n            if (!result.cancelled) {\n              setImages([].concat(_toConsumableArray(images), [result.base64]));\n              console.log(result.base64);\n              addImage(actualCharacter, imageDefault, imageBase64, updateCharacterFunction, dispatchFunction);\n            }\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      marginTop: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: function onPress() {\n      return pickImage(character, defaultImage, updateCharacter, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), images.length ? images.map(function (image) {\n    return React.createElement(TouchableOpacity, {\n      key: performance.now(),\n      onPress: function onPress() {\n        return console.log(\"BASE64: \" + image.imageBase64);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: \"data:image/jpeg;base64,\" + image.imageBase64\n      },\n      style: {\n        width: 400,\n        height: 400\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }));\n  }) : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Ei\"))), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterSheet);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterSheet/CharacterSheet.jsx"],"names":["React","useState","useEffect","ImagePicker","Constants","connect","Base64","axios","addImage","updateCharacter","NavigationBar","styles","absalomBackground","defaultImage","CharacterSheet","characterItem","navigation","userId","dispatch","character","setCharacter","images","setImages","Platform","OS","requestCameraRollPermissionsAsync","status","alert","sheet","uploads","pickImage","actualCharacter","imageDefault","updateCharacterFunction","dispatchFunction","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","base64","result","uri","apiUrl","uriParts","split","fileType","length","formData","FormData","append","name","type","options","method","headers","Accept","imageBase64","cancelled","console","log","backgroundImage","marginTop","flex","alignItems","justifyContent","map","image","performance","now","width","height","mapStateToProps","charactersReducer","usersReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button, Image, View, Platform, Text,\n  ImageBackground, ScrollView, TouchableOpacity,\n} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport { connect } from 'react-redux';\nimport Base64 from 'Base64';\nimport axios from 'axios';\nimport addImage from './CharacterSheetFunctions';\nimport { updateCharacter } from '../../redux/actions/characterActions';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterSheetStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport defaultImage from '../../images/default-image.png';\n\nfunction CharacterSheet({\n  characterItem, navigation, userId, dispatch,\n}) {\n  const [character, setCharacter] = useState(characterItem);\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestCameraRollPermissionsAsync();\n        if (status !== 'granted') {\n          alert('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    setCharacter(characterItem);\n    setImages(characterItem.sheet.uploads);\n  }, [characterItem]);\n\n  const pickImage = async (\n    actualCharacter,\n    imageDefault,\n    updateCharacterFunction,\n    dispatchFunction,\n  ) => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n      base64: true,\n    });\n\n    const { uri } = result;\n\n    const apiUrl = 'https://gumdrop.ai/delay';\n\n    const uriParts = uri.split('.');\n    const fileType = uri[uri.length - 1];\n\n    const formData = new FormData();\n    formData.append('photo', {\n      uri,\n      name: `photo.${fileType}`,\n      type: `image/${fileType}`,\n    });\n\n    const options = {\n      method: 'POST',\n      // body: formData,\n      headers: {\n        Accept: 'application/json',\n        // 'Content-Type': 'multipart/form-data',\n      },\n    };\n\n    const imageBase64 = await axios(apiUrl, options);\n\n    if (!result.cancelled) {\n      setImages([...images, result.base64]);\n      console.log(result.base64);\n      addImage(\n        actualCharacter,\n        imageDefault,\n        imageBase64,\n        updateCharacterFunction,\n        dispatchFunction,\n      );\n    }\n  };\n\n  return (\n    <ImageBackground\n      source={absalomBackground}\n      style={styles.backgroundImage}\n    >\n      <ScrollView style={{ marginTop: 100 }}>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Button\n            title=\"Pick an image from camera roll\"\n            onPress={() => pickImage(\n              character, defaultImage, updateCharacter, dispatch,\n            )}\n          />\n          {images.length ? (\n            images.map((image) => (\n              <TouchableOpacity\n                key={performance.now()}\n                onPress={() => console.log(`BASE64: ${image.imageBase64}`)}\n              >\n                <Image source={{ uri: `data:image/jpeg;base64,${image.imageBase64}` }} style={{ width: 400, height: 400 }} />\n              </TouchableOpacity>\n            ))\n          ) : (\n            <Text>Ei</Text>\n          )}\n        </View>\n      </ScrollView>\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterSheet);\n"]},"metadata":{},"sourceType":"module"}