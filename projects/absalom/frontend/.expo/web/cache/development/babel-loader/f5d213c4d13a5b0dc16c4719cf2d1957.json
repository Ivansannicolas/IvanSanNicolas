{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterDetail/CharacterDetail.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { loadCharacter, updateCharacter } from \"../../redux/actions/characterActions\";\nimport styles from \"./CharacterDetailStyles\";\nimport visibilityPrivateIcon from \"../../images/character-private-icon.png\";\nimport visibilityPublicIcon from \"../../images/character-public-icon.png\";\nimport characterSheetIcon from \"../../images/character-sheet-icon.png\";\nimport characterInventoryIcon from \"../../images/character-inventory-icon.png\";\nimport characterNotesIcon from \"../../images/character-notes-icon.png\";\n\nfunction CharacterDetail(_ref) {\n  var characterItem = _ref.characterItem,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(characterItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  var _useState3 = useState(characterItem.name),\n      _useState4 = _slicedToArray(_useState3, 2),\n      characterName = _useState4[0],\n      setCharacterName = _useState4[1];\n\n  var _useState5 = useState(characterItem.game),\n      _useState6 = _slicedToArray(_useState5, 2),\n      characterGame = _useState6[0],\n      setCharacterGame = _useState6[1];\n\n  var _useState7 = useState(characterItem.race),\n      _useState8 = _slicedToArray(_useState7, 2),\n      characterRace = _useState8[0],\n      setCharacterRace = _useState8[1];\n\n  var _useState9 = useState(characterItem.characterClass),\n      _useState10 = _slicedToArray(_useState9, 2),\n      characterClass = _useState10[0],\n      setCharacterClass = _useState10[1];\n\n  var _useState11 = useState(characterItem.lvl),\n      _useState12 = _slicedToArray(_useState11, 2),\n      characterLvl = _useState12[0],\n      setCharacterLvl = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      editModalView = _useState14[0],\n      setEditModalView = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      editModalTextValue = _useState16[0],\n      setEditModalTextValue = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      characterModalField = _useState18[0],\n      setCharacterModalField = _useState18[1];\n\n  useEffect(function () {\n    if (!character._id) {\n      dispatch(loadCharacter('5fc807a93a0fe248776f937a'));\n    }\n\n    setCharacter(characterItem);\n    setCharacterName(characterItem.name);\n    setCharacterGame(characterItem.game);\n    setCharacterRace(characterItem.race);\n    setCharacterClass(characterItem.characterClass);\n    setCharacterLvl(characterItem.lvl);\n  }, [characterItem, character]);\n  var backgroundImage = {\n    uri: 'https://trello-attachments.s3.amazonaws.com/5f8ca3639574d3550b3ad495/5fc038fa8e33794c73d2f2fb/2a011a9d89ff63df678311667a0173cd/Portfolio19.png'\n  };\n  var setVisibility = {\n    sheetVisibility: 'sheetVisibility',\n    inventoryVisibility: 'inventoryVisibility',\n    notesVisibility: 'notesVisibility'\n  };\n\n  function changeSetVisibility(actualCharacter, setCharacterFunction, setId, actualSetVisibility) {\n    var updatedcharacter = _objectSpread({}, actualCharacter);\n\n    var characterId = updatedcharacter._id;\n\n    switch (setId) {\n      case actualSetVisibility.inventoryVisibility:\n        if (updatedcharacter.inventory.public) {\n          updatedcharacter.inventory.public = false;\n        } else {\n          updatedcharacter.inventory.public = true;\n        }\n\n        break;\n\n      case actualSetVisibility.sheetVisibility:\n        if (updatedcharacter.sheet.public) {\n          updatedcharacter.sheet.public = false;\n        } else {\n          updatedcharacter.sheet.public = true;\n        }\n\n        break;\n\n      case actualSetVisibility.notesVisibility:\n        if (updatedcharacter.notes.public) {\n          updatedcharacter.notes.public = false;\n        } else {\n          updatedcharacter.notes.public = true;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    setCharacterFunction(updatedcharacter);\n    dispatch(updateCharacter(characterId, updatedcharacter));\n  }\n\n  function displayEditModal() {\n    setEditModalView(!editModalView);\n  }\n\n  var editCharacterMethods = {\n    editCharacterName: function editCharacterName(actualCharacter, text, setCharacterFunction) {\n      var updatedCharacter = _objectSpread({}, actualCharacter);\n\n      var characterId = updatedCharacter._id;\n      updatedCharacter.name = text;\n      setCharacterFunction(text);\n      dispatch(updateCharacter(characterId, updatedCharacter));\n      displayEditModal();\n    },\n    editCharacterGame: function editCharacterGame(actualCharacter, text, setCharacterFunction) {\n      var updatedCharacter = _objectSpread({}, actualCharacter);\n\n      var characterId = updatedCharacter._id;\n      updatedCharacter.game = text;\n      setCharacterFunction(text);\n      dispatch(updateCharacter(characterId, updatedCharacter));\n    },\n    editCharacterRace: function editCharacterRace(actualCharacter, text, setCharacterFunction) {\n      var updatedCharacter = _objectSpread({}, actualCharacter);\n\n      var characterId = updatedCharacter._id;\n      updatedCharacter.race = text;\n      setCharacterFunction(text);\n      dispatch(updateCharacter(characterId, updatedCharacter));\n    },\n    editCharacterClass: function editCharacterClass(actualCharacter, text, setCharacterFunction) {\n      var updatedCharacter = _objectSpread({}, actualCharacter);\n\n      var characterId = updatedCharacter._id;\n      updatedCharacter.characterClass = text;\n      setCharacterFunction(text);\n      dispatch(updateCharacter(characterId, updatedCharacter));\n    },\n    editCharacterLvl: function editCharacterLvl(actualCharacter, text, setCharacterFunction) {\n      var updatedCharacter = _objectSpread({}, actualCharacter);\n\n      var characterId = updatedCharacter._id;\n      updatedCharacter.lvl = text;\n      setCharacterFunction(text);\n      dispatch(updateCharacter(characterId, updatedCharacter));\n    },\n    editName: 'editName',\n    editGame: 'editGame',\n    editRace: 'editRace',\n    editClass: 'editClass',\n    editLvl: 'editLvl'\n  };\n\n  function editCharacter(editType, actualCharacter, actualTextValue, characterMethods) {\n    switch (editType) {\n      case characterMethods.editName:\n        characterMethods.editCharacterName(actualCharacter, actualTextValue, setCharacterName);\n        break;\n\n      case characterMethods.editGame:\n        characterMethods.editCharacterGame(actualCharacter, actualTextValue, setCharacterGame);\n        break;\n\n      case characterMethods.editRace:\n        characterMethods.editCharacterGame(actualCharacter, actualTextValue, setCharacterRace);\n        break;\n\n      case characterMethods.editClass:\n        characterMethods.editCharacterGame(actualCharacter, actualTextValue, setCharacterClass);\n        break;\n\n      case characterMethods.editLvl:\n        characterMethods.editCharacterGame(actualCharacter, actualTextValue, setCharacterLvl);\n        break;\n\n      default:\n        break;\n    }\n\n    displayEditModal();\n  }\n\n  return React.createElement(ImageBackground, {\n    source: backgroundImage,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, character.name ? React.createElement(View, {\n    style: styles.character,\n    alwaysBounceVertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.character__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, character.name)), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.character__owner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.character__owner__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"User:\"), React.createElement(View, {\n    style: styles.character__owner__info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__owner__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, character.owner.userName), React.createElement(Image, {\n    source: {\n      uri: character.owner.profilePic\n    },\n    style: styles.character__owner__profilePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.character__description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"Name:\"), React.createElement(Button, {\n    style: styles.character__description__text,\n    title: characterName,\n    type: \"clear\",\n    onPress: function onPress() {\n      setEditModalTextValue(characterName);\n      displayEditModal(setCharacterModalField(editCharacterMethods.editName));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, \"Game:\"), React.createElement(Button, {\n    style: styles.character__description__text,\n    title: characterGame,\n    type: \"clear\",\n    onPress: function onPress() {\n      setEditModalTextValue(characterGame);\n      displayEditModal(setCharacterModalField(editCharacterMethods.editGame));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"race\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, \"Race:\"), React.createElement(Button, {\n    style: styles.character__description__text,\n    title: characterRace,\n    type: \"clear\",\n    onPress: function onPress() {\n      setEditModalTextValue(characterRace);\n      displayEditModal(setCharacterModalField(editCharacterMethods.editRace));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, \"Class:\"), React.createElement(Button, {\n    style: styles.character__description__text,\n    title: characterClass,\n    type: \"clear\",\n    onPress: function onPress() {\n      setEditModalTextValue(characterClass);\n      displayEditModal(setCharacterModalField(editCharacterMethods.editClass));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"lvl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, \"Level:\"), React.createElement(Button, {\n    style: styles.character__description__text,\n    title: characterLvl,\n    type: \"clear\",\n    onPress: function onPress() {\n      setEditModalTextValue(characterLvl);\n      setCharacterModalField(editCharacterMethods.editLvl);\n      displayEditModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.character__set,\n    name: \"sheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.set__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__set__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, \"Character Sheet:\"), React.createElement(Image, {\n    source: characterSheetIcon,\n    style: styles.character__set__icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSetVisibility(character, setCharacter, setVisibility.sheetVisibility, setVisibility);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, character.sheet.public ? React.createElement(Image, {\n    source: visibilityPublicIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.SheetVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }) : React.createElement(Image, {\n    source: visibilityPrivateIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.SheetVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    style: styles.character__set,\n    name: \"inventory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.set__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__set__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, \"Inventory:\"), React.createElement(Image, {\n    source: characterInventoryIcon,\n    style: styles.character__set__icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSetVisibility(character, setCharacter, setVisibility.inventoryVisibility, setVisibility);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, character.inventory.public ? React.createElement(Image, {\n    source: visibilityPublicIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.inventoryVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }\n  }) : React.createElement(Image, {\n    source: visibilityPrivateIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.inventoryVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    style: styles.character__set,\n    name: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.set__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__set__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, \"Notes:\"), React.createElement(Image, {\n    source: characterNotesIcon,\n    style: styles.character__set__icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSetVisibility(character, setCharacter, setVisibility.notesVisibility, setVisibility);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }\n  }, character.notes.public ? React.createElement(Image, {\n    source: visibilityPublicIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.notesVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 19\n    }\n  }) : React.createElement(Image, {\n    source: visibilityPrivateIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.notesVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    style: styles.character__button__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    type: \"solid\",\n    title: \"Delete Character\",\n    buttonStyle: styles.button__delete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  })), React.createElement(Overlay, {\n    isVisible: editModalView,\n    overlayStyle: styles.editModal,\n    backdropStyle: styles.editModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      return displayEditModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }, \"Edit Name\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setEditModalTextValue(text);\n    },\n    value: editModalTextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"Confirm\",\n    buttonStyle: styles.buttonConfirmEditModal,\n    onPress: function onPress() {\n      return editCharacter(characterModalField, character, editModalTextValue, editCharacterMethods);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  })))) : React.createElement(View, {\n    style: styles.character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.no__character__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, \"No Character\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }))));\n}\n\nCharacterDetail.propTypes = {\n  characterItem: PropTypes.shape({\n    name: PropTypes.string\n  }),\n  dispatch: PropTypes.func.isRequired\n};\nCharacterDetail.defaultProps = {\n  characterItem: {\n    name: null\n  }\n};\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer;\n  return {\n    characterItem: charactersReducer.characterItem\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterDetail);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterDetail/CharacterDetail.jsx"],"names":["React","useState","useEffect","Button","Overlay","connect","PropTypes","loadCharacter","updateCharacter","styles","visibilityPrivateIcon","visibilityPublicIcon","characterSheetIcon","characterInventoryIcon","characterNotesIcon","CharacterDetail","characterItem","dispatch","character","setCharacter","name","characterName","setCharacterName","game","characterGame","setCharacterGame","race","characterRace","setCharacterRace","characterClass","setCharacterClass","lvl","characterLvl","setCharacterLvl","editModalView","setEditModalView","editModalTextValue","setEditModalTextValue","characterModalField","setCharacterModalField","_id","backgroundImage","uri","setVisibility","sheetVisibility","inventoryVisibility","notesVisibility","changeSetVisibility","actualCharacter","setCharacterFunction","setId","actualSetVisibility","updatedcharacter","characterId","inventory","public","sheet","notes","displayEditModal","editCharacterMethods","editCharacterName","text","updatedCharacter","editCharacterGame","editCharacterRace","editCharacterClass","editCharacterLvl","editName","editGame","editRace","editClass","editLvl","editCharacter","editType","actualTextValue","characterMethods","container","character__title","title__bar","character__name","character__owner","character__owner__text","character__owner__info","owner","userName","profilePic","character__owner__profilePic","character__description","character__description__row","character__description__text","character__set","set__bar","character__set__text","character__set__icon","character__set__visible__icon","SheetVisibility","character__button__container","button__delete","editModal","editModal__background","editModal__block","buttonConfirmEditModal","no__character__title","propTypes","shape","string","func","isRequired","defaultProps","mapStateToProps","charactersReducer"],"mappings":";;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAKA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,aAAT,EAAwBC,eAAxB;AACA,OAAOC,MAAP;AAEA,OAAOC,qBAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,kBAAP;;AAEA,SAASC,eAAT,OAAsD;AAAA,MAA3BC,aAA2B,QAA3BA,aAA2B;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBAClBhB,QAAQ,CAACe,aAAD,CADU;AAAA;AAAA,MAC7CE,SAD6C;AAAA,MAClCC,YADkC;;AAAA,mBAEVlB,QAAQ,CAACe,aAAa,CAACI,IAAf,CAFE;AAAA;AAAA,MAE7CC,aAF6C;AAAA,MAE9BC,gBAF8B;;AAAA,mBAGVrB,QAAQ,CAACe,aAAa,CAACO,IAAf,CAHE;AAAA;AAAA,MAG7CC,aAH6C;AAAA,MAG9BC,gBAH8B;;AAAA,mBAIVxB,QAAQ,CAACe,aAAa,CAACU,IAAf,CAJE;AAAA;AAAA,MAI7CC,aAJ6C;AAAA,MAI9BC,gBAJ8B;;AAAA,mBAKR3B,QAAQ,CAACe,aAAa,CAACa,cAAf,CALA;AAAA;AAAA,MAK7CA,cAL6C;AAAA,MAK7BC,iBAL6B;;AAAA,oBAMZ7B,QAAQ,CAACe,aAAa,CAACe,GAAf,CANI;AAAA;AAAA,MAM7CC,YAN6C;AAAA,MAM/BC,eAN+B;;AAAA,oBAQVhC,QAAQ,CAAC,KAAD,CARE;AAAA;AAAA,MAQ7CiC,aAR6C;AAAA,MAQ9BC,gBAR8B;;AAAA,oBASAlC,QAAQ,CAAC,EAAD,CATR;AAAA;AAAA,MAS7CmC,kBAT6C;AAAA,MASzBC,qBATyB;;AAAA,oBAUEpC,QAAQ,CAAC,IAAD,CAVV;AAAA;AAAA,MAU7CqC,mBAV6C;AAAA,MAUxBC,sBAVwB;;AAYpDrC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACgB,SAAS,CAACsB,GAAf,EAAoB;AAClBvB,MAAAA,QAAQ,CAACV,aAAa,CAAC,0BAAD,CAAd,CAAR;AACD;;AACDY,IAAAA,YAAY,CAACH,aAAD,CAAZ;AACAM,IAAAA,gBAAgB,CAACN,aAAa,CAACI,IAAf,CAAhB;AACAK,IAAAA,gBAAgB,CAACT,aAAa,CAACO,IAAf,CAAhB;AACAK,IAAAA,gBAAgB,CAACZ,aAAa,CAACU,IAAf,CAAhB;AACAI,IAAAA,iBAAiB,CAACd,aAAa,CAACa,cAAf,CAAjB;AACAI,IAAAA,eAAe,CAACjB,aAAa,CAACe,GAAf,CAAf;AACD,GAVQ,EAUN,CAACf,aAAD,EAAgBE,SAAhB,CAVM,CAAT;AAYA,MAAMuB,eAAe,GAAG;AACtBC,IAAAA,GAAG,EAAE;AADiB,GAAxB;AAIA,MAAMC,aAAa,GAAG;AACpBC,IAAAA,eAAe,EAAE,iBADG;AAEpBC,IAAAA,mBAAmB,EAAE,qBAFD;AAGpBC,IAAAA,eAAe,EAAE;AAHG,GAAtB;;AAMA,WAASC,mBAAT,CAA6BC,eAA7B,EAA8CC,oBAA9C,EAAoEC,KAApE,EAA2EC,mBAA3E,EAAgG;AAC9F,QAAMC,gBAAgB,qBAAQJ,eAAR,CAAtB;;AACA,QAAMK,WAAW,GAAGD,gBAAgB,CAACZ,GAArC;;AACA,YAAQU,KAAR;AACE,WAAKC,mBAAmB,CAACN,mBAAzB;AACE,YAAIO,gBAAgB,CAACE,SAAjB,CAA2BC,MAA/B,EAAuC;AACrCH,UAAAA,gBAAgB,CAACE,SAAjB,CAA2BC,MAA3B,GAAoC,KAApC;AACD,SAFD,MAEO;AACLH,UAAAA,gBAAgB,CAACE,SAAjB,CAA2BC,MAA3B,GAAoC,IAApC;AACD;;AACD;;AACF,WAAKJ,mBAAmB,CAACP,eAAzB;AACE,YAAIQ,gBAAgB,CAACI,KAAjB,CAAuBD,MAA3B,EAAmC;AACjCH,UAAAA,gBAAgB,CAACI,KAAjB,CAAuBD,MAAvB,GAAgC,KAAhC;AACD,SAFD,MAEO;AACLH,UAAAA,gBAAgB,CAACI,KAAjB,CAAuBD,MAAvB,GAAgC,IAAhC;AACD;;AACD;;AACF,WAAKJ,mBAAmB,CAACL,eAAzB;AACE,YAAIM,gBAAgB,CAACK,KAAjB,CAAuBF,MAA3B,EAAmC;AACjCH,UAAAA,gBAAgB,CAACK,KAAjB,CAAuBF,MAAvB,GAAgC,KAAhC;AACD,SAFD,MAEO;AACLH,UAAAA,gBAAgB,CAACK,KAAjB,CAAuBF,MAAvB,GAAgC,IAAhC;AACD;;AACD;;AAEF;AACE;AAxBJ;;AA0BAN,IAAAA,oBAAoB,CAACG,gBAAD,CAApB;AACAnC,IAAAA,QAAQ,CAACT,eAAe,CAAC6C,WAAD,EAAcD,gBAAd,CAAhB,CAAR;AACD;;AAED,WAASM,gBAAT,GAA4B;AAC1BvB,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD;;AAED,MAAMyB,oBAAoB,GAAG;AAC3BC,IAAAA,iBAD2B,6BACTZ,eADS,EACQa,IADR,EACcZ,oBADd,EACoC;AAC7D,UAAMa,gBAAgB,qBAAQd,eAAR,CAAtB;;AACA,UAAMK,WAAW,GAAGS,gBAAgB,CAACtB,GAArC;AAEAsB,MAAAA,gBAAgB,CAAC1C,IAAjB,GAAwByC,IAAxB;AAEAZ,MAAAA,oBAAoB,CAACY,IAAD,CAApB;AACA5C,MAAAA,QAAQ,CAACT,eAAe,CAAC6C,WAAD,EAAcS,gBAAd,CAAhB,CAAR;AACAJ,MAAAA,gBAAgB;AACjB,KAV0B;AAW3BK,IAAAA,iBAX2B,6BAWTf,eAXS,EAWQa,IAXR,EAWcZ,oBAXd,EAWoC;AAC7D,UAAMa,gBAAgB,qBAAQd,eAAR,CAAtB;;AACA,UAAMK,WAAW,GAAGS,gBAAgB,CAACtB,GAArC;AAEAsB,MAAAA,gBAAgB,CAACvC,IAAjB,GAAwBsC,IAAxB;AAEAZ,MAAAA,oBAAoB,CAACY,IAAD,CAApB;AACA5C,MAAAA,QAAQ,CAACT,eAAe,CAAC6C,WAAD,EAAcS,gBAAd,CAAhB,CAAR;AACD,KAnB0B;AAoB3BE,IAAAA,iBApB2B,6BAoBThB,eApBS,EAoBQa,IApBR,EAoBcZ,oBApBd,EAoBoC;AAC7D,UAAMa,gBAAgB,qBAAQd,eAAR,CAAtB;;AACA,UAAMK,WAAW,GAAGS,gBAAgB,CAACtB,GAArC;AAEAsB,MAAAA,gBAAgB,CAACpC,IAAjB,GAAwBmC,IAAxB;AAEAZ,MAAAA,oBAAoB,CAACY,IAAD,CAApB;AACA5C,MAAAA,QAAQ,CAACT,eAAe,CAAC6C,WAAD,EAAcS,gBAAd,CAAhB,CAAR;AACD,KA5B0B;AA6B3BG,IAAAA,kBA7B2B,8BA6BRjB,eA7BQ,EA6BSa,IA7BT,EA6BeZ,oBA7Bf,EA6BqC;AAC9D,UAAMa,gBAAgB,qBAAQd,eAAR,CAAtB;;AACA,UAAMK,WAAW,GAAGS,gBAAgB,CAACtB,GAArC;AAEAsB,MAAAA,gBAAgB,CAACjC,cAAjB,GAAkCgC,IAAlC;AAEAZ,MAAAA,oBAAoB,CAACY,IAAD,CAApB;AACA5C,MAAAA,QAAQ,CAACT,eAAe,CAAC6C,WAAD,EAAcS,gBAAd,CAAhB,CAAR;AACD,KArC0B;AAsC3BI,IAAAA,gBAtC2B,4BAsCVlB,eAtCU,EAsCOa,IAtCP,EAsCaZ,oBAtCb,EAsCmC;AAC5D,UAAMa,gBAAgB,qBAAQd,eAAR,CAAtB;;AACA,UAAMK,WAAW,GAAGS,gBAAgB,CAACtB,GAArC;AAEAsB,MAAAA,gBAAgB,CAAC/B,GAAjB,GAAuB8B,IAAvB;AAEAZ,MAAAA,oBAAoB,CAACY,IAAD,CAApB;AACA5C,MAAAA,QAAQ,CAACT,eAAe,CAAC6C,WAAD,EAAcS,gBAAd,CAAhB,CAAR;AACD,KA9C0B;AA+C3BK,IAAAA,QAAQ,EAAE,UA/CiB;AAgD3BC,IAAAA,QAAQ,EAAE,UAhDiB;AAiD3BC,IAAAA,QAAQ,EAAE,UAjDiB;AAkD3BC,IAAAA,SAAS,EAAE,WAlDgB;AAmD3BC,IAAAA,OAAO,EAAE;AAnDkB,GAA7B;;AAuDA,WAASC,aAAT,CAAuBC,QAAvB,EAAiCzB,eAAjC,EAAkD0B,eAAlD,EAAmEC,gBAAnE,EAAqF;AACnF,YAAQF,QAAR;AACE,WAAKE,gBAAgB,CAACR,QAAtB;AACEQ,QAAAA,gBAAgB,CAACf,iBAAjB,CAAmCZ,eAAnC,EAAoD0B,eAApD,EAAqEpD,gBAArE;AACA;;AACF,WAAKqD,gBAAgB,CAACP,QAAtB;AACEO,QAAAA,gBAAgB,CAACZ,iBAAjB,CAAmCf,eAAnC,EAAoD0B,eAApD,EAAqEjD,gBAArE;AACA;;AACF,WAAKkD,gBAAgB,CAACN,QAAtB;AACEM,QAAAA,gBAAgB,CAACZ,iBAAjB,CAAmCf,eAAnC,EAAoD0B,eAApD,EAAqE9C,gBAArE;AACA;;AACF,WAAK+C,gBAAgB,CAACL,SAAtB;AACEK,QAAAA,gBAAgB,CAACZ,iBAAjB,CAAmCf,eAAnC,EAAoD0B,eAApD,EAAqE5C,iBAArE;AACA;;AACF,WAAK6C,gBAAgB,CAACJ,OAAtB;AACEI,QAAAA,gBAAgB,CAACZ,iBAAjB,CAAmCf,eAAnC,EAAoD0B,eAApD,EAAqEzC,eAArE;AACA;;AACF;AACE;AAjBJ;;AAmBAyB,IAAAA,gBAAgB;AACjB;;AAED,SACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEjB,eAAzB;AAA0C,IAAA,KAAK,EAAEhC,MAAM,CAACgC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEhC,MAAM,CAACmE,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1D,SAAS,CAACE,IAAV,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACS,SAApB;AAA+B,IAAA,oBAAoB,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACoE,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpE,MAAM,CAACqE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErE,MAAM,CAACsE,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsC7D,SAAS,CAACE,IAAhD,CADF,CAFF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACqE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErE,MAAM,CAACuE,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvE,MAAM,CAACwE,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExE,MAAM,CAACyE,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzE,MAAM,CAACwE,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C/D,SAAS,CAACiE,KAAV,CAAgBC,QAA7D,CADF,EAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE;AAAE1C,MAAAA,GAAG,EAAExB,SAAS,CAACiE,KAAV,CAAgBE;AAAvB,KADV;AAEE,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,4BAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CARF,EAkBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7E,MAAM,CAAC8E,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9E,MAAM,CAAC+E,2BAApB;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/E,MAAM,CAACgF,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEhF,MAAM,CAACgF,4BADhB;AAEE,IAAA,KAAK,EAAEpE,aAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EACL,mBAAM;AACJgB,MAAAA,qBAAqB,CAAChB,aAAD,CAArB;AACAqC,MAAAA,gBAAgB,CAACnB,sBAAsB,CAACoB,oBAAoB,CAACQ,QAAtB,CAAvB,CAAhB;AACD,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAeE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1D,MAAM,CAAC+E,2BAApB;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/E,MAAM,CAACgF,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEhF,MAAM,CAACgF,4BADhB;AAEE,IAAA,KAAK,EAAEjE,aAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EACL,mBAAM;AACJa,MAAAA,qBAAqB,CAACb,aAAD,CAArB;AACAkC,MAAAA,gBAAgB,CAACnB,sBAAsB,CAACoB,oBAAoB,CAACS,QAAtB,CAAvB,CAAhB;AACD,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAfF,EA6BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3D,MAAM,CAAC+E,2BAApB;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/E,MAAM,CAACgF,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEhF,MAAM,CAACgF,4BADhB;AAEE,IAAA,KAAK,EAAE9D,aAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EACL,mBAAM;AACJU,MAAAA,qBAAqB,CAACV,aAAD,CAArB;AACA+B,MAAAA,gBAAgB,CAACnB,sBAAsB,CAACoB,oBAAoB,CAACU,QAAtB,CAAvB,CAAhB;AACD,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA7BF,EA2CE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5D,MAAM,CAAC+E,2BAApB;AAAiD,IAAA,IAAI,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/E,MAAM,CAACgF,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEhF,MAAM,CAACgF,4BADhB;AAEE,IAAA,KAAK,EAAE5D,cAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EACL,mBAAM;AACJQ,MAAAA,qBAAqB,CAACR,cAAD,CAArB;AACA6B,MAAAA,gBAAgB,CAACnB,sBAAsB,CAACoB,oBAAoB,CAACW,SAAtB,CAAvB,CAAhB;AACD,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA3CF,EAyDE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7D,MAAM,CAAC+E,2BAApB;AAAiD,IAAA,IAAI,EAAC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/E,MAAM,CAACgF,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEhF,MAAM,CAACgF,4BADhB;AAEE,IAAA,KAAK,EAAEzD,YAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EACL,mBAAM;AACJK,MAAAA,qBAAqB,CAACL,YAAD,CAArB;AACAO,MAAAA,sBAAsB,CAACoB,oBAAoB,CAACY,OAAtB,CAAtB;AACAb,MAAAA,gBAAgB;AACjB,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAzDF,CAlBF,EA2FE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjD,MAAM,CAACiF,cAApB;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjF,MAAM,CAACkF,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElF,MAAM,CAACmF,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEhF,kBADV;AAEE,IAAA,KAAK,EAAEH,MAAM,CAACoF,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAM9C,mBAAmB,CAClD7B,SADkD,EACvCC,YADuC,EACzBwB,aAAa,CAACC,eADW,EACMD,aADN,CAAzB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGzB,SAAS,CAACsC,KAAV,CAAgBD,MAAhB,GACC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE5C,oBADV;AAEE,IAAA,KAAK,EAAEF,MAAM,CAACqF,6BAFhB;AAGE,IAAA,EAAE,EAAEnD,aAAa,CAACoD,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAErF,qBADV;AAEE,IAAA,KAAK,EAAED,MAAM,CAACqF,6BAFhB;AAGE,IAAA,EAAE,EAAEnD,aAAa,CAACoD,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CARF,CA3FF,EAsHE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtF,MAAM,CAACiF,cAApB;AAAoC,IAAA,IAAI,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjF,MAAM,CAACkF,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElF,MAAM,CAACmF,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE/E,sBADV;AAEE,IAAA,KAAK,EAAEJ,MAAM,CAACoF,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAM9C,mBAAmB,CAClD7B,SADkD,EACvCC,YADuC,EACzBwB,aAAa,CAACE,mBADW,EACUF,aADV,CAAzB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGzB,SAAS,CAACoC,SAAV,CAAoBC,MAApB,GACC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE5C,oBADV;AAEE,IAAA,KAAK,EAAEF,MAAM,CAACqF,6BAFhB;AAGE,IAAA,EAAE,EAAEnD,aAAa,CAACE,mBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEnC,qBADV;AAEE,IAAA,KAAK,EAAED,MAAM,CAACqF,6BAFhB;AAGE,IAAA,EAAE,EAAEnD,aAAa,CAACE,mBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CARF,CAtHF,EAiJE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpC,MAAM,CAACiF,cAApB;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjF,MAAM,CAACkF,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElF,MAAM,CAACmF,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE9E,kBADV;AAEE,IAAA,KAAK,EAAEL,MAAM,CAACoF,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAM9C,mBAAmB,CAClD7B,SADkD,EACvCC,YADuC,EACzBwB,aAAa,CAACG,eADW,EACMH,aADN,CAAzB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGzB,SAAS,CAACuC,KAAV,CAAgBF,MAAhB,GACC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE5C,oBADV;AAEE,IAAA,KAAK,EAAEF,MAAM,CAACqF,6BAFhB;AAGE,IAAA,EAAE,EAAEnD,aAAa,CAACG,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEpC,qBADV;AAEE,IAAA,KAAK,EAAED,MAAM,CAACqF,6BAFhB;AAGE,IAAA,EAAE,EAAEnD,aAAa,CAACG,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CARF,CAjJF,EA4KE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErC,MAAM,CAACuF,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,KAAK,EAAC,kBAA3B;AAA8C,IAAA,WAAW,EAAEvF,MAAM,CAACwF,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5KF,EA+KE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAE/D,aADb;AAEE,IAAA,YAAY,EAAEzB,MAAM,CAACyF,SAFvB;AAGE,IAAA,aAAa,EAAEzF,MAAM,CAAC0F,qBAHxB;AAIE,IAAA,aAAa,EAAC,MAJhB;AAKE,IAAA,UAAU,MALZ;AAME,IAAA,eAAe,EAAE;AAAA,aAAMzC,gBAAgB,EAAtB;AAAA,KANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjD,MAAM,CAAC2F,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE,sBAACvC,IAAD;AAAA,aAAUxB,qBAAqB,CAACwB,IAAD,CAA/B;AAAA,KADhB;AAEE,IAAA,KAAK,EAAEzB,kBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,EAAE3B,MAAM,CAAC4F,sBAFtB;AAGE,IAAA,OAAO,EACL;AAAA,aAAM7B,aAAa,CACjBlC,mBADiB,EACIpB,SADJ,EACekB,kBADf,EACmCuB,oBADnC,CAAnB;AAAA,KAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CARF,CA/KF,CADD,GA2MC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElD,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACqE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErE,MAAM,CAAC6F,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7F,MAAM,CAACqE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CA5MJ,CADF,CADF;AAuND;;AAED/D,eAAe,CAACwF,SAAhB,GAA4B;AAC1BvF,EAAAA,aAAa,EAAEV,SAAS,CAACkG,KAAV,CAAgB;AAC7BpF,IAAAA,IAAI,EAAEd,SAAS,CAACmG;AADa,GAAhB,CADW;AAI1BxF,EAAAA,QAAQ,EAAEX,SAAS,CAACoG,IAAV,CAAeC;AAJC,CAA5B;AAOA5F,eAAe,CAAC6F,YAAhB,GAA+B;AAC7B5F,EAAAA,aAAa,EAAE;AACbI,IAAAA,IAAI,EAAE;AADO;AADc,CAA/B;;AAOA,SAASyF,eAAT,QAAgD;AAAA,MAArBC,iBAAqB,SAArBA,iBAAqB;AAC9C,SAAO;AACL9F,IAAAA,aAAa,EAAE8F,iBAAiB,CAAC9F;AAD5B,GAAP;AAGD;;AAED,eAAeX,OAAO,CAACwG,eAAD,CAAP,CAAyB9F,eAAzB,CAAf","sourcesContent":["/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  ImageBackground, Text, View,\n  ScrollView, Image, TouchableOpacity, TextInput,\n} from 'react-native';\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { loadCharacter, updateCharacter } from '../../redux/actions/characterActions';\nimport styles from './CharacterDetailStyles';\n\nimport visibilityPrivateIcon from '../../images/character-private-icon.png';\nimport visibilityPublicIcon from '../../images/character-public-icon.png';\nimport characterSheetIcon from '../../images/character-sheet-icon.png';\nimport characterInventoryIcon from '../../images/character-inventory-icon.png';\nimport characterNotesIcon from '../../images/character-notes-icon.png';\n\nfunction CharacterDetail({ characterItem, dispatch }) {\n  const [character, setCharacter] = useState(characterItem);\n  const [characterName, setCharacterName] = useState(characterItem.name);\n  const [characterGame, setCharacterGame] = useState(characterItem.game);\n  const [characterRace, setCharacterRace] = useState(characterItem.race);\n  const [characterClass, setCharacterClass] = useState(characterItem.characterClass);\n  const [characterLvl, setCharacterLvl] = useState(characterItem.lvl);\n\n  const [editModalView, setEditModalView] = useState(false);\n  const [editModalTextValue, setEditModalTextValue] = useState('');\n  const [characterModalField, setCharacterModalField] = useState(null);\n\n  useEffect(() => {\n    if (!character._id) {\n      dispatch(loadCharacter('5fc807a93a0fe248776f937a'));\n    }\n    setCharacter(characterItem);\n    setCharacterName(characterItem.name);\n    setCharacterGame(characterItem.game);\n    setCharacterRace(characterItem.race);\n    setCharacterClass(characterItem.characterClass);\n    setCharacterLvl(characterItem.lvl);\n  }, [characterItem, character]);\n\n  const backgroundImage = {\n    uri: 'https://trello-attachments.s3.amazonaws.com/5f8ca3639574d3550b3ad495/5fc038fa8e33794c73d2f2fb/2a011a9d89ff63df678311667a0173cd/Portfolio19.png',\n  };\n\n  const setVisibility = {\n    sheetVisibility: 'sheetVisibility',\n    inventoryVisibility: 'inventoryVisibility',\n    notesVisibility: 'notesVisibility',\n  };\n\n  function changeSetVisibility(actualCharacter, setCharacterFunction, setId, actualSetVisibility) {\n    const updatedcharacter = { ...actualCharacter };\n    const characterId = updatedcharacter._id;\n    switch (setId) {\n      case actualSetVisibility.inventoryVisibility:\n        if (updatedcharacter.inventory.public) {\n          updatedcharacter.inventory.public = false;\n        } else {\n          updatedcharacter.inventory.public = true;\n        }\n        break;\n      case actualSetVisibility.sheetVisibility:\n        if (updatedcharacter.sheet.public) {\n          updatedcharacter.sheet.public = false;\n        } else {\n          updatedcharacter.sheet.public = true;\n        }\n        break;\n      case actualSetVisibility.notesVisibility:\n        if (updatedcharacter.notes.public) {\n          updatedcharacter.notes.public = false;\n        } else {\n          updatedcharacter.notes.public = true;\n        }\n        break;\n\n      default:\n        break;\n    }\n    setCharacterFunction(updatedcharacter);\n    dispatch(updateCharacter(characterId, updatedcharacter));\n  }\n\n  function displayEditModal() {\n    setEditModalView(!editModalView);\n  }\n\n  const editCharacterMethods = {\n    editCharacterName(actualCharacter, text, setCharacterFunction) {\n      const updatedCharacter = { ...actualCharacter };\n      const characterId = updatedCharacter._id;\n\n      updatedCharacter.name = text;\n\n      setCharacterFunction(text);\n      dispatch(updateCharacter(characterId, updatedCharacter));\n      displayEditModal();\n    },\n    editCharacterGame(actualCharacter, text, setCharacterFunction) {\n      const updatedCharacter = { ...actualCharacter };\n      const characterId = updatedCharacter._id;\n\n      updatedCharacter.game = text;\n\n      setCharacterFunction(text);\n      dispatch(updateCharacter(characterId, updatedCharacter));\n    },\n    editCharacterRace(actualCharacter, text, setCharacterFunction) {\n      const updatedCharacter = { ...actualCharacter };\n      const characterId = updatedCharacter._id;\n\n      updatedCharacter.race = text;\n\n      setCharacterFunction(text);\n      dispatch(updateCharacter(characterId, updatedCharacter));\n    },\n    editCharacterClass(actualCharacter, text, setCharacterFunction) {\n      const updatedCharacter = { ...actualCharacter };\n      const characterId = updatedCharacter._id;\n\n      updatedCharacter.characterClass = text;\n\n      setCharacterFunction(text);\n      dispatch(updateCharacter(characterId, updatedCharacter));\n    },\n    editCharacterLvl(actualCharacter, text, setCharacterFunction) {\n      const updatedCharacter = { ...actualCharacter };\n      const characterId = updatedCharacter._id;\n\n      updatedCharacter.lvl = text;\n\n      setCharacterFunction(text);\n      dispatch(updateCharacter(characterId, updatedCharacter));\n    },\n    editName: 'editName',\n    editGame: 'editGame',\n    editRace: 'editRace',\n    editClass: 'editClass',\n    editLvl: 'editLvl',\n\n  };\n\n  function editCharacter(editType, actualCharacter, actualTextValue, characterMethods) {\n    switch (editType) {\n      case characterMethods.editName:\n        characterMethods.editCharacterName(actualCharacter, actualTextValue, setCharacterName);\n        break;\n      case characterMethods.editGame:\n        characterMethods.editCharacterGame(actualCharacter, actualTextValue, setCharacterGame);\n        break;\n      case characterMethods.editRace:\n        characterMethods.editCharacterGame(actualCharacter, actualTextValue, setCharacterRace);\n        break;\n      case characterMethods.editClass:\n        characterMethods.editCharacterGame(actualCharacter, actualTextValue, setCharacterClass);\n        break;\n      case characterMethods.editLvl:\n        characterMethods.editCharacterGame(actualCharacter, actualTextValue, setCharacterLvl);\n        break;\n      default:\n        break;\n    }\n    displayEditModal();\n  }\n\n  return (\n    <ImageBackground source={backgroundImage} style={styles.backgroundImage}>\n      <ScrollView style={styles.container}>\n        {character.name ? (\n          <View style={styles.character} alwaysBounceVertical>\n            <View style={styles.character__title}>\n              <View style={styles.title__bar} />\n              <View>\n                <Text style={styles.character__name}>{character.name}</Text>\n              </View>\n              <View style={styles.title__bar} />\n            </View>\n            <View style={styles.character__owner}>\n              <Text style={styles.character__owner__text}>User:</Text>\n              <View style={styles.character__owner__info}>\n                <Text style={styles.character__owner__text}>{character.owner.userName}</Text>\n                <Image\n                  source={{ uri: character.owner.profilePic }}\n                  style={styles.character__owner__profilePic}\n                />\n              </View>\n            </View>\n            <View style={styles.character__description}>\n              <View style={styles.character__description__row} name=\"name\">\n                <Text style={styles.character__description__text}>Name:</Text>\n                <Button\n                  style={styles.character__description__text}\n                  title={characterName}\n                  type=\"clear\"\n                  onPress={\n                    () => {\n                      setEditModalTextValue(characterName);\n                      displayEditModal(setCharacterModalField(editCharacterMethods.editName));\n                    }\n                  }\n                />\n              </View>\n              <View style={styles.character__description__row} name=\"game\">\n                <Text style={styles.character__description__text}>Game:</Text>\n                <Button\n                  style={styles.character__description__text}\n                  title={characterGame}\n                  type=\"clear\"\n                  onPress={\n                    () => {\n                      setEditModalTextValue(characterGame);\n                      displayEditModal(setCharacterModalField(editCharacterMethods.editGame));\n                    }\n                  }\n                />\n              </View>\n              <View style={styles.character__description__row} name=\"race\">\n                <Text style={styles.character__description__text}>Race:</Text>\n                <Button\n                  style={styles.character__description__text}\n                  title={characterRace}\n                  type=\"clear\"\n                  onPress={\n                    () => {\n                      setEditModalTextValue(characterRace);\n                      displayEditModal(setCharacterModalField(editCharacterMethods.editRace));\n                    }\n                  }\n                />\n              </View>\n              <View style={styles.character__description__row} name=\"class\">\n                <Text style={styles.character__description__text}>Class:</Text>\n                <Button\n                  style={styles.character__description__text}\n                  title={characterClass}\n                  type=\"clear\"\n                  onPress={\n                    () => {\n                      setEditModalTextValue(characterClass);\n                      displayEditModal(setCharacterModalField(editCharacterMethods.editClass));\n                    }\n                  }\n                />\n              </View>\n              <View style={styles.character__description__row} name=\"lvl\">\n                <Text style={styles.character__description__text}>Level:</Text>\n                <Button\n                  style={styles.character__description__text}\n                  title={characterLvl}\n                  type=\"clear\"\n                  onPress={\n                    () => {\n                      setEditModalTextValue(characterLvl);\n                      setCharacterModalField(editCharacterMethods.editLvl);\n                      displayEditModal();\n                    }\n                  }\n                />\n              </View>\n            </View>\n            <View style={styles.character__set} name=\"sheet\">\n              <View style={styles.set__bar}>\n                <Text style={styles.character__set__text}>Character Sheet:</Text>\n                <Image\n                  source={characterSheetIcon}\n                  style={styles.character__set__icon}\n                />\n              </View>\n              <TouchableOpacity onPress={() => changeSetVisibility(\n                character, setCharacter, setVisibility.sheetVisibility, setVisibility,\n              )}\n              >\n                {character.sheet.public ? (\n                  <Image\n                    source={visibilityPublicIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.SheetVisibility}\n                  />\n                ) : (\n                  <Image\n                    source={visibilityPrivateIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.SheetVisibility}\n                  />\n                )}\n              </TouchableOpacity>\n            </View>\n            <View style={styles.character__set} name=\"inventory\">\n              <View style={styles.set__bar}>\n                <Text style={styles.character__set__text}>Inventory:</Text>\n                <Image\n                  source={characterInventoryIcon}\n                  style={styles.character__set__icon}\n                />\n              </View>\n              <TouchableOpacity onPress={() => changeSetVisibility(\n                character, setCharacter, setVisibility.inventoryVisibility, setVisibility,\n              )}\n              >\n                {character.inventory.public ? (\n                  <Image\n                    source={visibilityPublicIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.inventoryVisibility}\n                  />\n                ) : (\n                  <Image\n                    source={visibilityPrivateIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.inventoryVisibility}\n                  />\n                )}\n              </TouchableOpacity>\n            </View>\n            <View style={styles.character__set} name=\"notes\">\n              <View style={styles.set__bar}>\n                <Text style={styles.character__set__text}>Notes:</Text>\n                <Image\n                  source={characterNotesIcon}\n                  style={styles.character__set__icon}\n                />\n              </View>\n              <TouchableOpacity onPress={() => changeSetVisibility(\n                character, setCharacter, setVisibility.notesVisibility, setVisibility,\n              )}\n              >\n                {character.notes.public ? (\n                  <Image\n                    source={visibilityPublicIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.notesVisibility}\n                  />\n                ) : (\n                  <Image\n                    source={visibilityPrivateIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.notesVisibility}\n                  />\n                )}\n              </TouchableOpacity>\n            </View>\n            <View style={styles.character__button__container}>\n              <Button type=\"solid\" title=\"Delete Character\" buttonStyle={styles.button__delete} />\n            </View>\n            <Overlay\n              isVisible={editModalView}\n              overlayStyle={styles.editModal}\n              backdropStyle={styles.editModal__background}\n              animationType=\"fade\"\n              fullScreen\n              onBackdropPress={() => displayEditModal()}\n            >\n              <View style={styles.editModal__block}>\n                <Text>Edit Name</Text>\n                <TextInput\n                  onChangeText={(text) => setEditModalTextValue(text)}\n                  value={editModalTextValue}\n                />\n                <Button\n                  title=\"Confirm\"\n                  buttonStyle={styles.buttonConfirmEditModal}\n                  onPress={\n                    () => editCharacter(\n                      characterModalField, character, editModalTextValue, editCharacterMethods,\n                    )\n                    }\n                />\n              </View>\n            </Overlay>\n          </View>\n        ) : (\n          <View style={styles.character}>\n            <View style={styles.title__bar} />\n            <Text style={styles.no__character__title}>No Character</Text>\n            <View style={styles.title__bar} />\n          </View>\n        )}\n      </ScrollView>\n    </ImageBackground>\n  );\n}\n\nCharacterDetail.propTypes = {\n  characterItem: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nCharacterDetail.defaultProps = {\n  characterItem: {\n    name: null,\n  },\n\n};\n\nfunction mapStateToProps({ charactersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterDetail);\n"]},"metadata":{},"sourceType":"module"}