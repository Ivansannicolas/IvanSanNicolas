{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default function deleteImage(character, updateCharacterFunction, dispatch, imageKey) {\n  var newCharacter = _objectSpread({}, character);\n\n  newCharacter.sheet.uploads = newCharacter.sheet.uploads.filter(function (upload) {\n    return upload.uniqueKey !== imageKey;\n  });\n  dispatch(updateCharacterFunction(newCharacter._id, newCharacter));\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterSheet/CharacterSheetFunctions/CharacterSheetDeleteImage.js"],"names":["deleteImage","character","updateCharacterFunction","dispatch","imageKey","newCharacter","sheet","uploads","filter","upload","uniqueKey","_id"],"mappings":";;;;;;AAAA,eAAe,SAASA,WAAT,CACbC,SADa,EAEbC,uBAFa,EAGbC,QAHa,EAIbC,QAJa,EAKb;AACA,MAAMC,YAAY,qBAAQJ,SAAR,CAAlB;;AAEAI,EAAAA,YAAY,CAACC,KAAb,CAAmBC,OAAnB,GAA6BF,YAAY,CAACC,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,CAC3B,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,SAAP,KAAqBN,QAAjC;AAAA,GAD2B,CAA7B;AAIAD,EAAAA,QAAQ,CAACD,uBAAuB,CAACG,YAAY,CAACM,GAAd,EAAmBN,YAAnB,CAAxB,CAAR;AACD","sourcesContent":["export default function deleteImage(\n  character,\n  updateCharacterFunction,\n  dispatch,\n  imageKey,\n) {\n  const newCharacter = { ...character };\n\n  newCharacter.sheet.uploads = newCharacter.sheet.uploads.filter(\n    (upload) => upload.uniqueKey !== imageKey,\n  );\n\n  dispatch(updateCharacterFunction(newCharacter._id, newCharacter));\n}\n"]},"metadata":{},"sourceType":"module"}