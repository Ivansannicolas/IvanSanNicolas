{"ast":null,"code":"var _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/LoginScreen/LoginScreen.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-elements';\nimport { useIsFocused } from '@react-navigation/native';\nimport { setUserId, loginGoogle } from \"../../redux/actions/userActions\";\nimport absalomBackground from \"../../images/absalom-background.png\";\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation,\n      userItem = _ref.userItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch;\n  useEffect(function () {\n    console.log(userItem);\n\n    if (userItem && !(userId != null && userId.length)) {\n      setUserId(userItem._id);\n    }\n\n    if (userItem != null && userItem.email) {\n      navigation.navigate('CharacterList');\n    } else {\n      navigation.navigate('LoginScreen');\n    }\n  });\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Login with Google\",\n    onPress: function onPress() {\n      return dispatch(loginGoogle());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction mapStateToProps(_ref2) {\n  var usersReducer = _ref2.usersReducer;\n  return {\n    userItem: usersReducer.userItem,\n    userId: usersReducer.userId\n  };\n}\n\nexport default connect(mapStateToProps)(LoginScreen);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/LoginScreen/LoginScreen.jsx"],"names":["React","useEffect","connect","Button","useIsFocused","setUserId","loginGoogle","absalomBackground","LoginScreen","navigation","userItem","userId","dispatch","console","log","length","_id","email","navigate","flex","width","height","display","justifyContent","alignItems","mapStateToProps","usersReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,SAAT,EAAoBC,WAApB;AAEA,OAAOC,iBAAP;;AAEA,SAASC,WAAT,OAEG;AAAA,MADDC,UACC,QADDA,UACC;AAAA,MADWC,QACX,QADWA,QACX;AAAA,MADqBC,MACrB,QADqBA,MACrB;AAAA,MAD6BC,QAC7B,QAD6BA,QAC7B;AACDX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,QAAIA,QAAQ,IAAI,EAACC,MAAD,YAACA,MAAM,CAAEI,MAAT,CAAhB,EAAiC;AAC/BV,MAAAA,SAAS,CAACK,QAAQ,CAACM,GAAV,CAAT;AACD;;AACD,QAAIN,QAAJ,YAAIA,QAAQ,CAAEO,KAAd,EAAqB;AACnBR,MAAAA,UAAU,CAACS,QAAX,CAAoB,eAApB;AACD,KAFD,MAEO;AACLT,MAAAA,UAAU,CAACS,QAAX,CAAoB,aAApB;AACD;AACF,GAVQ,CAAT;AAWA,SACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEX,iBAAzB;AAA4C,IAAA,KAAK,EAAE;AAAEY,MAAAA,IAAI,EAAE;AAAR,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACXC,MAAAA,KAAK,EAAE,MADI;AACIC,MAAAA,MAAM,EAAE,MADZ;AACoBC,MAAAA,OAAO,EAAE,MAD7B;AACqCC,MAAAA,cAAc,EAAE,QADrD;AAC+DC,MAAAA,UAAU,EAAE;AAD3E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,mBAAd;AAAkC,IAAA,OAAO,EAAE;AAAA,aAAMZ,QAAQ,CAACN,WAAW,EAAZ,CAAd;AAAA,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAUD;;AAED,SAASmB,eAAT,QAA2C;AAAA,MAAhBC,YAAgB,SAAhBA,YAAgB;AACzC,SAAO;AACLhB,IAAAA,QAAQ,EAAEgB,YAAY,CAAChB,QADlB;AAELC,IAAAA,MAAM,EAAEe,YAAY,CAACf;AAFhB,GAAP;AAID;;AAED,eAAeT,OAAO,CAACuB,eAAD,CAAP,CAAyBjB,WAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { ImageBackground, View } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport { useIsFocused } from '@react-navigation/native';\nimport { setUserId, loginGoogle } from '../../redux/actions/userActions';\n\nimport absalomBackground from '../../images/absalom-background.png';\n\nfunction LoginScreen({\n  navigation, userItem, userId, dispatch,\n}) {\n  useEffect(() => {\n    console.log(userItem);\n    if (userItem && !userId?.length) {\n      setUserId(userItem._id);\n    }\n    if (userItem?.email) {\n      navigation.navigate('CharacterList');\n    } else {\n      navigation.navigate('LoginScreen');\n    }\n  });\n  return (\n    <ImageBackground source={absalomBackground} style={{ flex: 1 }}>\n      <View style={{\n        width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center',\n      }}\n      >\n        <Button title=\"Login with Google\" onPress={() => dispatch(loginGoogle())} />\n      </View>\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    userItem: usersReducer.userItem,\n    userId: usersReducer.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(LoginScreen);\n"]},"metadata":{},"sourceType":"module"}