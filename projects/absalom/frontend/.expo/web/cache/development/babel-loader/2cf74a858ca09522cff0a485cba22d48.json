{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/UserDetail/UserDetail.jsx\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { deleteUser, updateUser } from \"../../redux/actions/userActions\";\nimport { setCharacterId, loadCharacterByKey } from \"../../redux/actions/characterActions\";\nimport deleteListValue from \"./UserDetailFunctions\";\nimport Header from \"../Header/Header\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\nimport ListRow from \"./ListRow/ListRow\";\nimport styles from \"./UserDetailStyles\";\nimport addBlueIcon from \"../../images/add-icon-blue.png\";\nimport absalomBackground from \"../../images/absalom-background.png\";\n\nfunction UserDetail(_ref) {\n  var _this = this;\n\n  var userItem = _ref.userItem,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation,\n      charactersArray = _ref.charactersArray;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editModalView = _useState2[0],\n      setEditModalView = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editModalTextValue = _useState4[0],\n      setEditModalTextValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      editListModalView = _useState6[0],\n      setEditListModalView = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      editListModalArrayCategory = _useState8[0],\n      setEditListModalArrayCategory = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editListModalArrayValue = _useState10[0],\n      setEditListModalArrayValue = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      deleteUserModalView = _useState12[0],\n      setDeleteUserModalView = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      confirmDeleteUserModalView = _useState14[0],\n      setConfirmDeleteUserModalView = _useState14[1];\n\n  function changeListValue(value, text) {\n    value.title = text;\n  }\n\n  function editUser(actualuserItem, newValue, actualupdateUser, dispatchfunction, marker) {\n    var user = 'user';\n    var games = 'games';\n    var languages = 'languages';\n\n    switch (marker) {\n      case user:\n        if (newValue.length) {\n          userItem.userName = newValue;\n        } else {\n          userItem.userName = 'New User';\n        }\n\n        break;\n\n      case games:\n        userItem.favouriteGames = newValue.filter(function (value) {\n          return value.title !== '';\n        });\n        break;\n\n      case languages:\n        userItem.languages = newValue.filter(function (value) {\n          return value.title !== '';\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    dispatch(updateUser(userItem._id, userItem));\n  }\n\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    userId: userItem._id,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    alwaysBounceVertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, userItem && userItem != null && userItem._id ? React.createElement(View, {\n    style: styles.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.user__title,\n    name: \"user title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.user__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, userItem.userName), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.user__profilePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: userItem.profilePic\n    },\n    style: styles.user__profilePic__image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.user__userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.user__userName__block__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Name:\")), React.createElement(TouchableOpacity, {\n    style: styles.user__userName__block,\n    onPress: function onPress() {\n      setEditModalTextValue(userItem.userName);\n      setEditModalView(!editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, userItem.userName))), React.createElement(TouchableOpacity, {\n    name: \"games\",\n    style: styles.user__games,\n    onPress: function onPress() {\n      setEditListModalArrayCategory('games');\n      setEditListModalArrayValue(_toConsumableArray(userItem.favouriteGames));\n      setEditListModalView(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.user__games__title__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Favourite Games\")), React.createElement(View, {\n    style: styles.user__games__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, userItem.favouriteGames.map(function (actualGame) {\n    return React.createElement(View, {\n      style: styles.user__game__block,\n      key: \"\" + Math.random() + Math.random(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.user__game__block__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, actualGame.title));\n  }))), React.createElement(TouchableOpacity, {\n    name: \"languages\",\n    style: styles.user__games,\n    onPress: function onPress() {\n      setEditListModalArrayCategory('languages');\n      setEditListModalArrayValue(_toConsumableArray(userItem.languages));\n      setEditListModalView(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.user__games__title__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Languages\")), React.createElement(View, {\n    style: styles.user__games__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, userItem.languages.map(function (actualLanguage) {\n    return React.createElement(View, {\n      style: styles.user__game__block,\n      key: \"\" + Math.random() + Math.random(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.user__game__block__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, actualLanguage.title));\n  }))), React.createElement(View, {\n    style: styles.user__characters,\n    name: \"user characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.user__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, userItem.userName, ' ', \"Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.user__characters__list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, (charactersArray == null ? void 0 : charactersArray.length) && charactersArray.map(function (character) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.user__characters__list__block,\n      key: \"\" + character._id + Math.random(),\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        dispatch(setCharacterId(character._id));\n        dispatch(loadCharacterByKey(character.uniqueKey, userItem._id));\n        navigation.navigate('CharacterDetail');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.user__characters__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__character__firstRow__name__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.characterList__character__firstRow__name__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, character.name)), React.createElement(Text, {\n      testID: \"LevelText\",\n      style: styles.characterList__character__firstRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, \"Level:\", ' ', character.lvl)), React.createElement(View, {\n      style: styles.user__characters__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characters__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, character.game), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characters__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, character.race), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characters__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, character.characterClass)));\n  })), React.createElement(View, {\n    style: styles.user__deleteButton__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    type: \"solid\",\n    title: \"Delete User\",\n    buttonStyle: styles.button__delete,\n    onPress: function onPress() {\n      return setDeleteUserModalView(!deleteUserModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  })), React.createElement(Overlay, {\n    name: \"edit modal\",\n    isVisible: editModalView,\n    overlayStyle: styles.editModal,\n    backdropStyle: styles.modal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setEditModalView(!editModalView);\n      setEditModalTextValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.editModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, \"Edit you user name\"), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.editModal__text,\n    maxLength: 30,\n    multiline: true,\n    autoCorrect: false,\n    value: editModalTextValue,\n    onChangeText: function onChangeText(text) {\n      return setEditModalTextValue(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  })), React.createElement(Button, {\n    title: \"Confirm\",\n    buttonStyle: styles.buttonConfirmEditModal,\n    onPress: function onPress() {\n      editUser(userItem, editModalTextValue, updateUser, dispatch, 'user');\n      setEditModalTextValue('');\n      setEditModalView(!editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }))), React.createElement(Overlay, {\n    name: \"delete user modal\",\n    isVisible: deleteUserModalView,\n    overlayStyle: styles.deleteModal,\n    backdropStyle: styles.editModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      setDeleteUserModalView(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.editModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, \"You are about to delete\"), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.deleteModal__userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 19\n    }\n  }, userItem.userName)), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.deleteModal__warningText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, \"This action is irreversible.\")), React.createElement(Button, {\n    title: \"Delete\",\n    buttonStyle: styles.button__delete,\n    onPress: function onPress() {\n      setDeleteUserModalView(!deleteUserModalView);\n      setConfirmDeleteUserModalView(!confirmDeleteUserModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }))), React.createElement(Overlay, {\n    name: \"confirm delete user modal\",\n    isVisible: confirmDeleteUserModalView,\n    overlayStyle: styles.deleteModal,\n    backdropStyle: styles.editModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      setConfirmDeleteUserModalView(!confirmDeleteUserModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.editModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, \"Sad to hear...\"), React.createElement(Text, {\n    style: styles.editModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, \"We hope you to comeback someday and live more adventures in Absalom!\"), React.createElement(Text, {\n    style: styles.deleteModal__warningText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, \"Confirm one last time\"), React.createElement(Button, {\n    title: \"Delete\",\n    buttonStyle: styles.button__delete,\n    onPress: function onPress() {\n      dispatch(deleteUser(userItem.uniqueKey));\n      navigation.navigate('LoginScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }))), React.createElement(Overlay, {\n    name: \"edit list modal\",\n    isVisible: editListModalView,\n    overlayStyle: styles.editModal,\n    backdropStyle: styles.modal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setEditListModalView(!editListModalView);\n      setEditListModalArrayValue([]);\n      setEditListModalArrayCategory('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.editModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 19\n    }\n  }, \"Edit you user\", ' ', editListModalArrayCategory), editListModalArrayValue.map(function (value) {\n    return React.createElement(View, {\n      style: styles.editListModal__block,\n      key: performance.now(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }\n    }, React.createElement(ListRow, {\n      value: value,\n      styles: styles,\n      listCategory: editListModalArrayValue,\n      changeListValue: changeListValue,\n      deleteListValue: deleteListValue,\n      setEditListModalArrayValue: setEditListModalArrayValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 23\n      }\n    }));\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setEditListModalArrayValue([].concat(_toConsumableArray(editListModalArrayValue), [{\n        title: '',\n        uniqueKey: \"\" + Date.now() + performance.now()\n      }]));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 19\n    }\n  }, React.createElement(Image, {\n    source: addBlueIcon,\n    style: styles.addIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.editItemModal__buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 19\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    buttonStyle: styles.buttonConfirmEditModal,\n    onPress: function onPress() {\n      editUser(userItem, editListModalArrayValue, updateUser, dispatch, editListModalArrayCategory);\n      setEditListModalView(!editListModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 21\n    }\n  })))))) : React.createElement(View, {\n    style: styles.character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.no__user__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }), React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }))), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userItem._id,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    charactersArray: charactersReducer.charactersArray,\n    userId: usersReducer.userId,\n    userItem: usersReducer.userItem\n  };\n}\n\nexport default connect(mapStateToProps)(UserDetail);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/UserDetail/UserDetail.jsx"],"names":["React","useState","Button","Overlay","connect","deleteUser","updateUser","setCharacterId","loadCharacterByKey","deleteListValue","Header","NavigationBar","LoadingSpinner","ListRow","styles","addBlueIcon","absalomBackground","UserDetail","userItem","dispatch","navigation","charactersArray","editModalView","setEditModalView","editModalTextValue","setEditModalTextValue","editListModalView","setEditListModalView","editListModalArrayCategory","setEditListModalArrayCategory","editListModalArrayValue","setEditListModalArrayValue","deleteUserModalView","setDeleteUserModalView","confirmDeleteUserModalView","setConfirmDeleteUserModalView","changeListValue","value","text","title","editUser","actualuserItem","newValue","actualupdateUser","dispatchfunction","marker","user","games","languages","length","userName","favouriteGames","filter","_id","backgroundImage","container","user__title","title__bar","user__name","user__profilePic","uri","profilePic","user__profilePic__image","user__userName","user__userName__block__title","user__userName__text","user__userName__block","user__userName__name","user__games","user__games__title__block","user__games__block","map","actualGame","user__game__block","Math","random","user__game__block__title","actualLanguage","user__characters","user__characters__list","character","user__characters__list__block","uniqueKey","navigate","user__characters__list__block__row","characterList__character__firstRow__name__block","characterList__character__firstRow__name__text","name","characterList__character__firstRow__text","lvl","characters__secondRow__text","game","race","characterClass","user__deleteButton__container","button__delete","editModal","modal__background","editModal__block","editModal__title","editModal__textBlock","editModal__text","buttonConfirmEditModal","deleteModal","editModal__background","deleteModal__userName","deleteModal__warningText","editListModal__block","performance","now","Date","addIcon","editItemModal__buttons","no__user__title","mapStateToProps","charactersReducer","usersReducer","userId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  ImageBackground, Text, View, ScrollView,\n  Image, TextInput, TouchableOpacity,\n} from 'react-native';\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\n// import { PropTypes } from 'prop-types';\nimport { deleteUser, updateUser } from '../../redux/actions/userActions';\nimport { setCharacterId, loadCharacterByKey } from '../../redux/actions/characterActions';\nimport deleteListValue from './UserDetailFunctions';\nimport Header from '../Header/Header';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport ListRow from './ListRow/ListRow';\nimport styles from './UserDetailStyles';\nimport addBlueIcon from '../../images/add-icon-blue.png';\n\nimport absalomBackground from '../../images/absalom-background.png';\n\nfunction UserDetail({\n  userItem, dispatch, navigation, charactersArray,\n}) {\n  const [editModalView, setEditModalView] = useState(false);\n  const [editModalTextValue, setEditModalTextValue] = useState('');\n\n  const [editListModalView, setEditListModalView] = useState(false);\n  const [editListModalArrayCategory, setEditListModalArrayCategory] = useState('');\n  const [editListModalArrayValue, setEditListModalArrayValue] = useState([]);\n\n  const [deleteUserModalView, setDeleteUserModalView] = useState(false);\n  const [confirmDeleteUserModalView, setConfirmDeleteUserModalView] = useState(false);\n\n  function changeListValue(value, text) {\n    value.title = text;\n  }\n\n  function editUser(actualuserItem, newValue, actualupdateUser, dispatchfunction, marker) {\n    const user = 'user';\n    const games = 'games';\n    const languages = 'languages';\n\n    switch (marker) {\n      case user:\n        if (newValue.length) {\n          userItem.userName = newValue;\n        } else {\n          userItem.userName = 'New User';\n        }\n        break;\n      case games:\n        userItem.favouriteGames = newValue.filter((value) => value.title !== '');\n        break;\n      case languages:\n        userItem.languages = newValue.filter((value) => value.title !== '');\n        break;\n      default:\n        break;\n    }\n\n    dispatch(updateUser(userItem._id, userItem));\n  }\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <Header navigation={navigation} userId={userItem._id} dispatch={dispatch} />\n      <ScrollView style={styles.container} alwaysBounceVertical>\n        {(userItem && userItem?._id) ? (\n          <View style={styles.user}>\n            <View style={styles.user__title} name=\"user title\">\n              <View style={styles.title__bar} />\n              <Text style={styles.user__name}>{userItem.userName}</Text>\n              <View style={styles.title__bar} />\n            </View>\n            <View style={styles.user__profilePic}>\n              <Image\n                source={{ uri: userItem.profilePic }}\n                style={styles.user__profilePic__image}\n              />\n            </View>\n            <View style={styles.user__userName}>\n              <View style={styles.user__userName__block__title}>\n                <Text style={styles.user__userName__text}>Name:</Text>\n              </View>\n              <TouchableOpacity\n                style={styles.user__userName__block}\n                onPress={() => {\n                  setEditModalTextValue(userItem.userName);\n                  setEditModalView(!editModalView);\n                }}\n              >\n                <Text style={styles.user__userName__name}>{userItem.userName}</Text>\n              </TouchableOpacity>\n            </View>\n            <TouchableOpacity\n              name=\"games\"\n              style={styles.user__games}\n              onPress={() => {\n                setEditListModalArrayCategory('games');\n                setEditListModalArrayValue([...userItem.favouriteGames]);\n                setEditListModalView(true);\n              }}\n            >\n              <View style={styles.user__games__title__block}>\n                <Text style={styles.user__userName__text}>Favourite Games</Text>\n              </View>\n              <View style={styles.user__games__block}>\n                {userItem.favouriteGames.map((actualGame) => (\n                  <View style={styles.user__game__block} key={`${Math.random()}${Math.random()}`}>\n                    <Text style={styles.user__game__block__title}>{actualGame.title}</Text>\n                  </View>\n                ))}\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              name=\"languages\"\n              style={styles.user__games}\n              onPress={() => {\n                setEditListModalArrayCategory('languages');\n                setEditListModalArrayValue([...userItem.languages]);\n                setEditListModalView(true);\n              }}\n            >\n              <View style={styles.user__games__title__block}>\n                <Text style={styles.user__userName__text}>Languages</Text>\n              </View>\n              <View style={styles.user__games__block}>\n                {userItem.languages.map((actualLanguage) => (\n                  <View style={styles.user__game__block} key={`${Math.random()}${Math.random()}`}>\n                    <Text style={styles.user__game__block__title}>{actualLanguage.title}</Text>\n                  </View>\n                ))}\n              </View>\n            </TouchableOpacity>\n            <View style={styles.user__characters} name=\"user characters\">\n              <View style={styles.title__bar} />\n              <Text style={styles.user__name}>\n                {userItem.userName}\n                {' '}\n                Characters\n              </Text>\n              <View style={styles.title__bar} />\n            </View>\n            <View style={styles.user__characters__list}>\n              {charactersArray?.length && charactersArray.map((character) => (\n                <TouchableOpacity\n                  style={styles.user__characters__list__block}\n                  key={`${character._id}${Math.random()}`}\n                  activeOpacity={0.8}\n                  onPress={() => {\n                    dispatch(setCharacterId(character._id));\n                    dispatch(loadCharacterByKey(character.uniqueKey, userItem._id));\n                    navigation.navigate('CharacterDetail');\n                  }}\n                >\n                  <View style={styles.user__characters__list__block__row}>\n                    <View style={styles.characterList__character__firstRow__name__block}>\n                      <Text style={styles.characterList__character__firstRow__name__text}>\n                        {character.name}\n                      </Text>\n                    </View>\n                    <Text\n                      testID=\"LevelText\"\n                      style={styles.characterList__character__firstRow__text}\n                    >\n                      Level:\n                      {' '}\n                      {character.lvl}\n                    </Text>\n                  </View>\n                  <View style={styles.user__characters__list__block__row}>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characters__secondRow__text}\n                    >\n                      {character.game}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characters__secondRow__text}\n                    >\n                      {character.race}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characters__secondRow__text}\n                    >\n                      {character.characterClass}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n            <View style={styles.user__deleteButton__container}>\n              <Button\n                type=\"solid\"\n                title=\"Delete User\"\n                buttonStyle={styles.button__delete}\n                onPress={() => setDeleteUserModalView(!deleteUserModalView)}\n              />\n            </View>\n            <Overlay\n              name=\"edit modal\"\n              isVisible={editModalView}\n              overlayStyle={styles.editModal}\n              backdropStyle={styles.modal__background}\n              animationType=\"fade\"\n              onBackdropPress={() => {\n                setEditModalView(!editModalView);\n                setEditModalTextValue('');\n              }}\n            >\n              <View style={styles.editModal__block}>\n                <Text style={styles.editModal__title}>\n                  Edit you user name\n                </Text>\n                <View style={styles.editModal__textBlock}>\n                  <TextInput\n                    style={styles.editModal__text}\n                    maxLength={30}\n                    multiline\n                    autoCorrect={false}\n                    value={editModalTextValue}\n                    onChangeText={(text) => setEditModalTextValue(text)}\n                  />\n                </View>\n                <Button\n                  title=\"Confirm\"\n                  buttonStyle={styles.buttonConfirmEditModal}\n                  onPress={() => {\n                    editUser(userItem, editModalTextValue, updateUser, dispatch, 'user');\n                    setEditModalTextValue('');\n                    setEditModalView(!editModalView);\n                  }}\n                />\n              </View>\n            </Overlay>\n            <Overlay\n              name=\"delete user modal\"\n              isVisible={deleteUserModalView}\n              overlayStyle={styles.deleteModal}\n              backdropStyle={styles.editModal__background}\n              animationType=\"fade\"\n              fullScreen\n              onBackdropPress={() => {\n                setDeleteUserModalView(false);\n              }}\n            >\n              <View style={styles.editModal__block}>\n                <Text style={styles.editModal__title}>\n                  You are about to delete\n                </Text>\n                <View style={styles.editModal__textBlock}>\n                  <Text style={styles.deleteModal__userName}>{userItem.userName}</Text>\n                </View>\n                <View style={styles.editModal__textBlock}>\n                  <Text style={styles.deleteModal__warningText}>This action is irreversible.</Text>\n                </View>\n                <Button\n                  title=\"Delete\"\n                  buttonStyle={styles.button__delete}\n                  onPress={() => {\n                    setDeleteUserModalView(!deleteUserModalView);\n                    setConfirmDeleteUserModalView(!confirmDeleteUserModalView);\n                  }}\n                />\n              </View>\n            </Overlay>\n            <Overlay\n              name=\"confirm delete user modal\"\n              isVisible={confirmDeleteUserModalView}\n              overlayStyle={styles.deleteModal}\n              backdropStyle={styles.editModal__background}\n              animationType=\"fade\"\n              fullScreen\n              onBackdropPress={() => {\n                setConfirmDeleteUserModalView(!confirmDeleteUserModalView);\n              }}\n            >\n              <View style={styles.editModal__block}>\n                <Text style={styles.editModal__title}>Sad to hear...</Text>\n                <Text style={styles.editModal__title}>\n                  We hope you to comeback someday and live more adventures in Absalom!\n                </Text>\n                <Text style={styles.deleteModal__warningText}>Confirm one last time</Text>\n                <Button\n                  title=\"Delete\"\n                  buttonStyle={styles.button__delete}\n                  onPress={() => {\n                    dispatch(deleteUser(userItem.uniqueKey));\n                    navigation.navigate('LoginScreen');\n                  }}\n                />\n              </View>\n            </Overlay>\n\n            <Overlay\n              name=\"edit list modal\"\n              isVisible={editListModalView}\n              overlayStyle={styles.editModal}\n              backdropStyle={styles.modal__background}\n              animationType=\"fade\"\n              onBackdropPress={() => {\n                setEditListModalView(!editListModalView);\n                setEditListModalArrayValue([]);\n                setEditListModalArrayCategory('');\n              }}\n            >\n              <ScrollView>\n                <View style={styles.editModal__block}>\n                  <Text style={styles.editModal__title}>\n                    Edit you user\n                    {' '}\n                    {editListModalArrayCategory}\n                  </Text>\n                  {editListModalArrayValue.map((value) => (\n                    <View style={styles.editListModal__block} key={performance.now()}>\n                      <ListRow\n                        value={value}\n                        styles={styles}\n                        listCategory={editListModalArrayValue}\n                        changeListValue={changeListValue}\n                        deleteListValue={deleteListValue}\n                        setEditListModalArrayValue={setEditListModalArrayValue}\n                      />\n                    </View>\n                  ))}\n                  <TouchableOpacity\n                    onPress={() => {\n                      setEditListModalArrayValue([...editListModalArrayValue, { title: '', uniqueKey: `${Date.now()}${performance.now()}` }]);\n                    }}\n                  >\n                    <Image source={addBlueIcon} style={styles.addIcon} />\n                  </TouchableOpacity>\n                  <View style={styles.editItemModal__buttons}>\n                    <Button\n                      title=\"Confirm\"\n                      buttonStyle={styles.buttonConfirmEditModal}\n                      onPress={() => {\n                        editUser(\n                          userItem, editListModalArrayValue,\n                          updateUser, dispatch, editListModalArrayCategory,\n                        );\n                        setEditListModalView(!editListModalView);\n                      }}\n                    />\n                  </View>\n                </View>\n              </ScrollView>\n            </Overlay>\n          </View>\n        ) : (\n          <View style={styles.character}>\n            <View style={styles.title__bar} />\n            <Text style={styles.no__user__title} />\n            <View style={styles.title__bar} />\n            <LoadingSpinner />\n          </View>\n        )}\n      </ScrollView>\n      <NavigationBar navigation={navigation} userId={userItem._id} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    charactersArray: charactersReducer.charactersArray,\n    userId: usersReducer.userId,\n    userItem: usersReducer.userItem,\n  };\n}\n\nexport default connect(mapStateToProps)(UserDetail);\n"]},"metadata":{},"sourceType":"module"}