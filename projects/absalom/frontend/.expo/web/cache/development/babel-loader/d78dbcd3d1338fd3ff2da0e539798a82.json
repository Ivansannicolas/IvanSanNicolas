{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport function pickImage(ImagePicker) {\n  var result;\n  return _regeneratorRuntime.async(function pickImage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n            base64: true\n          }));\n\n        case 2:\n          result = _context.sent;\n\n          if (result.cancelled) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\", result.base64);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function addImage(character, imageItem, defaultImage, updateCharacterFunction, dispatch) {\n  var newCharacter = _objectSpread({}, character);\n\n  var newImage = _objectSpread({}, imageItem);\n\n  var defaultImageBase64 = \"data:image/jpg;base64,\" + defaultImage.base64;\n\n  if (!newImage.imageBase64.length) {\n    newImage.imageBase64 = defaultImageBase64;\n  }\n\n  newCharacter.sheet.uploads.push(newImage);\n  dispatch(updateCharacterFunction(newCharacter._id, newCharacter));\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterSheet/CharacterSheetFunctions.js"],"names":["pickImage","ImagePicker","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","base64","result","cancelled","addImage","character","imageItem","defaultImage","updateCharacterFunction","dispatch","newCharacter","newImage","defaultImageBase64","imageBase64","length","sheet","uploads","push","_id"],"mappings":";;;;;;;AAAA,OAAO,SAAeA,SAAf,CAAyBC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACgBA,WAAW,CAACC,uBAAZ,CAAoC;AACvDC,YAAAA,UAAU,EAAEF,WAAW,CAACG,gBAAZ,CAA6BC,GADc;AAEvDC,YAAAA,aAAa,EAAE,IAFwC;AAGvDC,YAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH+C;AAIvDC,YAAAA,OAAO,EAAE,CAJ8C;AAKvDC,YAAAA,MAAM,EAAE;AAL+C,WAApC,CADhB;;AAAA;AACCC,UAAAA,MADD;;AAAA,cASAA,MAAM,CAACC,SATP;AAAA;AAAA;AAAA;;AAAA,2CAUID,MAAM,CAACD,MAVX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcP,OAAO,SAASG,QAAT,CACLC,SADK,EACMC,SADN,EACiBC,YADjB,EAC+BC,uBAD/B,EACwDC,QADxD,EAEL;AACA,MAAMC,YAAY,qBAAQL,SAAR,CAAlB;;AACA,MAAMM,QAAQ,qBAAQL,SAAR,CAAd;;AACA,MAAMM,kBAAkB,8BAA4BL,YAAY,CAACN,MAAjE;;AAEA,MAAI,CAACU,QAAQ,CAACE,WAAT,CAAqBC,MAA1B,EAAkC;AAChCH,IAAAA,QAAQ,CAACE,WAAT,GAAuBD,kBAAvB;AACD;;AAEDF,EAAAA,YAAY,CAACK,KAAb,CAAmBC,OAAnB,CAA2BC,IAA3B,CAAgCN,QAAhC;AAEAF,EAAAA,QAAQ,CAACD,uBAAuB,CAACE,YAAY,CAACQ,GAAd,EAAmBR,YAAnB,CAAxB,CAAR;AACD","sourcesContent":["export async function pickImage(ImagePicker) {\n  const result = await ImagePicker.launchImageLibraryAsync({\n    mediaTypes: ImagePicker.MediaTypeOptions.All,\n    allowsEditing: true,\n    aspect: [4, 3],\n    quality: 1,\n    base64: true,\n  });\n\n  if (!result.cancelled) {\n    return result.base64;\n  }\n}\n\nexport function addImage(\n  character, imageItem, defaultImage, updateCharacterFunction, dispatch,\n) {\n  const newCharacter = { ...character };\n  const newImage = { ...imageItem };\n  const defaultImageBase64 = `data:image/jpg;base64,${defaultImage.base64}`;\n\n  if (!newImage.imageBase64.length) {\n    newImage.imageBase64 = defaultImageBase64;\n  }\n\n  newCharacter.sheet.uploads.push(newImage);\n\n  dispatch(updateCharacterFunction(newCharacter._id, newCharacter));\n}\n"]},"metadata":{},"sourceType":"module"}