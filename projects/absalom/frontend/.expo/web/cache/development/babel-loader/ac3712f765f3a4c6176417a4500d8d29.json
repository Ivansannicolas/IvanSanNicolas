{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport { Overlay, Button } from 'react-native-elements';\nimport { loadUser, setUserId } from \"../../redux/actions/userActions\";\nimport { setCharacterId, createCharacter, loadCharacter } from \"../../redux/actions/characterActions\";\nimport { loadCharactersByOwner } from \"../../redux/actions/charactersActions\";\nimport displayAddCharacterModal from \"./CharacterListFunctions\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterListStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport addIcon from \"../../images/add-icon.png\";\n\nfunction CharacterList(_ref) {\n  var _this = this;\n\n  var userItem = _ref.userItem,\n      userId = _ref.userId,\n      charactersArray = _ref.charactersArray,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n  debugger;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characterList = _useState2[0],\n      setCharacterList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addCharacterModalView = _useState4[0],\n      setAddCharacterModalView = _useState4[1];\n\n  var isFocused = useIsFocused();\n  var newCharacterModel = {\n    name: '',\n    game: '',\n    race: '',\n    lvl: '',\n    characterClass: '',\n    owner: '',\n    uniqueKey: '1234',\n    sheet: {\n      public: true,\n      url: ''\n    },\n    inventory: {\n      public: true,\n      categories: []\n    },\n    notes: {\n      public: true,\n      characterNotes: []\n    }\n  };\n\n  var _useState5 = useState(newCharacterModel),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newCharacter = _useState6[0],\n      setNewCharacter = _useState6[1];\n\n  function addNewCharacter() {\n    if (!newCharacter.name) {\n      newCharacter.name = 'Adventurer';\n    }\n\n    if (!newCharacter.game) {\n      newCharacter.game = 'Role';\n    }\n\n    if (!newCharacter.race) {\n      newCharacter.race = 'Human';\n    }\n\n    if (!newCharacter.characterClass) {\n      newCharacter.characterClass = 'Warrior';\n    }\n\n    if (!newCharacter.lvl) {\n      newCharacter.lvl = '1';\n    }\n\n    newCharacter.owner = userId;\n    dispatch(createCharacter(newCharacter));\n    var newList = characterList.push(newCharacter);\n    setCharacterList(newList);\n    setAddCharacterModalView(!addCharacterModalView);\n  }\n\n  useEffect(function () {\n    if (!(userId != null && userId.length)) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    }\n\n    if (!(userItem != null && userItem._id)) {\n      dispatch(loadUser(userId));\n      setCharacterList([]);\n    }\n\n    if (userId && (!charactersArray || !(charactersArray != null && charactersArray.length))) {\n      dispatch(loadCharactersByOwner(userId));\n    }\n\n    setCharacterList(charactersArray || null);\n  }, [userItem, isFocused, userId, charactersArray, characterList, newCharacter]);\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, characterList != null && characterList.length ? React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, userItem.userName + \" Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.characterList__list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, characterList.map(function (character) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.characterList__list__block,\n      key: \"\" + character._id + Math.random(),\n      onPress: function onPress() {\n        debugger;\n        dispatch(setCharacterId(character._id));\n        dispatch(loadCharacter(character._id));\n        navigation.navigate('CharacterDetail');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__character__firstRow__name__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.characterList__character__firstRow__name__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }\n    }, character.name)), React.createElement(Text, {\n      style: styles.characterList__character__firstRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"Level:\", ' ', character.lvl)), React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, character.game), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, character.race), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, character.characterClass)));\n  }))) : React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"You have no characters\"), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Add a character to start!\")), React.createElement(Overlay, {\n    name: \"add character modal\",\n    isVisible: addCharacterModalView,\n    overlayStyle: styles.addCharacterModal,\n    backdropStyle: styles.addCharacterModal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      displayAddCharacterModal(setAddCharacterModalView, addCharacterModalView);\n      setNewCharacter(newCharacterModel);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addCharacterModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Add a new character\"), React.createElement(View, {\n    style: styles.addCharacterModal__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"Name:\"), React.createElement(View, {\n    style: styles.addCharacterModal__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.addCharacterModal__textInput,\n    placeholder: \"Name\",\n    value: newCharacter.name,\n    onChangeText: function onChangeText(text) {\n      return setNewCharacter(_objectSpread(_objectSpread({}, newCharacter), {}, {\n        name: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.addCharacterModal__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"Game:\"), React.createElement(View, {\n    style: styles.addCharacterModal__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.addCharacterModal__textInput,\n    placeholder: \"Game\",\n    value: newCharacter.game,\n    onChangeText: function onChangeText(text) {\n      return setNewCharacter(_objectSpread(_objectSpread({}, newCharacter), {}, {\n        game: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.addCharacterModal__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, \"Race:\"), React.createElement(View, {\n    style: styles.addCharacterModal__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.addCharacterModal__textInput,\n    placeholder: \"Race\",\n    value: newCharacter.race,\n    onChangeText: function onChangeText(text) {\n      return setNewCharacter(_objectSpread(_objectSpread({}, newCharacter), {}, {\n        race: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.addCharacterModal__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, \"Class:\"), React.createElement(View, {\n    style: styles.addCharacterModal__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.addCharacterModal__textInput,\n    placeholder: \"Class\",\n    value: newCharacter.characterClass,\n    onChangeText: function onChangeText(text) {\n      return setNewCharacter(_objectSpread(_objectSpread({}, newCharacter), {}, {\n        characterClass: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.addCharacterModal__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.addCharacterModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, \"Level:\"), React.createElement(View, {\n    style: styles.addCharacterModal__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.addCharacterModal__textInput,\n    placeholder: \"Level\",\n    value: newCharacter.lvl,\n    onChangeText: function onChangeText(text) {\n      return setNewCharacter(_objectSpread(_objectSpread({}, newCharacter), {}, {\n        lvl: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }))), React.createElement(Button, {\n    title: \"Create Character\",\n    buttonStyle: styles.buttonConfirmAddCharacterModal,\n    onPress: function onPress() {\n      return addNewCharacter();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  })))), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    onPress: function onPress() {\n      return setAddCharacterModalView(!addCharacterModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: addIcon,\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  })), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var usersReducer = _ref2.usersReducer,\n      charactersReducer = _ref2.charactersReducer;\n  return {\n    userItem: usersReducer.userItem,\n    userId: usersReducer.userId,\n    charactersArray: charactersReducer.charactersArray\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx"],"names":["React","useState","useEffect","useIsFocused","connect","Overlay","Button","loadUser","setUserId","setCharacterId","createCharacter","loadCharacter","loadCharactersByOwner","displayAddCharacterModal","NavigationBar","styles","absalomBackground","addIcon","CharacterList","userItem","userId","charactersArray","dispatch","navigation","characterList","setCharacterList","addCharacterModalView","setAddCharacterModalView","isFocused","newCharacterModel","name","game","race","lvl","characterClass","owner","uniqueKey","sheet","public","url","inventory","categories","notes","characterNotes","newCharacter","setNewCharacter","addNewCharacter","newList","push","length","_id","backgroundImage","container","title__bar","characterList__title","userName","characterList__list","map","character","characterList__list__block","Math","random","navigate","characterList__list__block__row","characterList__character__firstRow__name__block","characterList__character__firstRow__name__text","characterList__character__firstRow__text","characterList__character__secondRow__text","addCharacterModal","addCharacterModal__background","addCharacterModal__block","addCharacterModal__title","addCharacterModal__row","addCharacterModal__text","addCharacterModal__input","addCharacterModal__textInput","text","buttonConfirmAddCharacterModal","addIcon__block","icon","mapStateToProps","usersReducer","charactersReducer"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  ScrollView, ImageBackground, TextInput,\n  View, Text, TouchableOpacity, Image,\n} from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport { Overlay, Button } from 'react-native-elements';\nimport { loadUser, setUserId } from '../../redux/actions/userActions';\nimport { setCharacterId, createCharacter, loadCharacter } from '../../redux/actions/characterActions';\nimport { loadCharactersByOwner } from '../../redux/actions/charactersActions';\nimport displayAddCharacterModal from './CharacterListFunctions';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterListStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport addIcon from '../../images/add-icon.png';\n\nfunction CharacterList({\n  userItem, userId, charactersArray, dispatch, navigation,\n}) {\n  debugger;\n  const [characterList, setCharacterList] = useState([]);\n  const [addCharacterModalView, setAddCharacterModalView] = useState(false);\n  const isFocused = useIsFocused();\n\n  const newCharacterModel = {\n    name: '',\n    game: '',\n    race: '',\n    lvl: '',\n    characterClass: '',\n    owner: '',\n    uniqueKey: '1234',\n    sheet: {\n      public: true,\n      url: '',\n    },\n    inventory: {\n      public: true,\n      categories: [],\n    },\n    notes: {\n      public: true,\n      characterNotes: [],\n    },\n  };\n\n  const [newCharacter, setNewCharacter] = useState(newCharacterModel);\n\n  function addNewCharacter() {\n    if (!newCharacter.name) {\n      newCharacter.name = 'Adventurer';\n    }\n    if (!newCharacter.game) {\n      newCharacter.game = 'Role';\n    }\n    if (!newCharacter.race) {\n      newCharacter.race = 'Human';\n    }\n    if (!newCharacter.characterClass) {\n      newCharacter.characterClass = 'Warrior';\n    }\n    if (!newCharacter.lvl) {\n      newCharacter.lvl = '1';\n    }\n    newCharacter.owner = userId;\n    dispatch(createCharacter(newCharacter));\n    const newList = characterList.push(newCharacter);\n    setCharacterList(newList);\n    setAddCharacterModalView(!addCharacterModalView);\n  }\n\n  useEffect(() => {\n    if (!userId?.length) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    }\n\n    if (!userItem?._id) {\n      dispatch(loadUser(userId));\n      setCharacterList([]);\n    }\n\n    if (userId && (!charactersArray || !charactersArray?.length)) {\n      dispatch(loadCharactersByOwner(userId));\n    }\n\n    setCharacterList(charactersArray || null);\n  }, [userItem, isFocused, userId, charactersArray, characterList, newCharacter]);\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <ScrollView style={styles.container}>\n        {characterList?.length ? (\n          <View style={styles.characterList}>\n            <View style={styles.title__bar} />\n            <Text style={styles.characterList__title}>{`${userItem.userName} Characters`}</Text>\n            <View style={styles.title__bar} />\n            <View style={styles.characterList__list}>\n              {characterList.map((character) => (\n                <TouchableOpacity\n                  style={styles.characterList__list__block}\n                  key={`${character._id}${Math.random()}`}\n                  onPress={() => {\n                    debugger;\n                    dispatch(setCharacterId(character._id));\n                    dispatch(loadCharacter(character._id));\n                    navigation.navigate('CharacterDetail');\n                  }}\n                >\n                  <View style={styles.characterList__list__block__row}>\n                    <View style={styles.characterList__character__firstRow__name__block}>\n                      <Text style={styles.characterList__character__firstRow__name__text}>\n                        {character.name}\n                      </Text>\n                    </View>\n                    <Text style={styles.characterList__character__firstRow__text}>\n                      Level:\n                      {' '}\n                      {character.lvl}\n                    </Text>\n                  </View>\n                  <View style={styles.characterList__list__block__row}>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.game}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.race}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.characterClass}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n\n          </View>\n        ) : (\n          <View style={styles.characterList}>\n            <Text style={styles.characterList__title}>You have no characters</Text>\n            <Text style={styles.characterList__title}>Add a character to start!</Text>\n          </View>\n        )}\n        <Overlay\n          name=\"add character modal\"\n          isVisible={addCharacterModalView}\n          overlayStyle={styles.addCharacterModal}\n          backdropStyle={styles.addCharacterModal__background}\n          animationType=\"fade\"\n          onBackdropPress={() => {\n            displayAddCharacterModal(setAddCharacterModalView, addCharacterModalView);\n            setNewCharacter(newCharacterModel);\n          }}\n        >\n          <View style={styles.addCharacterModal__block}>\n            <Text style={styles.addCharacterModal__title}>\n              Add a new character\n            </Text>\n            <View style={styles.addCharacterModal__row}>\n              <Text style={styles.addCharacterModal__text}>Name:</Text>\n              <View style={styles.addCharacterModal__input}>\n                <TextInput\n                  style={styles.addCharacterModal__textInput}\n                  placeholder=\"Name\"\n                  value={newCharacter.name}\n                  onChangeText={(text) => setNewCharacter({ ...newCharacter, name: text })}\n                />\n              </View>\n            </View>\n            <View style={styles.addCharacterModal__row}>\n              <Text style={styles.addCharacterModal__text}>Game:</Text>\n              <View style={styles.addCharacterModal__input}>\n                <TextInput\n                  style={styles.addCharacterModal__textInput}\n                  placeholder=\"Game\"\n                  value={newCharacter.game}\n                  onChangeText={(text) => setNewCharacter({ ...newCharacter, game: text })}\n                />\n              </View>\n            </View>\n            <View style={styles.addCharacterModal__row}>\n              <Text style={styles.addCharacterModal__text}>Race:</Text>\n              <View style={styles.addCharacterModal__input}>\n                <TextInput\n                  style={styles.addCharacterModal__textInput}\n                  placeholder=\"Race\"\n                  value={newCharacter.race}\n                  onChangeText={(text) => setNewCharacter({ ...newCharacter, race: text })}\n                />\n              </View>\n            </View>\n            <View style={styles.addCharacterModal__row}>\n              <Text style={styles.addCharacterModal__text}>Class:</Text>\n              <View style={styles.addCharacterModal__input}>\n                <TextInput\n                  style={styles.addCharacterModal__textInput}\n                  placeholder=\"Class\"\n                  value={newCharacter.characterClass}\n                  onChangeText={(text) => setNewCharacter(\n                    { ...newCharacter, characterClass: text },\n                  )}\n                />\n              </View>\n            </View>\n            <View style={styles.addCharacterModal__row}>\n              <Text style={styles.addCharacterModal__text}>Level:</Text>\n              <View style={styles.addCharacterModal__input}>\n                <TextInput\n                  style={styles.addCharacterModal__textInput}\n                  placeholder=\"Level\"\n                  value={newCharacter.lvl}\n                  onChangeText={(text) => setNewCharacter({ ...newCharacter, lvl: text })}\n                />\n              </View>\n            </View>\n            <Button\n              title=\"Create Character\"\n              buttonStyle={styles.buttonConfirmAddCharacterModal}\n              onPress={() => addNewCharacter()}\n            />\n          </View>\n        </Overlay>\n\n      </ScrollView>\n      <TouchableOpacity\n        style={styles.addIcon__block}\n        onPress={() => setAddCharacterModalView(!addCharacterModalView)}\n      >\n        <Image source={addIcon} style={styles.icon} />\n      </TouchableOpacity>\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ usersReducer, charactersReducer }) {\n  return {\n    userItem: usersReducer.userItem,\n    userId: usersReducer.userId,\n    charactersArray: charactersReducer.charactersArray,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);\n"]},"metadata":{},"sourceType":"module"}