{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport { Overlay } from 'react-native-elements';\nimport { loadUser, setUserId } from \"../../redux/actions/userActions\";\nimport { setCharacterId } from \"../../redux/actions/characterActions\";\nimport displayAddCharacterModal from \"./CharacterListFunctions\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterListStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport addIcon from \"../../images/add-icon.png\";\n\nfunction CharacterList(_ref) {\n  var _this = this;\n\n  var userItem = _ref.userItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n  debugger;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characterList = _useState2[0],\n      setCharacterList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addCharacterModalView = _useState4[0],\n      setAddCharacterModalView = _useState4[1];\n\n  var isFocused = useIsFocused();\n  var newCharacter = {\n    name: '',\n    game: '',\n    race: '',\n    lvl: '',\n    characterClass: '',\n    owner: '',\n    sheet: {\n      public: true,\n      url: ''\n    },\n    inventory: {\n      public: true,\n      categories: []\n    },\n    notes: {\n      public: true,\n      characterNotes: []\n    }\n  };\n  useEffect(function () {\n    if (!(userId != null && userId.length)) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    } else if (!(userItem != null && userItem._id)) {\n      dispatch(loadUser(userId));\n      setCharacterList([]);\n    } else {\n      setCharacterList(userItem == null ? void 0 : userItem.characters);\n    }\n  }, [userItem, userItem == null ? void 0 : userItem.characters, isFocused, userId]);\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, characterList.length ? React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, userItem.userName + \" Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.characterList__list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, characterList.map(function (character) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.characterList__list__block,\n      key: \"\" + character._id + Math.random(),\n      onPress: function onPress() {\n        dispatch(setCharacterId(character._id));\n        navigation.navigate('CharacterDetail');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__character__firstRow__name__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.characterList__character__firstRow__name__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, character.name)), React.createElement(Text, {\n      style: styles.characterList__character__firstRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Level:\", ' ', character.lvl)), React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, character.game), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, character.race), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, character.characterClass)));\n  })), React.createElement(Overlay, {\n    name: \"add character modal\",\n    isVisible: addCharacterModalView,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      return displayAddCharacterModal(setAddCharacterModalView, addCharacterModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Hi\"))) : React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Loading...\"))), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    onPress: function onPress() {\n      return setAddCharacterModalView(!addCharacterModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: addIcon,\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), React.createElement(NavigationBar, {\n    navigation: navigation,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var usersReducer = _ref2.usersReducer;\n  return {\n    userItem: usersReducer.userItem,\n    userId: usersReducer.userId\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx"],"names":["React","useState","useEffect","useIsFocused","connect","Overlay","loadUser","setUserId","setCharacterId","displayAddCharacterModal","NavigationBar","styles","absalomBackground","addIcon","CharacterList","userItem","userId","dispatch","navigation","characterList","setCharacterList","addCharacterModalView","setAddCharacterModalView","isFocused","newCharacter","name","game","race","lvl","characterClass","owner","sheet","public","url","inventory","categories","notes","characterNotes","length","_id","characters","backgroundImage","container","title__bar","characterList__title","userName","characterList__list","map","character","characterList__list__block","Math","random","navigate","characterList__list__block__row","characterList__character__firstRow__name__block","characterList__character__firstRow__name__text","characterList__character__firstRow__text","characterList__character__secondRow__text","addIcon__block","icon","mapStateToProps","usersReducer"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  ScrollView, ImageBackground,\n  View, Text, TouchableOpacity, Image,\n} from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport { Overlay } from 'react-native-elements';\nimport { loadUser, setUserId } from '../../redux/actions/userActions';\nimport { setCharacterId } from '../../redux/actions/characterActions';\nimport displayAddCharacterModal from './CharacterListFunctions';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterListStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport addIcon from '../../images/add-icon.png';\n\nfunction CharacterList({\n  userItem, userId, dispatch, navigation,\n}) {\n  debugger;\n  const [characterList, setCharacterList] = useState([]);\n  const [addCharacterModalView, setAddCharacterModalView] = useState(false);\n  const isFocused = useIsFocused();\n\n  const newCharacter = {\n    name: '',\n    game: '',\n    race: '',\n    lvl: '',\n    characterClass: '',\n    owner: '',\n    sheet: {\n      public: true,\n      url: '',\n    },\n    inventory: {\n      public: true,\n      categories: [],\n    },\n    notes: {\n      public: true,\n      characterNotes: [],\n    },\n  };\n\n  useEffect(() => {\n    if (!userId?.length) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    } else if (!userItem?._id) {\n      dispatch(loadUser(userId));\n      setCharacterList([]);\n    } else {\n      setCharacterList(userItem?.characters);\n    }\n  }, [userItem, userItem?.characters, isFocused, userId]);\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <ScrollView style={styles.container}>\n        {characterList.length ? (\n          <View style={styles.characterList}>\n            <View style={styles.title__bar} />\n            <Text style={styles.characterList__title}>{`${userItem.userName} Characters`}</Text>\n            <View style={styles.title__bar} />\n            <View style={styles.characterList__list}>\n              {characterList.map((character) => (\n                <TouchableOpacity\n                  style={styles.characterList__list__block}\n                  key={`${character._id}${Math.random()}`}\n                  onPress={() => {\n                    dispatch(setCharacterId(character._id));\n                    navigation.navigate('CharacterDetail');\n                  }}\n                >\n                  <View style={styles.characterList__list__block__row}>\n                    <View style={styles.characterList__character__firstRow__name__block}>\n                      <Text style={styles.characterList__character__firstRow__name__text}>\n                        {character.name}\n                      </Text>\n                    </View>\n                    <Text style={styles.characterList__character__firstRow__text}>\n                      Level:\n                      {' '}\n                      {character.lvl}\n                    </Text>\n                  </View>\n                  <View style={styles.characterList__list__block__row}>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.game}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.race}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.characterClass}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n            <Overlay\n              name=\"add character modal\"\n              isVisible={addCharacterModalView}\n              animationType=\"fade\"\n              fullScreen\n              onBackdropPress={() => displayAddCharacterModal(\n                setAddCharacterModalView, addCharacterModalView,\n              )}\n            >\n              <Text>Hi</Text>\n            </Overlay>\n          </View>\n        ) : (\n          <View style={styles.characterList}>\n            <Text style={styles.characterList__title}>Loading...</Text>\n          </View>\n        )}\n      </ScrollView>\n      <TouchableOpacity\n        style={styles.addIcon__block}\n        onPress={() => setAddCharacterModalView(!addCharacterModalView)}\n      >\n        <Image source={addIcon} style={styles.icon} />\n      </TouchableOpacity>\n      <NavigationBar navigation={navigation} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    userItem: usersReducer.userItem,\n    userId: usersReducer.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);\n"]},"metadata":{},"sourceType":"module"}