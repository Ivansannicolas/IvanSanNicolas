{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/SearchList/SearchList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SearchBar, CheckBox } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { loadUser, setUserId } from \"../../redux/actions/userActions\";\nimport { setCharacterId, loadCharacterByKey } from \"../../redux/actions/characterActions\";\nimport { loadCharactersByOwner } from \"../../redux/actions/charactersActions\";\nimport Header from \"../Header/Header\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\nimport styles from \"./SearchListStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport addIcon from \"../../images/add-icon-blue.png\";\n\nfunction SearchList(_ref) {\n  var _this = this;\n\n  var userItem = _ref.userItem,\n      userId = _ref.userId,\n      charactersArray = _ref.charactersArray,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characterList = _useState2[0],\n      setCharacterList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addCharacterModalView = _useState4[0],\n      setAddCharacterModalView = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchValue = _useState6[0],\n      setSearchValue = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nameCheck = _useState8[0],\n      setNameCheck = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      lvlCheck = _useState10[0],\n      setLvlCheck = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      gameCheck = _useState12[0],\n      setGameCheck = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      raceCheck = _useState14[0],\n      setRaceCheck = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      classCheck = _useState16[0],\n      setClassCheck = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      typeCheck = _useState18[0],\n      setTypeCheck = _useState18[1];\n\n  useEffect(function () {\n    if (!(userId != null && userId.length)) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    }\n\n    if (!(userItem != null && userItem._id)) {\n      dispatch(loadUser(userItem._id));\n      setCharacterList([]);\n    }\n\n    if (userId && (!charactersArray || !(charactersArray != null && charactersArray.length))) {\n      dispatch(loadCharactersByOwner(userItem._id));\n    }\n\n    setCharacterList(charactersArray || null);\n  }, [userItem, userId, charactersArray]);\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    userId: userItem._id,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.characterList__title__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, userItem.userName + \" Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.characterList__searchBar__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchBar, {\n    containerStyle: styles.searchList__searchBar,\n    inputContainerStyle: styles.searchList__searchBar__input__container,\n    inputStyle: styles.searchList__searchBar__input,\n    onChangeText: function onChangeText(text) {\n      setSearchValue(text);\n      dispatch();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(CheckBox, {\n    title: \"Name\",\n    checked: nameCheck,\n    onPress: function onPress() {\n      setNameCheck(!nameCheck);\n      setLvlCheck(false);\n      setRaceCheck(false);\n      setGameCheck(false);\n      setClassCheck(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), React.createElement(CheckBox, {\n    title: \"Lvl\",\n    checked: lvlCheck,\n    onPress: function onPress() {\n      setNameCheck(false);\n      setLvlCheck(!lvlCheck);\n      setRaceCheck(false);\n      setGameCheck(false);\n      setClassCheck(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), React.createElement(CheckBox, {\n    title: \"Game\",\n    checked: gameCheck,\n    onPress: function onPress() {\n      setNameCheck(false);\n      setLvlCheck(false);\n      setRaceCheck(false);\n      setGameCheck(!nameCheck);\n      setClassCheck(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), React.createElement(CheckBox, {\n    title: \"Race\",\n    checked: raceCheck,\n    onPress: function onPress() {\n      setNameCheck(false);\n      setLvlCheck(false);\n      setRaceCheck(!nameCheck);\n      setGameCheck(false);\n      setClassCheck(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), React.createElement(CheckBox, {\n    title: \"Class\",\n    checked: classCheck,\n    onPress: function onPress() {\n      setNameCheck(false);\n      setLvlCheck(false);\n      setRaceCheck(false);\n      setGameCheck(false);\n      setClassCheck(!nameCheck);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }))), React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, characterList != null && characterList.length && userItem != null && userItem.userName ? React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.characterList__list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, characterList.map(function (character) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.characterList__list__block,\n      key: \"\" + character._id + Math.random(),\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        dispatch(setCharacterId(character._id));\n        dispatch(loadCharacterByKey(character.uniqueKey, userItem._id));\n        navigation.navigate('CharacterDetail');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__character__firstRow__name__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.characterList__character__firstRow__name__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }, character.name)), React.createElement(Text, {\n      testID: \"LevelText\",\n      style: styles.characterList__character__firstRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"Level:\", ' ', character.lvl)), React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, character.game), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, character.race), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, character.characterClass)));\n  }))) : React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"You have no characters\"), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"Add a character to start!\"), React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    onPress: function onPress() {\n      return setAddCharacterModalView(!addCharacterModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: addIcon,\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  })), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userItem._id,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var usersReducer = _ref2.usersReducer,\n      charactersReducer = _ref2.charactersReducer;\n  return {\n    usersArray: usersReducer.usersArray,\n    userItem: usersReducer.userItem,\n    charactersArray: charactersReducer.charactersArray\n  };\n}\n\nexport default connect(mapStateToProps)(SearchList);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/SearchList/SearchList.jsx"],"names":["React","useState","useEffect","SearchBar","CheckBox","connect","loadUser","setUserId","setCharacterId","loadCharacterByKey","loadCharactersByOwner","Header","NavigationBar","LoadingSpinner","styles","absalomBackground","addIcon","SearchList","userItem","userId","charactersArray","dispatch","navigation","characterList","setCharacterList","addCharacterModalView","setAddCharacterModalView","searchValue","setSearchValue","nameCheck","setNameCheck","lvlCheck","setLvlCheck","gameCheck","setGameCheck","raceCheck","setRaceCheck","classCheck","setClassCheck","typeCheck","setTypeCheck","length","_id","backgroundImage","characterList__title__block","title__bar","characterList__title","userName","characterList__searchBar__block","searchList__searchBar","searchList__searchBar__input__container","searchList__searchBar__input","text","display","flexDirection","flexWrap","container","characterList__list","map","character","characterList__list__block","Math","random","uniqueKey","navigate","characterList__list__block__row","characterList__character__firstRow__name__block","characterList__character__firstRow__name__text","name","characterList__character__firstRow__text","lvl","characterList__character__secondRow__text","game","race","characterClass","addIcon__block","icon","mapStateToProps","usersReducer","charactersReducer","usersArray"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  ScrollView, ImageBackground, TextInput,\n  View, Text, TouchableOpacity, Image,\n} from 'react-native';\nimport { SearchBar, CheckBox } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { loadUser, setUserId } from '../../redux/actions/userActions';\nimport {\n  setCharacterId, loadCharacterByKey,\n} from '../../redux/actions/characterActions';\nimport { loadCharactersByOwner } from '../../redux/actions/charactersActions';\nimport Header from '../Header/Header';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport styles from './SearchListStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport addIcon from '../../images/add-icon-blue.png';\n\nfunction SearchList({\n  userItem, userId, charactersArray, dispatch, navigation,\n}) {\n  const [characterList, setCharacterList] = useState([]);\n  const [addCharacterModalView, setAddCharacterModalView] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [nameCheck, setNameCheck] = useState(true);\n  const [lvlCheck, setLvlCheck] = useState(false);\n  const [gameCheck, setGameCheck] = useState(false);\n  const [raceCheck, setRaceCheck] = useState(false);\n  const [classCheck, setClassCheck] = useState(false);\n  const [typeCheck, setTypeCheck] = useState('');\n\n  useEffect(() => {\n    if (!userId?.length) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    }\n\n    if (!userItem?._id) {\n      dispatch(loadUser(userItem._id));\n      setCharacterList([]);\n    }\n\n    if (userId && (!charactersArray || !charactersArray?.length)) {\n      dispatch(loadCharactersByOwner(userItem._id));\n    }\n\n    setCharacterList(charactersArray || null);\n  }, [userItem, userId, charactersArray]);\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <Header navigation={navigation} userId={userItem._id} dispatch={dispatch} />\n      <View style={styles.characterList__title__block}>\n        <View style={styles.title__bar} />\n        <Text style={styles.characterList__title}>{`${userItem.userName} Characters`}</Text>\n        <View style={styles.title__bar} />\n      </View>\n      <View style={styles.characterList__searchBar__block}>\n        <SearchBar\n          containerStyle={styles.searchList__searchBar}\n          inputContainerStyle={styles.searchList__searchBar__input__container}\n          inputStyle={styles.searchList__searchBar__input}\n          onChangeText={(text) => {\n            setSearchValue(text);\n            dispatch();\n          }}\n        />\n        <View style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          <CheckBox\n            title=\"Name\"\n            checked={nameCheck}\n            onPress={() => {\n              setNameCheck(!nameCheck);\n              setLvlCheck(false);\n              setRaceCheck(false);\n              setGameCheck(false);\n              setClassCheck(false);\n            }}\n          />\n          <CheckBox\n            title=\"Lvl\"\n            checked={lvlCheck}\n            onPress={() => {\n              setNameCheck(false);\n              setLvlCheck(!lvlCheck);\n              setRaceCheck(false);\n              setGameCheck(false);\n              setClassCheck(false);\n            }}\n          />\n          <CheckBox\n            title=\"Game\"\n            checked={gameCheck}\n            onPress={() => {\n              setNameCheck(false);\n              setLvlCheck(false);\n              setRaceCheck(false);\n              setGameCheck(!nameCheck);\n              setClassCheck(false);\n            }}\n          />\n          <CheckBox\n            title=\"Race\"\n            checked={raceCheck}\n            onPress={() => {\n              setNameCheck(false);\n              setLvlCheck(false);\n              setRaceCheck(!nameCheck);\n              setGameCheck(false);\n              setClassCheck(false);\n            }}\n          />\n          <CheckBox\n            title=\"Class\"\n            checked={classCheck}\n            onPress={() => {\n              setNameCheck(false);\n              setLvlCheck(false);\n              setRaceCheck(false);\n              setGameCheck(false);\n              setClassCheck(!nameCheck);\n            }}\n          />\n        </View>\n      </View>\n      <ScrollView style={styles.container}>\n        {(characterList?.length && userItem?.userName) ? (\n          <View style={styles.characterList}>\n            <View style={styles.characterList__list}>\n              {characterList.map((character) => (\n                <TouchableOpacity\n                  style={styles.characterList__list__block}\n                  key={`${character._id}${Math.random()}`}\n                  activeOpacity={0.8}\n                  onPress={() => {\n                    dispatch(setCharacterId(character._id));\n                    dispatch(loadCharacterByKey(character.uniqueKey, userItem._id));\n                    navigation.navigate('CharacterDetail');\n                  }}\n                >\n                  <View style={styles.characterList__list__block__row}>\n                    <View style={styles.characterList__character__firstRow__name__block}>\n                      <Text style={styles.characterList__character__firstRow__name__text}>\n                        {character.name}\n                      </Text>\n                    </View>\n                    <Text\n                      testID=\"LevelText\"\n                      style={styles.characterList__character__firstRow__text}\n                    >\n                      Level:\n                      {' '}\n                      {character.lvl}\n                    </Text>\n                  </View>\n                  <View style={styles.characterList__list__block__row}>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.game}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.race}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.characterClass}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n          </View>\n        ) : (\n          <View style={styles.characterList}>\n            <Text style={styles.characterList__title}>You have no characters</Text>\n            <Text style={styles.characterList__title}>Add a character to start!</Text>\n            <LoadingSpinner />\n          </View>\n        )}\n      </ScrollView>\n      <TouchableOpacity\n        style={styles.addIcon__block}\n        onPress={() => setAddCharacterModalView(!addCharacterModalView)}\n      >\n        <Image source={addIcon} style={styles.icon} />\n      </TouchableOpacity>\n      <NavigationBar navigation={navigation} userId={userItem._id} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ usersReducer, charactersReducer }) {\n  return {\n    usersArray: usersReducer.usersArray,\n    userItem: usersReducer.userItem,\n    charactersArray: charactersReducer.charactersArray,\n  };\n}\n\nexport default connect(mapStateToProps)(SearchList);\n"]},"metadata":{},"sourceType":"module"}