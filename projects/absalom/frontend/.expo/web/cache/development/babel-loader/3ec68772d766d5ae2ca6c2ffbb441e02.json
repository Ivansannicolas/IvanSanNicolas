{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport { loadUser, setUserId } from \"../../redux/actions/userActions\";\nimport { setCharacterId } from \"../../redux/actions/characterActions\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterListStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\n\nfunction CharacterList(_ref) {\n  var _this = this;\n\n  var userItem = _ref.userItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n  debugger;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characterList = _useState2[0],\n      setCharacterList = _useState2[1];\n\n  var isFocused = useIsFocused();\n  useEffect(function () {\n    if (!userId) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    }\n\n    if (!userItem._id) {\n      dispatch(loadUser(userId));\n      setCharacterList([]);\n    } else {\n      setCharacterList(userItem == null ? void 0 : userItem.characters);\n    }\n  }, [userItem, userItem.characters, isFocused]);\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, characterList.length ? React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, userItem.userName + \" Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.characterList__list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, characterList.map(function (character) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.characterList__list__block,\n      key: \"\" + character._id + Math.random(),\n      onPress: function onPress() {\n        dispatch(setCharacterId(character._id));\n        navigation.navigate('CharacterDetail');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__character__firstRow__name__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.characterList__character__firstRow__name__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }, character.name)), React.createElement(Text, {\n      style: styles.characterList__character__firstRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Level:\", ' ', character.lvl)), React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, character.game), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, character.race), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, character.characterClass)));\n  }))) : React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Loading...\"))), React.createElement(NavigationBar, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var usersReducer = _ref2.usersReducer;\n  return {\n    userItem: usersReducer.userItem,\n    userId: usersReducer.userId\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx"],"names":["React","useState","useEffect","useIsFocused","connect","loadUser","setUserId","setCharacterId","NavigationBar","styles","absalomBackground","CharacterList","userItem","userId","dispatch","navigation","characterList","setCharacterList","isFocused","_id","characters","backgroundImage","container","length","title__bar","characterList__title","userName","characterList__list","map","character","characterList__list__block","Math","random","navigate","characterList__list__block__row","characterList__character__firstRow__name__block","characterList__character__firstRow__name__text","name","characterList__character__firstRow__text","lvl","characterList__character__secondRow__text","game","race","characterClass","mapStateToProps","usersReducer"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  ScrollView, ImageBackground,\n  View, Text, TouchableOpacity,\n} from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport { loadUser, setUserId } from '../../redux/actions/userActions';\nimport { setCharacterId } from '../../redux/actions/characterActions';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterListStyles';\nimport absalomBackground from '../../images/absalom-background.png';\n\nfunction CharacterList({\n  userItem, userId, dispatch, navigation,\n}) {\n  debugger;\n  const [characterList, setCharacterList] = useState([]);\n  const isFocused = useIsFocused();\n\n  useEffect(() => {\n    if (!userId) {\n      dispatch(setUserId('5fc3f007332636744ff4a820'));\n    }\n    if (!userItem._id) {\n      dispatch(loadUser(userId));\n      setCharacterList([]);\n    } else {\n      setCharacterList(userItem?.characters);\n    }\n  }, [userItem, userItem.characters, isFocused]);\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <ScrollView style={styles.container}>\n        {characterList.length ? (\n          <View style={styles.characterList}>\n            <View style={styles.title__bar} />\n            <Text style={styles.characterList__title}>{`${userItem.userName} Characters`}</Text>\n            <View style={styles.title__bar} />\n            <View style={styles.characterList__list}>\n              {characterList.map((character) => (\n                <TouchableOpacity\n                  style={styles.characterList__list__block}\n                  key={`${character._id}${Math.random()}`}\n                  onPress={() => {\n                    dispatch(setCharacterId(character._id));\n                    navigation.navigate('CharacterDetail');\n                  }}\n                >\n                  <View style={styles.characterList__list__block__row}>\n                    <View style={styles.characterList__character__firstRow__name__block}>\n                      <Text style={styles.characterList__character__firstRow__name__text}>\n                        {character.name}\n                      </Text>\n                    </View>\n                    <Text style={styles.characterList__character__firstRow__text}>\n                      Level:\n                      {' '}\n                      {character.lvl}\n                    </Text>\n                  </View>\n                  <View style={styles.characterList__list__block__row}>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.game}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.race}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.characterClass}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n          </View>\n        ) : (\n          <View style={styles.characterList}>\n            <Text style={styles.characterList__title}>Loading...</Text>\n          </View>\n        )}\n      </ScrollView>\n      <NavigationBar navigation={navigation} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    userItem: usersReducer.userItem,\n    userId: usersReducer.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);\n"]},"metadata":{},"sourceType":"module"}