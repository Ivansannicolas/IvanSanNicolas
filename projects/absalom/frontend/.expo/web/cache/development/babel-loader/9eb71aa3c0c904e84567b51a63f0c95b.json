{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterNotes/CharacterNotes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { connect } from 'react-redux';\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterNotesStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\n\nfunction CharacterNotes(_ref) {\n  var _this = this;\n\n  var characterItem = _ref.characterItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n\n  var _useState = useState(characterItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  useEffect(function () {\n    setCharacter(characterItem);\n  });\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, character ? React.createElement(View, {\n    style: styles.notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.character__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.character__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, character.name + \" Notes\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })), character.notes.characterNotes.map(function (note) {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: 'white',\n        width: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, note.title), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, note.entries[0]));\n  })) : React.createElement(View, {\n    style: styles.character__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.character__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"No Character\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }))), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterNotes);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterNotes/CharacterNotes.jsx"],"names":["React","useState","useEffect","connect","NavigationBar","styles","absalomBackground","CharacterNotes","characterItem","userId","dispatch","navigation","character","setCharacter","backgroundImage","container","notes","character__title","title__bar","character__name","name","characterNotes","map","note","backgroundColor","width","title","entries","mapStateToProps","charactersReducer","usersReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  ImageBackground, Text, View, ScrollView,\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterNotesStyles';\nimport absalomBackground from '../../images/absalom-background.png';\n\nfunction CharacterNotes({\n  characterItem, userId, dispatch, navigation,\n}) {\n  const [character, setCharacter] = useState(characterItem);\n\n  useEffect(() => {\n    setCharacter(characterItem);\n  });\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <ScrollView style={styles.container}>\n        {character ? (\n          <View style={styles.notes}>\n            <View style={styles.character__title}>\n              <View style={styles.title__bar} />\n              <Text style={styles.character__name}>{`${character.name} Notes`}</Text>\n              <View style={styles.title__bar} />\n            </View>\n            {character.notes.characterNotes.map((note) => (\n              <View style={{ backgroundColor: 'white', width: '100%' }}>\n                <Text>{note.title}</Text>\n                <Text>{note.entries[0]}</Text>\n              </View>\n            ))}\n          </View>\n        ) : (\n          <View style={styles.character__title}>\n            <View style={styles.title__bar} />\n            <Text style={styles.character__name}>No Character</Text>\n            <View style={styles.title__bar} />\n          </View>\n        )}\n      </ScrollView>\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterNotes);\n"]},"metadata":{},"sourceType":"module"}