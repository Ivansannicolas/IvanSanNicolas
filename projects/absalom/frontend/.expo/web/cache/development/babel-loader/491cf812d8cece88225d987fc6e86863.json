{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/UserDetail/UserDetail.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { loadUser, updateUser } from \"../../redux/actions/userActions\";\nimport { setCharacterId, loadCharacterByKey } from \"../../redux/actions/characterActions\";\nimport Header from \"../Header/Header\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\nimport styles from \"./UserDetailStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\n\nfunction UserDetail(_ref) {\n  var _this = this;\n\n  var userItem = _ref.userItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation,\n      charactersArray = _ref.charactersArray;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editModalView = _useState2[0],\n      setEditModalView = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editModalTextValue = _useState4[0],\n      setEditModalTextValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      deleteCharacterModalView = _useState6[0],\n      setDeleteCharacterModalView = _useState6[1];\n\n  useEffect(function () {\n    if (!userItem || !userItem.userName || (userItem == null ? void 0 : userItem._id) !== userId) {\n      dispatch(loadUser(userId));\n    }\n  }, [userItem, userId]);\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    alwaysBounceVertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, userItem && userItem != null && userItem._id ? React.createElement(View, {\n    style: styles.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.user__title,\n    name: \"user title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.user__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, userItem.userName), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.user__profilePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: userItem.profilePic\n    },\n    style: styles.user__profilePic__image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.user__userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.user__userName__block__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Name:\")), React.createElement(TouchableOpacity, {\n    style: styles.user__userName__block,\n    onPress: function onPress() {\n      setEditModalTextValue(userItem.userName);\n      setEditModalView(!editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, userItem.userName))), React.createElement(View, {\n    style: styles.user__games,\n    name: \"games\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.user__games__title__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Favourite Games\")), React.createElement(View, {\n    style: styles.user__games__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, userItem.favouriteGames.map(function (actualGame) {\n    return React.createElement(View, {\n      style: styles.user__game__block,\n      key: \"\" + Math.random() + Math.random(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.user__game__block__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, actualGame.game));\n  }))), React.createElement(View, {\n    style: styles.user__games,\n    name: \"languages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.user__games__title__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Languages\")), React.createElement(View, {\n    style: styles.user__games__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, userItem.languages.map(function (actualLanguage) {\n    return React.createElement(View, {\n      style: styles.user__game__block,\n      key: \"\" + Math.random() + Math.random(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.user__game__block__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, actualLanguage.language));\n  }))), React.createElement(View, {\n    style: styles.user__characters,\n    name: \"user characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.user__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, userItem.userName, ' ', \"Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.user__characters__list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, charactersArray.map(function (character) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.user__characters__list__block,\n      key: \"\" + character._id + Math.random(),\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        dispatch(setCharacterId(character._id));\n        dispatch(loadCharacterByKey(character.uniqueKey, userId));\n        navigation.navigate('CharacterDetail');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.user__characters__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__character__firstRow__name__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.characterList__character__firstRow__name__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 23\n      }\n    }, character.name)), React.createElement(Text, {\n      testID: \"LevelText\",\n      style: styles.characterList__character__firstRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"Level:\", ' ', character.lvl)), React.createElement(View, {\n      style: styles.user__characters__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characters__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, character.game), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characters__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, character.race), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characters__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, character.characterClass)));\n  })), React.createElement(View, {\n    style: styles.user__deleteButton__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    type: \"solid\",\n    title: \"Delete Character\",\n    buttonStyle: styles.button__delete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  })), React.createElement(Overlay, {\n    name: \"edit modal\",\n    isVisible: editModalView,\n    overlayStyle: styles.editModal,\n    backdropStyle: styles.modal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      setEditModalView(!editModalView);\n      setEditModalTextValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.editModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"Edit you user name\"), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.editModal__text,\n    maxLength: 30,\n    multiline: true,\n    autoCorrect: false,\n    value: editModalTextValue,\n    onChangeText: function onChangeText(text) {\n      return setEditModalTextValue(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  })), React.createElement(Button, {\n    title: \"Confirm\",\n    buttonStyle: styles.buttonConfirmEditModal,\n    onPress: function onPress() {\n      editUserName(userItem, editModalTextValue, updateUser, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }))), React.createElement(Overlay, {\n    name: \"delete character modal\",\n    isVisible: deleteCharacterModalView,\n    overlayStyle: styles.editModal,\n    backdropStyle: styles.editModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      displayDeleteCharacterModal(setDeleteCharacterModalView, deleteCharacterModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"You are about to delete\"), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.deleteModal__warningText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, \"This action is irreversible.\")), React.createElement(Button, {\n    title: \"Delete\",\n    buttonStyle: styles.button__delete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  })))) : React.createElement(View, {\n    style: styles.character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.no__user__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }), React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }))), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    charactersArray: charactersReducer.charactersArray,\n    userId: usersReducer.userId,\n    userItem: usersReducer.userItem\n  };\n}\n\nexport default connect(mapStateToProps)(UserDetail);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/UserDetail/UserDetail.jsx"],"names":["React","useState","useEffect","Button","Overlay","connect","loadUser","updateUser","setCharacterId","loadCharacterByKey","Header","NavigationBar","LoadingSpinner","styles","absalomBackground","UserDetail","userItem","userId","dispatch","navigation","charactersArray","editModalView","setEditModalView","editModalTextValue","setEditModalTextValue","deleteCharacterModalView","setDeleteCharacterModalView","userName","_id","backgroundImage","container","user","user__title","title__bar","user__name","user__profilePic","uri","profilePic","user__profilePic__image","user__userName","user__userName__block__title","user__userName__text","user__userName__block","user__userName__name","user__games","user__games__title__block","user__games__block","favouriteGames","map","actualGame","user__game__block","Math","random","user__game__block__title","game","languages","actualLanguage","language","user__characters","user__characters__list","character","user__characters__list__block","uniqueKey","navigate","user__characters__list__block__row","characterList__character__firstRow__name__block","characterList__character__firstRow__name__text","name","characterList__character__firstRow__text","lvl","characters__secondRow__text","race","characterClass","user__deleteButton__container","button__delete","editModal","modal__background","editModal__block","editModal__title","editModal__textBlock","editModal__text","text","buttonConfirmEditModal","editUserName","editModal__background","displayDeleteCharacterModal","character__description__text","deleteModal__warningText","no__user__title","mapStateToProps","charactersReducer","usersReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  ImageBackground, Text, View, ScrollView,\n  Image, TextInput, TouchableOpacity,\n} from 'react-native';\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\n// import { PropTypes } from 'prop-types';\nimport { loadUser, updateUser } from '../../redux/actions/userActions';\nimport { setCharacterId, loadCharacterByKey } from '../../redux/actions/characterActions';\nimport Header from '../Header/Header';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport styles from './UserDetailStyles';\n\nimport absalomBackground from '../../images/absalom-background.png';\n\nfunction UserDetail({\n  userItem, userId, dispatch, navigation, charactersArray,\n}) {\n  const [editModalView, setEditModalView] = useState(false);\n  const [editModalTextValue, setEditModalTextValue] = useState('');\n\n  const [deleteCharacterModalView, setDeleteCharacterModalView] = useState(false);\n\n  useEffect(() => {\n    if (!userItem || !userItem.userName || userItem?._id !== userId) {\n      dispatch(loadUser(userId));\n    }\n  }, [userItem, userId]);\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <Header navigation={navigation} userId={userId} dispatch={dispatch} />\n      <ScrollView style={styles.container} alwaysBounceVertical>\n        {(userItem && userItem?._id) ? (\n          <View style={styles.user}>\n            <View style={styles.user__title} name=\"user title\">\n              <View style={styles.title__bar} />\n              <Text style={styles.user__name}>{userItem.userName}</Text>\n              <View style={styles.title__bar} />\n            </View>\n            <View style={styles.user__profilePic}>\n              <Image\n                source={{ uri: userItem.profilePic }}\n                style={styles.user__profilePic__image}\n              />\n            </View>\n            <View style={styles.user__userName}>\n              <View style={styles.user__userName__block__title}>\n                <Text style={styles.user__userName__text}>Name:</Text>\n              </View>\n              <TouchableOpacity\n                style={styles.user__userName__block}\n                onPress={() => {\n                  setEditModalTextValue(userItem.userName);\n                  setEditModalView(!editModalView);\n                }}\n              >\n                <Text style={styles.user__userName__name}>{userItem.userName}</Text>\n              </TouchableOpacity>\n            </View>\n            <View style={styles.user__games} name=\"games\">\n              <View style={styles.user__games__title__block}>\n                <Text style={styles.user__userName__text}>Favourite Games</Text>\n              </View>\n              <View style={styles.user__games__block}>\n                {userItem.favouriteGames.map((actualGame) => (\n                  <View style={styles.user__game__block} key={`${Math.random()}${Math.random()}`}>\n                    <Text style={styles.user__game__block__title}>{actualGame.game}</Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n            <View style={styles.user__games} name=\"languages\">\n              <View style={styles.user__games__title__block}>\n                <Text style={styles.user__userName__text}>Languages</Text>\n              </View>\n              <View style={styles.user__games__block}>\n                {userItem.languages.map((actualLanguage) => (\n                  <View style={styles.user__game__block} key={`${Math.random()}${Math.random()}`}>\n                    <Text style={styles.user__game__block__title}>{actualLanguage.language}</Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n            <View style={styles.user__characters} name=\"user characters\">\n              <View style={styles.title__bar} />\n              <Text style={styles.user__name}>\n                {userItem.userName}\n                {' '}\n                Characters\n              </Text>\n              <View style={styles.title__bar} />\n            </View>\n            <View style={styles.user__characters__list}>\n              {charactersArray.map((character) => (\n                <TouchableOpacity\n                  style={styles.user__characters__list__block}\n                  key={`${character._id}${Math.random()}`}\n                  activeOpacity={0.8}\n                  onPress={() => {\n                    dispatch(setCharacterId(character._id));\n                    dispatch(loadCharacterByKey(character.uniqueKey, userId));\n                    navigation.navigate('CharacterDetail');\n                  }}\n                >\n                  <View style={styles.user__characters__list__block__row}>\n                    <View style={styles.characterList__character__firstRow__name__block}>\n                      <Text style={styles.characterList__character__firstRow__name__text}>\n                        {character.name}\n                      </Text>\n                    </View>\n                    <Text\n                      testID=\"LevelText\"\n                      style={styles.characterList__character__firstRow__text}\n                    >\n                      Level:\n                      {' '}\n                      {character.lvl}\n                    </Text>\n                  </View>\n                  <View style={styles.user__characters__list__block__row}>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characters__secondRow__text}\n                    >\n                      {character.game}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characters__secondRow__text}\n                    >\n                      {character.race}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characters__secondRow__text}\n                    >\n                      {character.characterClass}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n            <View style={styles.user__deleteButton__container}>\n              <Button\n                type=\"solid\"\n                title=\"Delete Character\"\n                buttonStyle={styles.button__delete}\n              />\n            </View>\n            <Overlay\n              name=\"edit modal\"\n              isVisible={editModalView}\n              overlayStyle={styles.editModal}\n              backdropStyle={styles.modal__background}\n              animationType=\"fade\"\n              fullScreen\n              onBackdropPress={() => {\n                setEditModalView(!editModalView);\n                setEditModalTextValue('');\n              }}\n            >\n              <View style={styles.editModal__block}>\n                <Text style={styles.editModal__title}>\n                  Edit you user name\n                </Text>\n                <View style={styles.editModal__textBlock}>\n                  <TextInput\n                    style={styles.editModal__text}\n                    maxLength={30}\n                    multiline\n                    autoCorrect={false}\n                    value={editModalTextValue}\n                    onChangeText={(text) => setEditModalTextValue(text)}\n                  />\n                </View>\n                <Button\n                  title=\"Confirm\"\n                  buttonStyle={styles.buttonConfirmEditModal}\n                  onPress={() => {\n                    editUserName(userItem, editModalTextValue, updateUser, dispatch);\n                  }}\n                />\n              </View>\n            </Overlay>\n            <Overlay\n              name=\"delete character modal\"\n              isVisible={deleteCharacterModalView}\n              overlayStyle={styles.editModal}\n              backdropStyle={styles.editModal__background}\n              animationType=\"fade\"\n              fullScreen\n              onBackdropPress={() => {\n                displayDeleteCharacterModal(\n                  setDeleteCharacterModalView, deleteCharacterModalView,\n                );\n              }}\n            >\n              <View style={styles.editModal__block}>\n                <Text style={styles.character__description__text}>\n                  You are about to delete\n                </Text>\n                <View style={styles.editModal__textBlock}>\n                  <Text style={styles.deleteModal__warningText}>\n                    This action is irreversible.\n                  </Text>\n                </View>\n                <Button\n                  title=\"Delete\"\n                  buttonStyle={styles.button__delete}\n                />\n              </View>\n            </Overlay>\n          </View>\n        ) : (\n          <View style={styles.character}>\n            <View style={styles.title__bar} />\n            <Text style={styles.no__user__title} />\n            <View style={styles.title__bar} />\n            <LoadingSpinner />\n          </View>\n        )}\n      </ScrollView>\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    charactersArray: charactersReducer.charactersArray,\n    userId: usersReducer.userId,\n    userItem: usersReducer.userItem,\n  };\n}\n\nexport default connect(mapStateToProps)(UserDetail);\n"]},"metadata":{},"sourceType":"module"}