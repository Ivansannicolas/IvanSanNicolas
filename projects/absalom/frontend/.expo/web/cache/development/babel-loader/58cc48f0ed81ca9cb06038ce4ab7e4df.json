{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/PropertyRow/PropertyRow.jsx\";\nimport React, { useState } from 'react';\nimport { View, TextInput, TouchableOpacity } from 'react-native-elements';\n\nfunction PropertyRow(_ref) {\n  var property = _ref.property,\n      styles = _ref.styles;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      propertyName = _useState2[0],\n      setPropertyName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      propertyValue = _useState4[0],\n      setPropertyValue = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.addItemModal__block__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Property name\",\n    value: property.name,\n    onChangeText: function onChangeText(text) {\n      property.value = text;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"value\",\n    value: property.value,\n    onChangeText: function onChangeText(text) {\n      property.value = text;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: garbageIcon,\n    style: styles.garbageIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default PropertyRow;","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/PropertyRow/PropertyRow.jsx"],"names":["React","useState","View","TextInput","TouchableOpacity","PropertyRow","property","styles","propertyName","setPropertyName","propertyValue","setPropertyValue","addItemModal__block__row","name","text","value","garbageIcon"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,gBAA1B,QAAkD,uBAAlD;;AAEA,SAASC,WAAT,OAA2C;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AAAA,kBACDN,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,MAClCO,YADkC;AAAA,MACpBC,eADoB;;AAAA,mBAECR,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,MAElCS,aAFkC;AAAA,MAEnBC,gBAFmB;;AAIzC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,wBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,eADd;AAEE,IAAA,KAAK,EAAEN,QAAQ,CAACO,IAFlB;AAGE,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAU;AAAER,MAAAA,QAAQ,CAACS,KAAT,GAAiBD,IAAjB;AAAwB,KAHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,KAAK,EAAER,QAAQ,CAACS,KAFlB;AAGE,IAAA,YAAY,EAAE,sBAACD,IAAD,EAAU;AAAER,MAAAA,QAAQ,CAACS,KAAT,GAAiBD,IAAjB;AAAwB,KAHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEE,WAAf;AAA4B,IAAA,KAAK,EAAET,MAAM,CAACS,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF;AAiBD;;AAED,eAAeX,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, TouchableOpacity } from 'react-native-elements';\n\nfunction PropertyRow({ property, styles }) {\n  const [propertyName, setPropertyName] = useState('');\n  const [propertyValue, setPropertyValue] = useState('');\n\n  return (\n    <View style={styles.addItemModal__block__row}>\n      <TextInput\n        placeholder=\"Property name\"\n        value={property.name}\n        onChangeText={(text) => { property.value = text; }}\n      />\n      <TextInput\n        placeholder=\"value\"\n        value={property.value}\n        onChangeText={(text) => { property.value = text; }}\n      />\n      <TouchableOpacity>\n        <Image source={garbageIcon} style={styles.garbageIcon} />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nexport default PropertyRow;\n"]},"metadata":{},"sourceType":"module"}