{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterDetail/CharacterDetail.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { loadCharacter, deleteCharacter } from \"../../redux/actions/characterActions\";\nimport { setVisibility, changeSetVisibility, displayEditModal, editCharacterMethods, editCharacter } from \"./CharacterDetailFunctions\";\nimport styles from \"./CharacterDetailStyles\";\nimport visibilityPrivateIcon from \"../../images/character-private-icon.png\";\nimport visibilityPublicIcon from \"../../images/character-public-icon.png\";\nimport characterSheetIcon from \"../../images/character-sheet-icon.png\";\nimport characterInventoryIcon from \"../../images/character-inventory-icon.png\";\nimport characterNotesIcon from \"../../images/character-notes-icon.png\";\n\nfunction CharacterDetail(_ref) {\n  var characterItem = _ref.characterItem,\n      userItem = _ref.userItem,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(characterItem || null),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  var _useState3 = useState(characterItem.name || null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      characterName = _useState4[0],\n      setCharacterName = _useState4[1];\n\n  var _useState5 = useState(characterItem.game || null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      characterGame = _useState6[0],\n      setCharacterGame = _useState6[1];\n\n  var _useState7 = useState(characterItem.race || null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      characterRace = _useState8[0],\n      setCharacterRace = _useState8[1];\n\n  var _useState9 = useState(characterItem.characterClass || null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      characterClass = _useState10[0],\n      setCharacterClass = _useState10[1];\n\n  var _useState11 = useState(characterItem.lvl || null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      characterLvl = _useState12[0],\n      setCharacterLvl = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      editModalView = _useState14[0],\n      setEditModalView = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      editModalTextValue = _useState16[0],\n      setEditModalTextValue = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      characterModalField = _useState18[0],\n      setCharacterModalField = _useState18[1];\n\n  useEffect(function () {\n    if (!character || !character.name) {\n      dispatch(loadCharacter('5fc987e8572afe3b51dcd0b4'));\n      setCharacter(characterItem);\n      setCharacterName(characterItem.name);\n      setCharacterGame(characterItem.game);\n      setCharacterRace(characterItem.race);\n      setCharacterClass(characterItem.characterClass);\n      setCharacterLvl(characterItem.lvl);\n    }\n  }, [characterItem]);\n  var backgroundImage = {\n    uri: 'https://trello-attachments.s3.amazonaws.com/5f8ca3639574d3550b3ad495/5fc038fa8e33794c73d2f2fb/2a011a9d89ff63df678311667a0173cd/Portfolio19.png'\n  };\n  return React.createElement(ImageBackground, {\n    source: backgroundImage,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, character && character != null && character._id ? React.createElement(View, {\n    style: styles.character,\n    alwaysBounceVertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.character__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.character__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, character.name), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.character__owner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.character__owner__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"User:\"), React.createElement(View, {\n    style: styles.character__owner__info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__owner__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, character.owner.userName), React.createElement(Image, {\n    source: {\n      uri: character.owner.profilePic\n    },\n    style: styles.character__owner__profilePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.character__description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Name:\"), React.createElement(TouchableOpacity, {\n    style: styles.character__description__pressable,\n    onPress: function onPress() {\n      setEditModalTextValue(characterName);\n      setCharacterModalField(editCharacterMethods.editName);\n      displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.character__description__button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, characterName)))), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Game:\"), React.createElement(TouchableOpacity, {\n    style: styles.character__description__pressable,\n    onPress: function onPress() {\n      setEditModalTextValue(characterGame);\n      setCharacterModalField(editCharacterMethods.editGame);\n      displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.character__description__button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, characterGame)))), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"race\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Race:\"), React.createElement(TouchableOpacity, {\n    style: styles.character__description__pressable,\n    onPress: function onPress() {\n      setEditModalTextValue(characterRace);\n      setCharacterModalField(editCharacterMethods.editRace);\n      displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.character__description__button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, characterRace)))), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Class:\"), React.createElement(TouchableOpacity, {\n    style: styles.character__description__pressable,\n    onPress: function onPress() {\n      setEditModalTextValue(characterClass);\n      setCharacterModalField(editCharacterMethods.editClass);\n      displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.character__description__button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, characterClass)))), React.createElement(View, {\n    style: styles.character__description__row,\n    name: \"lvl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Level:\"), React.createElement(TouchableOpacity, {\n    style: styles.character__description__pressable,\n    onPress: function onPress() {\n      setEditModalTextValue(characterLvl);\n      setCharacterModalField(editCharacterMethods.editLvl);\n      displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.character__description__button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, characterLvl))))), React.createElement(View, {\n    style: styles.character__set,\n    name: \"sheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.set__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__set__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, \"Character Sheet:\"), React.createElement(Image, {\n    source: characterSheetIcon,\n    style: styles.character__set__icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSetVisibility(character, setCharacter, setVisibility.sheetVisibility, setVisibility, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, character.sheet.public ? React.createElement(Image, {\n    source: visibilityPublicIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.SheetVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }) : React.createElement(Image, {\n    source: visibilityPrivateIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.SheetVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    style: styles.character__set,\n    name: \"inventory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.set__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__set__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, \"Inventory:\"), React.createElement(Image, {\n    source: characterInventoryIcon,\n    style: styles.character__set__icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSetVisibility(character, setCharacter, setVisibility.inventoryVisibility, setVisibility, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, character.inventory.public ? React.createElement(Image, {\n    source: visibilityPublicIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.inventoryVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }) : React.createElement(Image, {\n    source: visibilityPrivateIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.inventoryVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    style: styles.character__set,\n    name: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.set__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__set__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Notes:\"), React.createElement(Image, {\n    source: characterNotesIcon,\n    style: styles.character__set__icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeSetVisibility(character, setCharacter, setVisibility.notesVisibility, setVisibility, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, character.notes.public ? React.createElement(Image, {\n    source: visibilityPublicIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.notesVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }) : React.createElement(Image, {\n    source: visibilityPrivateIcon,\n    style: styles.character__set__visible__icon,\n    id: setVisibility.notesVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    style: styles.character__button__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    type: \"solid\",\n    title: \"Delete Character\",\n    buttonStyle: styles.button__delete,\n    onPress: function onPress() {\n      return dispatch(deleteCharacter(characterItem._id));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  })), React.createElement(Overlay, {\n    name: \"edit modal\",\n    isVisible: editModalView,\n    overlayStyle: styles.editModal,\n    backdropStyle: styles.editModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      return displayEditModal(setEditModalView, editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, characterModalField), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.editModal__text,\n    onChangeText: function onChangeText(text) {\n      return setEditModalTextValue(text);\n    },\n    value: editModalTextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  })), React.createElement(Button, {\n    title: \"Confirm\",\n    buttonStyle: styles.buttonConfirmEditModal,\n    onPress: function onPress() {\n      return editCharacter(characterModalField, character, editModalTextValue, editCharacterMethods, setEditModalView, editModalView, setCharacterName, setCharacterGame, setCharacterRace, setCharacterClass, setCharacterLvl, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  })))) : React.createElement(View, {\n    style: styles.character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.no__character__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, \"No Character\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }))));\n}\n\nCharacterDetail.propTypes = {\n  characterItem: PropTypes.shape({\n    name: PropTypes.string,\n    game: PropTypes.string,\n    race: PropTypes.string,\n    characterClass: PropTypes.string,\n    lvl: PropTypes.string\n  }),\n  userItem: PropTypes.shape({\n    userName: PropTypes.string,\n    country: PropTypes.string,\n    profilePic: PropTypes.string,\n    characters: PropTypes.shape([]),\n    languages: PropTypes.shape([]),\n    favouriteGames: PropTypes.shape([])\n  }),\n  dispatch: PropTypes.func.isRequired\n};\nCharacterDetail.defaultProps = {\n  characterItem: {},\n  userItem: {}\n};\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer;\n  return {\n    characterItem: charactersReducer.characterItem\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterDetail);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterDetail/CharacterDetail.jsx"],"names":["React","useState","useEffect","Button","Overlay","connect","PropTypes","loadCharacter","deleteCharacter","setVisibility","changeSetVisibility","displayEditModal","editCharacterMethods","editCharacter","styles","visibilityPrivateIcon","visibilityPublicIcon","characterSheetIcon","characterInventoryIcon","characterNotesIcon","CharacterDetail","characterItem","userItem","dispatch","character","setCharacter","name","characterName","setCharacterName","game","characterGame","setCharacterGame","race","characterRace","setCharacterRace","characterClass","setCharacterClass","lvl","characterLvl","setCharacterLvl","editModalView","setEditModalView","editModalTextValue","setEditModalTextValue","characterModalField","setCharacterModalField","backgroundImage","uri","container","_id","character__title","title__bar","character__name","character__owner","character__owner__text","character__owner__info","owner","userName","profilePic","character__owner__profilePic","character__description","character__description__row","character__description__text","character__description__pressable","editName","character__description__button","character__description__textButton","editGame","editRace","editClass","editLvl","character__set","set__bar","character__set__text","character__set__icon","sheetVisibility","sheet","public","character__set__visible__icon","SheetVisibility","inventoryVisibility","inventory","notesVisibility","notes","character__button__container","button__delete","editModal","editModal__background","editModal__block","editModal__textBlock","editModal__text","text","buttonConfirmEditModal","no__character__title","propTypes","shape","string","country","characters","languages","favouriteGames","func","isRequired","defaultProps","mapStateToProps","charactersReducer"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  ImageBackground, Text, View,\n  ScrollView, Image, TouchableOpacity, TextInput,\n} from 'react-native';\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { loadCharacter, deleteCharacter } from '../../redux/actions/characterActions';\nimport {\n  setVisibility, changeSetVisibility, displayEditModal, editCharacterMethods, editCharacter,\n} from './CharacterDetailFunctions';\nimport styles from './CharacterDetailStyles';\n\nimport visibilityPrivateIcon from '../../images/character-private-icon.png';\nimport visibilityPublicIcon from '../../images/character-public-icon.png';\nimport characterSheetIcon from '../../images/character-sheet-icon.png';\nimport characterInventoryIcon from '../../images/character-inventory-icon.png';\nimport characterNotesIcon from '../../images/character-notes-icon.png';\n\nfunction CharacterDetail({ characterItem, userItem, dispatch }) {\n  const [character, setCharacter] = useState(characterItem || null);\n  const [characterName, setCharacterName] = useState(characterItem.name || null);\n  const [characterGame, setCharacterGame] = useState(characterItem.game || null);\n  const [characterRace, setCharacterRace] = useState(characterItem.race || null);\n  const [characterClass, setCharacterClass] = useState(characterItem.characterClass || null);\n  const [characterLvl, setCharacterLvl] = useState(characterItem.lvl || null);\n\n  const [editModalView, setEditModalView] = useState(false);\n  const [editModalTextValue, setEditModalTextValue] = useState('');\n  const [characterModalField, setCharacterModalField] = useState(null);\n\n  useEffect(() => {\n    if (!character || !character.name) {\n      dispatch(loadCharacter('5fc987e8572afe3b51dcd0b4'));\n      setCharacter(characterItem);\n      setCharacterName(characterItem.name);\n      setCharacterGame(characterItem.game);\n      setCharacterRace(characterItem.race);\n      setCharacterClass(characterItem.characterClass);\n      setCharacterLvl(characterItem.lvl);\n    }\n  }, [characterItem]);\n\n  const backgroundImage = {\n    uri: 'https://trello-attachments.s3.amazonaws.com/5f8ca3639574d3550b3ad495/5fc038fa8e33794c73d2f2fb/2a011a9d89ff63df678311667a0173cd/Portfolio19.png',\n  };\n\n  return (\n    <ImageBackground source={backgroundImage} style={styles.backgroundImage}>\n      <ScrollView style={styles.container}>\n        {(character && character?._id) ? (\n          <View style={styles.character} alwaysBounceVertical>\n            <View style={styles.character__title}>\n              <View style={styles.title__bar} />\n              <Text style={styles.character__name}>{character.name}</Text>\n              <View style={styles.title__bar} />\n            </View>\n            <View style={styles.character__owner}>\n              <Text style={styles.character__owner__text}>User:</Text>\n              <View style={styles.character__owner__info}>\n                <Text style={styles.character__owner__text}>{character.owner.userName}</Text>\n                <Image\n                  source={{ uri: character.owner.profilePic }}\n                  style={styles.character__owner__profilePic}\n                />\n              </View>\n            </View>\n            <View style={styles.character__description}>\n              <View style={styles.character__description__row} name=\"name\">\n                <Text style={styles.character__description__text}>Name:</Text>\n                <TouchableOpacity\n                  style={styles.character__description__pressable}\n                  onPress={\n                        () => {\n                          setEditModalTextValue(characterName);\n                          setCharacterModalField(editCharacterMethods.editName);\n                          displayEditModal(setEditModalView, editModalView);\n                        }\n                      }\n                >\n                  <View style={styles.character__description__button}>\n                    <Text style={styles.character__description__textButton}>{characterName}</Text>\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View style={styles.character__description__row} name=\"game\">\n                <Text style={styles.character__description__text}>Game:</Text>\n                <TouchableOpacity\n                  style={styles.character__description__pressable}\n                  onPress={\n                        () => {\n                          setEditModalTextValue(characterGame);\n                          setCharacterModalField(editCharacterMethods.editGame);\n                          displayEditModal(setEditModalView, editModalView);\n                        }\n                      }\n                >\n                  <View style={styles.character__description__button}>\n                    <Text style={styles.character__description__textButton}>{characterGame}</Text>\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View style={styles.character__description__row} name=\"race\">\n                <Text style={styles.character__description__text}>Race:</Text>\n                <TouchableOpacity\n                  style={styles.character__description__pressable}\n                  onPress={\n                        () => {\n                          setEditModalTextValue(characterRace);\n                          setCharacterModalField(editCharacterMethods.editRace);\n                          displayEditModal(setEditModalView, editModalView);\n                        }\n                      }\n                >\n                  <View style={styles.character__description__button}>\n                    <Text style={styles.character__description__textButton}>{characterRace}</Text>\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View style={styles.character__description__row} name=\"class\">\n                <Text style={styles.character__description__text}>Class:</Text>\n                <TouchableOpacity\n                  style={styles.character__description__pressable}\n                  onPress={\n                        () => {\n                          setEditModalTextValue(characterClass);\n                          setCharacterModalField(editCharacterMethods.editClass);\n                          displayEditModal(setEditModalView, editModalView);\n                        }\n                      }\n                >\n                  <View style={styles.character__description__button}>\n                    <Text style={styles.character__description__textButton}>{characterClass}</Text>\n                  </View>\n                </TouchableOpacity>\n              </View>\n              <View style={styles.character__description__row} name=\"lvl\">\n                <Text style={styles.character__description__text}>Level:</Text>\n                <TouchableOpacity\n                  style={styles.character__description__pressable}\n                  onPress={\n                        () => {\n                          setEditModalTextValue(characterLvl);\n                          setCharacterModalField(editCharacterMethods.editLvl);\n                          displayEditModal(setEditModalView, editModalView);\n                        }\n                      }\n                >\n                  <View style={styles.character__description__button}>\n                    <Text style={styles.character__description__textButton}>{characterLvl}</Text>\n                  </View>\n                </TouchableOpacity>\n              </View>\n            </View>\n            <View style={styles.character__set} name=\"sheet\">\n              <View style={styles.set__bar}>\n                <Text style={styles.character__set__text}>Character Sheet:</Text>\n                <Image\n                  source={characterSheetIcon}\n                  style={styles.character__set__icon}\n                />\n              </View>\n              <TouchableOpacity onPress={() => changeSetVisibility(\n                character, setCharacter, setVisibility.sheetVisibility, setVisibility, dispatch,\n              )}\n              >\n                {character.sheet.public ? (\n                  <Image\n                    source={visibilityPublicIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.SheetVisibility}\n                  />\n                ) : (\n                  <Image\n                    source={visibilityPrivateIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.SheetVisibility}\n                  />\n                )}\n              </TouchableOpacity>\n            </View>\n            <View style={styles.character__set} name=\"inventory\">\n              <View style={styles.set__bar}>\n                <Text style={styles.character__set__text}>Inventory:</Text>\n                <Image\n                  source={characterInventoryIcon}\n                  style={styles.character__set__icon}\n                />\n              </View>\n              <TouchableOpacity onPress={() => changeSetVisibility(\n                character, setCharacter, setVisibility.inventoryVisibility, setVisibility, dispatch,\n              )}\n              >\n                {character.inventory.public ? (\n                  <Image\n                    source={visibilityPublicIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.inventoryVisibility}\n                  />\n                ) : (\n                  <Image\n                    source={visibilityPrivateIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.inventoryVisibility}\n                  />\n                )}\n              </TouchableOpacity>\n            </View>\n            <View style={styles.character__set} name=\"notes\">\n              <View style={styles.set__bar}>\n                <Text style={styles.character__set__text}>Notes:</Text>\n                <Image\n                  source={characterNotesIcon}\n                  style={styles.character__set__icon}\n                />\n              </View>\n              <TouchableOpacity onPress={() => changeSetVisibility(\n                character, setCharacter, setVisibility.notesVisibility, setVisibility, dispatch,\n              )}\n              >\n                {character.notes.public ? (\n                  <Image\n                    source={visibilityPublicIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.notesVisibility}\n                  />\n                ) : (\n                  <Image\n                    source={visibilityPrivateIcon}\n                    style={styles.character__set__visible__icon}\n                    id={setVisibility.notesVisibility}\n                  />\n                )}\n              </TouchableOpacity>\n            </View>\n            <View style={styles.character__button__container}>\n              <Button\n                type=\"solid\"\n                title=\"Delete Character\"\n                buttonStyle={styles.button__delete}\n                onPress={() => dispatch(deleteCharacter(characterItem._id))}\n              />\n            </View>\n            <Overlay\n              name=\"edit modal\"\n              isVisible={editModalView}\n              overlayStyle={styles.editModal}\n              backdropStyle={styles.editModal__background}\n              animationType=\"fade\"\n              fullScreen\n              onBackdropPress={() => displayEditModal(setEditModalView, editModalView)}\n            >\n              <View style={styles.editModal__block}>\n                <Text style={styles.character__description__text}>\n                  {characterModalField}\n                </Text>\n                <View style={styles.editModal__textBlock}>\n                  <TextInput\n                    style={styles.editModal__text}\n                    onChangeText={(text) => setEditModalTextValue(text)}\n                    value={editModalTextValue}\n                  />\n                </View>\n                <Button\n                  title=\"Confirm\"\n                  buttonStyle={styles.buttonConfirmEditModal}\n                  onPress={\n                    () => editCharacter(\n                      characterModalField, character, editModalTextValue, editCharacterMethods,\n                      setEditModalView, editModalView, setCharacterName, setCharacterGame,\n                      setCharacterRace, setCharacterClass, setCharacterLvl, dispatch,\n                    )\n                    }\n                />\n              </View>\n            </Overlay>\n          </View>\n        ) : (\n          <View style={styles.character}>\n            <View style={styles.title__bar} />\n            <Text style={styles.no__character__title}>No Character</Text>\n            <View style={styles.title__bar} />\n          </View>\n        )}\n      </ScrollView>\n    </ImageBackground>\n  );\n}\n\nCharacterDetail.propTypes = {\n  characterItem: PropTypes.shape({\n    name: PropTypes.string,\n    game: PropTypes.string,\n    race: PropTypes.string,\n    characterClass: PropTypes.string,\n    lvl: PropTypes.string,\n  }),\n  userItem: PropTypes.shape({\n    userName: PropTypes.string,\n    country: PropTypes.string,\n    profilePic: PropTypes.string,\n    characters: PropTypes.shape([]),\n    languages: PropTypes.shape([]),\n    favouriteGames: PropTypes.shape([]),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nCharacterDetail.defaultProps = {\n  characterItem: {},\n  userItem: {},\n\n};\n\nfunction mapStateToProps({ charactersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterDetail);\n"]},"metadata":{},"sourceType":"module"}