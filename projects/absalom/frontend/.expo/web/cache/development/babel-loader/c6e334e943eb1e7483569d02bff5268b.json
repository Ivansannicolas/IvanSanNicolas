{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport actionTypes from \"./ActionTypes\";\n\nfunction loadCharacterSuccess(character) {\n  return {\n    type: actionTypes.LOAD_CHARACTER,\n    character: character\n  };\n}\n\nfunction loadError(error) {\n  return {\n    type: actionTypes.LOAD_ERROR,\n    error: error\n  };\n}\n\nexport function loadCharacter(characterId) {\n  debugger;\n  return function _callee(dispatch) {\n    var endpoint, _await$axios$get, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            endpoint = 'http://192.168.1.134:1240/character';\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(endpoint, {\n              params: {\n                characterId: characterId\n              }\n            }));\n\n          case 4:\n            _await$axios$get = _context.sent;\n            data = _await$axios$get.data;\n            dispatch(loadCharacterSuccess(data));\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch(loadError(_context.t0));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n}\nexport function updateCharacter(characterId, updatedCharacter) {\n  return function _callee2(dispatch) {\n    var endpoint;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            endpoint = 'http://192.168.1.134:1240/character';\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.patch(endpoint, {\n              characterId: characterId,\n              updatedCharacter: updatedCharacter\n            }));\n\n          case 4:\n            dispatch(loadCharacter(characterId));\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](1);\n            dispatch(loadError(_context2.t0));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 7]], Promise);\n  };\n}\nexport function deleteCharacter(characterId) {\n  debugger;\n  return function _callee3(dispatch) {\n    var characterEndpoint;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            characterEndpoint = 'http://192.168.1.134:1240/character';\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(axios.delete(characterEndpoint, {\n              params: characterId\n            }));\n\n          case 4:\n            dispatch(loadCharacterSuccess({}));\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](1);\n            dispatch(loadError(_context3.t0));\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 7]], Promise);\n  };\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/redux/actions/characterActions.js"],"names":["axios","actionTypes","loadCharacterSuccess","character","type","LOAD_CHARACTER","loadError","error","LOAD_ERROR","loadCharacter","characterId","dispatch","endpoint","get","params","data","updateCharacter","updatedCharacter","patch","deleteCharacter","characterEndpoint","delete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;;AAKA,SAASC,oBAAT,CAA8BC,SAA9B,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI,cADb;AAELF,IAAAA,SAAS,EAATA;AAFK,GAAP;AAID;;AAED,SAASG,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAO;AACLH,IAAAA,IAAI,EAAEH,WAAW,CAACO,UADb;AAELD,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;;AAED,OAAO,SAASE,aAAT,CAAuBC,WAAvB,EAAoC;AACzC;AACA,SAAO,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,QADD,GACY,qCADZ;AAAA;AAAA;AAAA,6CAGoBZ,KAAK,CAACa,GAAN,CAAUD,QAAV,EAAoB;AAAEE,cAAAA,MAAM,EAAE;AAAEJ,gBAAAA,WAAW,EAAXA;AAAF;AAAV,aAApB,CAHpB;;AAAA;AAAA;AAGKK,YAAAA,IAHL,oBAGKA,IAHL;AAIHJ,YAAAA,QAAQ,CAACT,oBAAoB,CAACa,IAAD,CAArB,CAAR;AAJG;AAAA;;AAAA;AAAA;AAAA;AAMHJ,YAAAA,QAAQ,CAACL,SAAS,aAAV,CAAR;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AASD;AAED,OAAO,SAASU,eAAT,CAAyBN,WAAzB,EAAsCO,gBAAtC,EAAwD;AAC7D,SAAO,kBAAON,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,QADD,GACY,qCADZ;AAAA;AAAA;AAAA,6CAGGZ,KAAK,CAACkB,KAAN,CAAYN,QAAZ,EAAsB;AAAEF,cAAAA,WAAW,EAAXA,WAAF;AAAeO,cAAAA,gBAAgB,EAAhBA;AAAf,aAAtB,CAHH;;AAAA;AAIHN,YAAAA,QAAQ,CAACF,aAAa,CAACC,WAAD,CAAd,CAAR;AAJG;AAAA;;AAAA;AAAA;AAAA;AAMHC,YAAAA,QAAQ,CAACL,SAAS,cAAV,CAAR;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AASD;AAED,OAAO,SAASa,eAAT,CAAyBT,WAAzB,EAAsC;AAC3C;AACA,SAAO,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACCS,YAAAA,iBADD,GACqB,qCADrB;AAAA;AAAA;AAAA,6CAGGpB,KAAK,CAACqB,MAAN,CAAaD,iBAAb,EAAgC;AAAEN,cAAAA,MAAM,EAAEJ;AAAV,aAAhC,CAHH;;AAAA;AAIHC,YAAAA,QAAQ,CAACT,oBAAoB,CAAC,EAAD,CAArB,CAAR;AAJG;AAAA;;AAAA;AAAA;AAAA;AAMHS,YAAAA,QAAQ,CAACL,SAAS,cAAV,CAAR;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AASD","sourcesContent":["import axios from 'axios';\nimport actionTypes from './ActionTypes';\n\n// homeIp: 'http://192.168.1.134:1240'\n// skylabIp: 'http://192.168.0.61:1240'\n\nfunction loadCharacterSuccess(character) {\n  return {\n    type: actionTypes.LOAD_CHARACTER,\n    character,\n  };\n}\n\nfunction loadError(error) {\n  return {\n    type: actionTypes.LOAD_ERROR,\n    error,\n  };\n}\n\nexport function loadCharacter(characterId) {\n  debugger;\n  return async (dispatch) => {\n    const endpoint = 'http://192.168.1.134:1240/character';\n    try {\n      const { data } = await axios.get(endpoint, { params: { characterId } });\n      dispatch(loadCharacterSuccess(data));\n    } catch (error) {\n      dispatch(loadError(error));\n    }\n  };\n}\n\nexport function updateCharacter(characterId, updatedCharacter) {\n  return async (dispatch) => {\n    const endpoint = 'http://192.168.1.134:1240/character';\n    try {\n      await axios.patch(endpoint, { characterId, updatedCharacter });\n      dispatch(loadCharacter(characterId));\n    } catch (error) {\n      dispatch(loadError(error));\n    }\n  };\n}\n\nexport function deleteCharacter(characterId) {\n  debugger;\n  return async (dispatch) => {\n    const characterEndpoint = 'http://192.168.1.134:1240/character';\n    try {\n      await axios.delete(characterEndpoint, { params: characterId });\n      dispatch(loadCharacterSuccess({}));\n    } catch (error) {\n      dispatch(loadError(error));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}