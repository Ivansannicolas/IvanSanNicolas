{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/CharacterInventory.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Overlay, Button } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { updateCharacter } from \"../../redux/actions/characterActions\";\nimport { createCategory, editCategory } from \"./CharacterInventoryFunctions\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterInventoryStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport addIcon from \"../../images/add-icon.png\";\n\nfunction CharacterInventory(_ref) {\n  var _this = this;\n\n  var characterItem = _ref.characterItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n\n  var _useState = useState(characterItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoryModalView = _useState4[0],\n      setCategoryModalView = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      categoryModalValue = _useState6[0],\n      setCategoryModalValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      editCategoryModalView = _useState8[0],\n      setEditCategoryModalView = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      categoryKey = _useState10[0],\n      setCategoryKey = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      editCategoryModalValue = _useState12[0],\n      setEditCategoryModalValue = _useState12[1];\n\n  useEffect(function () {\n    setCharacter(characterItem);\n  }, [characterItem]);\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, character ? React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inventory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.inventory__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.inventory__title__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, character.name + \" Inventory\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  })), character.inventory.categories.map(function (category) {\n    return React.createElement(View, {\n      style: styles.inventory__category,\n      key: performance.now(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setCategoryKey(category.uniqueKey);\n        setEditCategoryModalView(!editCategoryModalView);\n        setEditCategoryModalValue(category.title);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.inventory__category__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, category.title)), category.items.map(function (item) {\n      return React.createElement(View, {\n        style: styles.inventory__category__item,\n        key: performance.now(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: styles.inventory__category__item__title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inventory__category__item__title__text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }\n      }, item.itemTitle)), item.properties.map(function (property) {\n        if (property !== 'itemTitle' && property !== '_id' && property !== 'properties') {\n          return React.createElement(View, {\n            style: styles.inventory__category__item__row,\n            key: performance.now(),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: styles.inventory__category__item__text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }\n          }, \"\" + property.name), React.createElement(Text, {\n            style: styles.inventory__category__item__text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }\n          }, property.value));\n        }\n      }));\n    }));\n  }))) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 40,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"No Character\")), React.createElement(Overlay, {\n    name: \"add category modal\",\n    isVisible: categoryModalView,\n    overlayStyle: styles.categoryModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setCategoryModalView(!categoryModalView);\n      setCategoryModalValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.categoryModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.categoryModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Add new category\"), React.createElement(TextInput, {\n    style: styles.categoryModal__text,\n    placeholder: \"Category Name\",\n    value: categoryModalValue,\n    onChangeText: function onChangeText(text) {\n      return setCategoryModalValue(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styles.categoryModal__button,\n    title: \"Create Category\",\n    onPress: function onPress() {\n      setCategoryModalView(!categoryModalView);\n      createCategory(character, categoryModalValue, updateCharacter, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }))), React.createElement(Overlay, {\n    name: \"edit category modal\",\n    isVisible: editCategoryModalView,\n    overlayStyle: styles.editCategoryModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setEditCategoryModalView(!editCategoryModalView);\n      setEditCategoryModalValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.categoryModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.categoryModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Edit category\"), React.createElement(TextInput, {\n    style: styles.categoryModal__text,\n    placeholder: \"Category Name\",\n    value: editCategoryModalValue,\n    onChangeText: function onChangeText(text) {\n      return setEditCategoryModalValue(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.editCategoryModal__buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    buttonStyle: styles.editCategoryModal__editButton,\n    title: \"Edit\",\n    onPress: function onPress(category) {\n      editCategory(character, category.uniqueKey, newTitle, updateCharacterFunction, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styles.editCategoryModal__deleteButton,\n    title: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })))), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    onPress: function onPress() {\n      return setCategoryModalView(!categoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: addIcon,\n    style: styles.addIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  })), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterInventory);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/CharacterInventory.jsx"],"names":["React","useEffect","useState","Overlay","Button","connect","updateCharacter","createCategory","editCategory","NavigationBar","styles","absalomBackground","addIcon","CharacterInventory","characterItem","userId","dispatch","navigation","character","setCharacter","categoryModalView","setCategoryModalView","categoryModalValue","setCategoryModalValue","editCategoryModalView","setEditCategoryModalView","categoryKey","setCategoryKey","editCategoryModalValue","setEditCategoryModalValue","backgroundImage","container","inventory","inventory__title","title__bar","inventory__title__text","name","categories","map","category","inventory__category","performance","now","uniqueKey","title","inventory__category__title","items","item","inventory__category__item","inventory__category__item__title","inventory__category__item__title__text","itemTitle","properties","property","inventory__category__item__row","inventory__category__item__text","value","marginTop","textAlign","categoryModal","categoryModal__background","categoryModal__block","categoryModal__title","categoryModal__text","text","categoryModal__button","editCategoryModal","editCategoryModal__buttons","editCategoryModal__editButton","newTitle","updateCharacterFunction","editCategoryModal__deleteButton","addIcon__block","mapStateToProps","charactersReducer","usersReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  ScrollView, ImageBackground, TextInput,\n  View, Text, TouchableOpacity, Image,\n} from 'react-native';\nimport { Overlay, Button } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { updateCharacter } from '../../redux/actions/characterActions';\nimport { createCategory, editCategory } from './CharacterInventoryFunctions';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterInventoryStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport addIcon from '../../images/add-icon.png';\n\nfunction CharacterInventory({\n  characterItem, userId, dispatch, navigation,\n}) {\n  const [character, setCharacter] = useState(characterItem);\n  const [categoryModalView, setCategoryModalView] = useState(false);\n  const [categoryModalValue, setCategoryModalValue] = useState('');\n\n  const [editCategoryModalView, setEditCategoryModalView] = useState(false);\n  const [categoryKey, setCategoryKey] = useState('');\n  const [editCategoryModalValue, setEditCategoryModalValue] = useState('');\n\n  useEffect(() => {\n    setCharacter(characterItem);\n  }, [characterItem]);\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      {character ? (\n        <ScrollView style={styles.container}>\n          <View style={styles.inventory}>\n            <View style={styles.inventory__title}>\n              <View style={styles.title__bar} />\n              <Text style={styles.inventory__title__text}>{`${character.name} Inventory`}</Text>\n              <View style={styles.title__bar} />\n            </View>\n            {character.inventory.categories.map((category) => (\n              <View style={styles.inventory__category} key={performance.now()}>\n                <TouchableOpacity\n                  onPress={() => {\n                    setCategoryKey(category.uniqueKey);\n                    setEditCategoryModalView(!editCategoryModalView);\n                    setEditCategoryModalValue(category.title);\n                  }}\n                >\n                  <Text style={styles.inventory__category__title}>{category.title}</Text>\n                </TouchableOpacity>\n                {category.items.map((item) => (\n                  <View style={styles.inventory__category__item} key={performance.now()}>\n                    <View style={styles.inventory__category__item__title}>\n                      <Text\n                        style={styles.inventory__category__item__title__text}\n                      >\n                        {item.itemTitle}\n                      </Text>\n                    </View>\n                    {item.properties.map((property) => {\n                      if (property !== 'itemTitle' && property !== '_id' && property !== 'properties') {\n                        return (\n                          <View\n                            style={styles.inventory__category__item__row}\n                            key={performance.now()}\n                          >\n                            <Text style={styles.inventory__category__item__text}>{`${property.name}`}</Text>\n                            <Text\n                              style={styles.inventory__category__item__text}\n                            >\n                              {property.value}\n\n                            </Text>\n                          </View>\n                        );\n                      }\n                    })}\n                  </View>\n                ))}\n              </View>\n            ))}\n          </View>\n        </ScrollView>\n      ) : (\n        <View>\n          <Text style={{ marginTop: 40, textAlign: 'center' }}>No Character</Text>\n        </View>\n      )}\n      <Overlay\n        name=\"add category modal\"\n        isVisible={categoryModalView}\n        overlayStyle={styles.categoryModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        onBackdropPress={() => {\n          setCategoryModalView(!categoryModalView);\n          setCategoryModalValue('');\n        }}\n      >\n        <View style={styles.categoryModal__block}>\n          <Text style={styles.categoryModal__title}>Add new category</Text>\n          <TextInput\n            style={styles.categoryModal__text}\n            placeholder=\"Category Name\"\n            value={categoryModalValue}\n            onChangeText={(text) => setCategoryModalValue(text)}\n          />\n          <Button\n            buttonStyle={styles.categoryModal__button}\n            title=\"Create Category\"\n            onPress={() => {\n              setCategoryModalView(!categoryModalView);\n              createCategory(character, categoryModalValue, updateCharacter, dispatch);\n            }}\n          />\n        </View>\n      </Overlay>\n      <Overlay\n        name=\"edit category modal\"\n        isVisible={editCategoryModalView}\n        overlayStyle={styles.editCategoryModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        onBackdropPress={() => {\n          setEditCategoryModalView(!editCategoryModalView);\n          setEditCategoryModalValue('');\n        }}\n      >\n        <View style={styles.categoryModal__block}>\n          <Text style={styles.categoryModal__title}>\n            Edit category\n          </Text>\n          <TextInput\n            style={styles.categoryModal__text}\n            placeholder=\"Category Name\"\n            value={editCategoryModalValue}\n            onChangeText={(text) => setEditCategoryModalValue(text)}\n          />\n          <View style={styles.editCategoryModal__buttons}>\n            <Button\n              buttonStyle={styles.editCategoryModal__editButton}\n              title=\"Edit\"\n              onPress={(category) => {\n                editCategory(\n                  character, category.uniqueKey, newTitle, updateCharacterFunction, dispatch,\n                );\n              }}\n            />\n            <Button\n              buttonStyle={styles.editCategoryModal__deleteButton}\n              title=\"Delete\"\n            />\n          </View>\n        </View>\n      </Overlay>\n\n      <TouchableOpacity\n        style={styles.addIcon__block}\n        onPress={() => setCategoryModalView(!categoryModalView)}\n      >\n        <Image source={addIcon} style={styles.addIcon} />\n      </TouchableOpacity>\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterInventory);\n"]},"metadata":{},"sourceType":"module"}