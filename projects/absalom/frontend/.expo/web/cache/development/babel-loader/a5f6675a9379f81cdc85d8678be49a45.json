{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport function updateUserName(userItem, editModalTextValue, updateUser, dispatch, marker) {\n  var newUser = _objectSpread({}, userItem);\n\n  switch (marker) {\n    case 'user':\n      break;\n\n    default:\n      break;\n  }\n\n  if (editModalTextValue.length) {\n    newUser.userName = editModalTextValue;\n  } else {\n    newUser.userName = 'New User';\n  }\n\n  dispatch(updateUser(newUser._id, newUser));\n}\nexport function changeListValue(value, list, text) {\n  var newList = _toConsumableArray(list);\n\n  newList.forEach(function (actualValue) {\n    if (actualValue.uniqueKey === value.uniqueKey) {\n      value.title = text;\n    }\n  });\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/UserDetail/UserDetailFunctions.js"],"names":["updateUserName","userItem","editModalTextValue","updateUser","dispatch","marker","newUser","length","userName","_id","changeListValue","value","list","text","newList","forEach","actualValue","uniqueKey","title"],"mappings":";;;;;;;AAAA,OAAO,SAASA,cAAT,CAAwBC,QAAxB,EAAkCC,kBAAlC,EAAsDC,UAAtD,EAAkEC,QAAlE,EAA4EC,MAA5E,EAAoF;AACzF,MAAMC,OAAO,qBAAQL,QAAR,CAAb;;AAEA,UAAQI,MAAR;AACE,SAAK,MAAL;AAEE;;AAEF;AACE;AANJ;;AAQA,MAAIH,kBAAkB,CAACK,MAAvB,EAA+B;AAC7BD,IAAAA,OAAO,CAACE,QAAR,GAAmBN,kBAAnB;AACD,GAFD,MAEO;AACLI,IAAAA,OAAO,CAACE,QAAR,GAAmB,UAAnB;AACD;;AACDJ,EAAAA,QAAQ,CAACD,UAAU,CAACG,OAAO,CAACG,GAAT,EAAcH,OAAd,CAAX,CAAR;AACD;AAED,OAAO,SAASI,eAAT,CAAyBC,KAAzB,EAAgCC,IAAhC,EAAsCC,IAAtC,EAA4C;AACjD,MAAMC,OAAO,sBAAOF,IAAP,CAAb;;AAEAE,EAAAA,OAAO,CAACC,OAAR,CAAgB,UAACC,WAAD,EAAiB;AAC/B,QAAIA,WAAW,CAACC,SAAZ,KAA0BN,KAAK,CAACM,SAApC,EAA+C;AAC7CN,MAAAA,KAAK,CAACO,KAAN,GAAcL,IAAd;AACD;AACF,GAJD;AAKD","sourcesContent":["export function updateUserName(userItem, editModalTextValue, updateUser, dispatch, marker) {\n  const newUser = { ...userItem };\n\n  switch (marker) {\n    case 'user':\n\n      break;\n\n    default:\n      break;\n  }\n  if (editModalTextValue.length) {\n    newUser.userName = editModalTextValue;\n  } else {\n    newUser.userName = 'New User';\n  }\n  dispatch(updateUser(newUser._id, newUser));\n}\n\nexport function changeListValue(value, list, text) {\n  const newList = [...list];\n\n  newList.forEach((actualValue) => {\n    if (actualValue.uniqueKey === value.uniqueKey) {\n      value.title = text;\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}