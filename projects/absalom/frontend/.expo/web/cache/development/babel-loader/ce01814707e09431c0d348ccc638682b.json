{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/CharacterInventory.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Overlay, Button } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { updateCharacter } from \"../../redux/actions/characterActions\";\nimport { createCategory, createItem, deleteCategory, deleteItem, editCategory, editItem } from \"./CharacterInventoryFunctions\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterInventoryStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport addBlueIcon from \"../../images/add-icon-blue.png\";\nimport tansparentAddIcon from \"../../images/add-icon-transparent.png\";\nimport PropertyRow from \"./PropertyRow/PropertyRow\";\n\nfunction CharacterInventory(_ref) {\n  var _this = this;\n\n  var characterItem = _ref.characterItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n\n  var _useState = useState(characterItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoryModalView = _useState4[0],\n      setCategoryModalView = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      categoryModalValue = _useState6[0],\n      setCategoryModalValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      editCategoryModalView = _useState8[0],\n      setEditCategoryModalView = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      categoryKey = _useState10[0],\n      setCategoryKey = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      editCategoryModalValue = _useState12[0],\n      setEditCategoryModalValue = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      deleteCategoryModalView = _useState14[0],\n      setDeleteCategoryModalView = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      CategoryTitle = _useState16[0],\n      setCategoryTitle = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      addItemModalView = _useState18[0],\n      setAddItemModalView = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      itemModalProperties = _useState20[0],\n      setItemModalProperties = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      editItemModalView = _useState22[0],\n      setEditItemModalView = _useState22[1];\n\n  var _useState23 = useState(null),\n      _useState24 = _slicedToArray(_useState23, 2),\n      actualItem = _useState24[0],\n      setActualItem = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      newItemName = _useState26[0],\n      setNewItemName = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      deleteItemModalView = _useState28[0],\n      setDeleteItemModalView = _useState28[1];\n\n  useEffect(function () {\n    setCharacter(characterItem);\n  }, [characterItem]);\n\n  function changePropertyValue(property, value, text) {\n    property[value] = text;\n  }\n\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, character ? React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.inventory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.inventory__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.inventory__title__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, character.name + \" Inventory\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), character.inventory.categories.map(function (category) {\n    return React.createElement(View, {\n      style: styles.inventory__category,\n      key: performance.now(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.inventory__category__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.category__title__name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setCategoryTitle(category.title);\n        setCategoryKey(category.uniqueKey);\n        setEditCategoryModalView(!editCategoryModalView);\n        setEditCategoryModalValue(category.title);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: styles.inventory__category__title__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, category.title))), React.createElement(TouchableOpacity, {\n      style: styles.category__title__addIcon,\n      onPress: function onPress() {\n        setCategoryKey(category.uniqueKey);\n        setItemModalProperties([{\n          name: 'Item Name',\n          value: ''\n        }]);\n        setAddItemModalView(!addItemModalView);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      source: tansparentAddIcon,\n      style: styles.addIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }))), category.items.map(function (item) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.inventory__category__item,\n        key: performance.now(),\n        onPress: function onPress() {\n          setCategoryKey(category.uniqueKey);\n          setActualItem(item);\n          setItemModalProperties(item.properties);\n          setNewItemName(item.itemTitle);\n          setEditItemModalView(!editItemModalView);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.inventory__category__item__title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.inventory__category__item__title__text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, item.itemTitle)), item.properties.map(function (property) {\n        if (property !== 'itemTitle' && property !== '_id' && property !== 'properties') {\n          return React.createElement(View, {\n            style: styles.inventory__category__item__row,\n            key: performance.now(),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }\n          }, React.createElement(View, {\n            style: styles.inventory__category__item__row__name,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 31\n            }\n          }, React.createElement(Text, {\n            style: styles.inventory__category__item__text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }\n          }, \"\" + property.name)), React.createElement(View, {\n            style: styles.inventory__category__item__row__value,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 31\n            }\n          }, React.createElement(Text, {\n            style: styles.inventory__category__item__text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }\n          }, property.value)));\n        }\n      }));\n    }));\n  }))), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    onPress: function onPress() {\n      return setCategoryModalView(!categoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: addBlueIcon,\n    style: styles.addIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }))) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 40,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"No Character\")), React.createElement(Overlay, {\n    name: \"add category modal\",\n    isVisible: categoryModalView,\n    overlayStyle: styles.categoryModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setCategoryModalView(!categoryModalView);\n      setCategoryModalValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.categoryModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.categoryModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"Add new category\"), React.createElement(TextInput, {\n    style: styles.categoryModal__text,\n    placeholder: \"Category Name\",\n    value: categoryModalValue,\n    onChangeText: function onChangeText(text) {\n      return setCategoryModalValue(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styles.categoryModal__button,\n    title: \"Create Category\",\n    onPress: function onPress() {\n      setCategoryModalView(!categoryModalView);\n      createCategory(character, categoryModalValue, updateCharacter, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }))), React.createElement(Overlay, {\n    name: \"edit category modal\",\n    isVisible: editCategoryModalView,\n    overlayStyle: styles.editCategoryModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setEditCategoryModalView(!editCategoryModalView);\n      setEditCategoryModalValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.categoryModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.categoryModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"Edit category\"), React.createElement(TextInput, {\n    style: styles.categoryModal__text,\n    placeholder: \"Category Name\",\n    value: editCategoryModalValue,\n    onChangeText: function onChangeText(text) {\n      return setEditCategoryModalValue(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.editCategoryModal__buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    buttonStyle: styles.editCategoryModal__editButton,\n    title: \"Edit\",\n    onPress: function onPress() {\n      editCategory(character, categoryKey, editCategoryModalValue, updateCharacter, dispatch);\n      setEditCategoryModalView(!editCategoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styles.editCategoryModal__deleteButton,\n    title: \"Delete\",\n    onPress: function onPress() {\n      setEditCategoryModalView(!editCategoryModalView);\n      setDeleteCategoryModalView(!deleteCategoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  })))), React.createElement(Overlay, {\n    name: \"delete category modal\",\n    isVisible: deleteCategoryModalView,\n    overlayStyle: styles.deleteCategoryModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      setDeleteCategoryModalView(!deleteCategoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.deleteCategoryModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.deleteCategoryModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, \"You are about to delete\"), React.createElement(Text, {\n    style: styles.deleteCategoryModal__category__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, CategoryTitle), React.createElement(Text, {\n    style: styles.deleteCategoryModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, \"and all the items it contains.\"), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.deleteCategoryModal__warningText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"This action is irreversible.\")), React.createElement(Button, {\n    title: \"Delete\",\n    buttonStyle: styles.editCategoryModal__deleteButton,\n    onPress: function onPress() {\n      deleteCategory(character, categoryKey, updateCharacter, dispatch);\n      setDeleteCategoryModalView(!deleteCategoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }))), React.createElement(Overlay, {\n    name: \"add item modal\",\n    isVisible: addItemModalView,\n    overlayStyle: styles.addItemModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      setNewItemName('');\n      setAddItemModalView(!addItemModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addItemModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addItemModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, \"Add item\"), itemModalProperties.map(function (property) {\n    return property.name !== itemModalProperties[0].name ? React.createElement(PropertyRow, {\n      property: property,\n      styles: styles,\n      changePropertyValue: changePropertyValue,\n      key: performance.now(),\n      itemModalProperties: itemModalProperties,\n      setItemModalProperties: setItemModalProperties,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: \"title\",\n      style: styles.addItemModal__block__title__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.addItemModal__row__name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.addItemModal__itemName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, property.name)), React.createElement(View, {\n      style: styles.addItemModal__row__value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"Name\",\n      style: styles.addItemModal__inputText,\n      value: newItemName,\n      onChangeText: function onChangeText(text) {\n        return setNewItemName(text);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    })));\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setItemModalProperties([].concat(_toConsumableArray(itemModalProperties), [{\n        name: '',\n        value: '',\n        uniqueKey: \"\" + performance.now() + performance.now()\n      }]));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: addBlueIcon,\n    style: styles.addBlueIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  })), React.createElement(Button, {\n    title: \"Add Item\",\n    buttonStyle: styles.addItemModal__button,\n    onPress: function onPress() {\n      createItem(character, categoryKey, newItemName, itemModalProperties, updateCharacter, dispatch);\n      setAddItemModalView(!addItemModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  })))), React.createElement(Overlay, {\n    name: \"edit item modal\",\n    isVisible: editItemModalView,\n    overlayStyle: styles.addItemModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      setNewItemName('');\n      setEditItemModalView(!editItemModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addItemModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addItemModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, \"Edit\"), React.createElement(TextInput, {\n    style: styles.addItemModal__title__input,\n    value: newItemName,\n    onChangeText: function onChangeText(text) {\n      return setNewItemName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }), itemModalProperties.map(function (property) {\n    return property.name !== 'itemTitle' ? React.createElement(PropertyRow, {\n      property: property,\n      styles: styles,\n      changePropertyValue: changePropertyValue,\n      key: performance.now(),\n      itemModalProperties: itemModalProperties,\n      setItemModalProperties: setItemModalProperties,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: \"title\",\n      style: styles.addItemModal__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.addItemModal__row__name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.addItemModal__itemName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }\n    }, \"Item Name:\")), React.createElement(View, {\n      style: styles.addItemModal__row__value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"value\",\n      style: styles.addItemModal__inputText,\n      value: newItemName,\n      onChangeText: function onChangeText(text) {\n        return setNewItemName(text);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    })));\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setItemModalProperties([].concat(_toConsumableArray(itemModalProperties), [{\n        name: '',\n        value: '',\n        uniqueKey: \"\" + performance.now() + performance.now()\n      }]));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: addBlueIcon,\n    style: styles.addBlueIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.editItemModal__buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Delete Item\",\n    buttonStyle: styles.editItemModal__editButton,\n    onPress: function onPress() {\n      setDeleteItemModalView(!deleteItemModalView);\n      setEditItemModalView(!editItemModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 15\n    }\n  }), React.createElement(Button, {\n    title: \"Edit Item\",\n    buttonStyle: styles.editItemModal__deleteButton,\n    onPress: function onPress() {\n      editItem(character, actualItem, newItemName, itemModalProperties, updateCharacter, dispatch);\n      setEditItemModalView(!editItemModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 15\n    }\n  }))))), React.createElement(Overlay, {\n    name: \"delete item modal\",\n    isVisible: deleteItemModalView,\n    overlayStyle: styles.deleteCategoryModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      setDeleteCategoryModalView(!deleteCategoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.deleteCategoryModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.deleteCategoryModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }, \"You are about to delete\"), React.createElement(Text, {\n    style: styles.deleteCategoryModal__category__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }, newItemName), React.createElement(Text, {\n    style: styles.deleteCategoryModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }\n  }, \"and all the properties it contains.\"), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.deleteCategoryModal__warningText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, \"This action is irreversible.\")), React.createElement(Button, {\n    title: \"Delete\",\n    buttonStyle: styles.editCategoryModal__deleteButton,\n    onPress: function onPress() {\n      deleteItem(character, actualItem, updateCharacter, dispatch);\n      setNewItemName('');\n      setDeleteItemModalView(!deleteItemModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 11\n    }\n  }))), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterInventory);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/CharacterInventory.jsx"],"names":["React","useEffect","useState","Overlay","Button","connect","updateCharacter","createCategory","createItem","deleteCategory","deleteItem","editCategory","editItem","NavigationBar","styles","absalomBackground","addBlueIcon","tansparentAddIcon","PropertyRow","CharacterInventory","characterItem","userId","dispatch","navigation","character","setCharacter","categoryModalView","setCategoryModalView","categoryModalValue","setCategoryModalValue","editCategoryModalView","setEditCategoryModalView","categoryKey","setCategoryKey","editCategoryModalValue","setEditCategoryModalValue","deleteCategoryModalView","setDeleteCategoryModalView","CategoryTitle","setCategoryTitle","addItemModalView","setAddItemModalView","itemModalProperties","setItemModalProperties","editItemModalView","setEditItemModalView","actualItem","setActualItem","newItemName","setNewItemName","deleteItemModalView","setDeleteItemModalView","changePropertyValue","property","value","text","backgroundImage","container","inventory","inventory__title","title__bar","inventory__title__text","name","categories","map","category","inventory__category","performance","now","inventory__category__title","category__title__name","title","uniqueKey","inventory__category__title__text","category__title__addIcon","addIcon","items","item","inventory__category__item","properties","itemTitle","inventory__category__item__title","inventory__category__item__title__text","inventory__category__item__row","inventory__category__item__row__name","inventory__category__item__text","inventory__category__item__row__value","addIcon__block","marginTop","textAlign","categoryModal","categoryModal__background","categoryModal__block","categoryModal__title","categoryModal__text","categoryModal__button","editCategoryModal","editCategoryModal__buttons","editCategoryModal__editButton","editCategoryModal__deleteButton","deleteCategoryModal","deleteCategoryModal__block","deleteCategoryModal__text","deleteCategoryModal__category__name","editModal__textBlock","deleteCategoryModal__warningText","addItemModal","addItemModal__block","addItemModal__title","addItemModal__block__title__row","addItemModal__row__name","addItemModal__itemName","addItemModal__row__value","addItemModal__inputText","addItemModal__button","addItemModal__title__input","addItemModal__block__row","editItemModal__buttons","editItemModal__editButton","editItemModal__deleteButton","mapStateToProps","charactersReducer","usersReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  ScrollView, ImageBackground, TextInput,\n  View, Text, TouchableOpacity, Image,\n} from 'react-native';\nimport { Overlay, Button } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { updateCharacter } from '../../redux/actions/characterActions';\nimport {\n  createCategory, createItem, deleteCategory, deleteItem,\n  editCategory, editItem,\n} from './CharacterInventoryFunctions';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterInventoryStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport addBlueIcon from '../../images/add-icon-blue.png';\nimport tansparentAddIcon from '../../images/add-icon-transparent.png';\nimport PropertyRow from './PropertyRow/PropertyRow';\n\nfunction CharacterInventory({\n  characterItem, userId, dispatch, navigation,\n}) {\n  const [character, setCharacter] = useState(characterItem);\n  const [categoryModalView, setCategoryModalView] = useState(false);\n  const [categoryModalValue, setCategoryModalValue] = useState('');\n\n  const [editCategoryModalView, setEditCategoryModalView] = useState(false);\n  const [categoryKey, setCategoryKey] = useState('');\n  const [editCategoryModalValue, setEditCategoryModalValue] = useState('');\n\n  const [deleteCategoryModalView, setDeleteCategoryModalView] = useState(false);\n  const [CategoryTitle, setCategoryTitle] = useState(false);\n\n  const [addItemModalView, setAddItemModalView] = useState(false);\n  const [itemModalProperties, setItemModalProperties] = useState([]);\n\n  const [editItemModalView, setEditItemModalView] = useState(false);\n\n  const [actualItem, setActualItem] = useState(null);\n  const [newItemName, setNewItemName] = useState('');\n\n  const [deleteItemModalView, setDeleteItemModalView] = useState(false);\n\n  useEffect(() => {\n    setCharacter(characterItem);\n  }, [characterItem]);\n\n  function changePropertyValue(property, value, text) {\n    property[value] = text;\n  }\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      {character ? (\n        <>\n          <ScrollView style={styles.container}>\n            <View style={styles.inventory}>\n              <View style={styles.inventory__title}>\n                <View style={styles.title__bar} />\n                <Text style={styles.inventory__title__text}>{`${character.name} Inventory`}</Text>\n                <View style={styles.title__bar} />\n              </View>\n              {character.inventory.categories.map((category) => (\n                <View style={styles.inventory__category} key={performance.now()}>\n                  <View style={styles.inventory__category__title}>\n                    <View style={styles.category__title__name}>\n                      <TouchableOpacity\n                        onPress={() => {\n                          setCategoryTitle(category.title);\n                          setCategoryKey(category.uniqueKey);\n                          setEditCategoryModalView(!editCategoryModalView);\n                          setEditCategoryModalValue(category.title);\n                        }}\n                      >\n                        <Text style={styles.inventory__category__title__text}>{category.title}</Text>\n                      </TouchableOpacity>\n                    </View>\n                    <TouchableOpacity\n                      style={styles.category__title__addIcon}\n                      onPress={() => {\n                        setCategoryKey(category.uniqueKey);\n                        setItemModalProperties([{ name: 'Item Name', value: '' }]);\n                        setAddItemModalView(!addItemModalView);\n                      }}\n                    >\n                      <Image source={tansparentAddIcon} style={styles.addIcon} />\n                    </TouchableOpacity>\n                  </View>\n                  {category.items.map((item) => (\n                    <TouchableOpacity\n                      style={styles.inventory__category__item}\n                      key={performance.now()}\n                      onPress={() => {\n                        setCategoryKey(category.uniqueKey);\n                        setActualItem(item);\n                        setItemModalProperties(item.properties);\n                        setNewItemName(item.itemTitle);\n                        setEditItemModalView(!editItemModalView);\n                      }}\n                    >\n                      <View style={styles.inventory__category__item__title}>\n                        <Text\n                          style={styles.inventory__category__item__title__text}\n                        >\n                          {item.itemTitle}\n                        </Text>\n                      </View>\n                      {item.properties.map((property) => {\n                        if (property !== 'itemTitle' && property !== '_id' && property !== 'properties') {\n                          return (\n                            <View\n                              style={styles.inventory__category__item__row}\n                              key={performance.now()}\n                            >\n                              <View style={styles.inventory__category__item__row__name}>\n                                <Text style={styles.inventory__category__item__text}>{`${property.name}`}</Text>\n                              </View>\n                              <View style={styles.inventory__category__item__row__value}>\n                                <Text\n                                  style={styles.inventory__category__item__text}\n                                >\n                                  {property.value}\n                                </Text>\n                              </View>\n                            </View>\n                          );\n                        }\n                      })}\n                    </TouchableOpacity>\n                  ))}\n                </View>\n              ))}\n            </View>\n          </ScrollView>\n          <TouchableOpacity\n            style={styles.addIcon__block}\n            onPress={() => setCategoryModalView(!categoryModalView)}\n          >\n            <Image source={addBlueIcon} style={styles.addIcon} />\n          </TouchableOpacity>\n        </>\n      ) : (\n        <View>\n          <Text style={{ marginTop: 40, textAlign: 'center' }}>No Character</Text>\n        </View>\n      )}\n      <Overlay\n        name=\"add category modal\"\n        isVisible={categoryModalView}\n        overlayStyle={styles.categoryModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        onBackdropPress={() => {\n          setCategoryModalView(!categoryModalView);\n          setCategoryModalValue('');\n        }}\n      >\n        <View style={styles.categoryModal__block}>\n          <Text style={styles.categoryModal__title}>Add new category</Text>\n          <TextInput\n            style={styles.categoryModal__text}\n            placeholder=\"Category Name\"\n            value={categoryModalValue}\n            onChangeText={(text) => setCategoryModalValue(text)}\n          />\n          <Button\n            buttonStyle={styles.categoryModal__button}\n            title=\"Create Category\"\n            onPress={() => {\n              setCategoryModalView(!categoryModalView);\n              createCategory(character, categoryModalValue, updateCharacter, dispatch);\n            }}\n          />\n        </View>\n      </Overlay>\n      <Overlay\n        name=\"edit category modal\"\n        isVisible={editCategoryModalView}\n        overlayStyle={styles.editCategoryModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        onBackdropPress={() => {\n          setEditCategoryModalView(!editCategoryModalView);\n          setEditCategoryModalValue('');\n        }}\n      >\n        <View style={styles.categoryModal__block}>\n          <Text style={styles.categoryModal__title}>\n            Edit category\n          </Text>\n          <TextInput\n            style={styles.categoryModal__text}\n            placeholder=\"Category Name\"\n            value={editCategoryModalValue}\n            onChangeText={(text) => setEditCategoryModalValue(text)}\n          />\n          <View style={styles.editCategoryModal__buttons}>\n            <Button\n              buttonStyle={styles.editCategoryModal__editButton}\n              title=\"Edit\"\n              onPress={() => {\n                editCategory(\n                  character, categoryKey, editCategoryModalValue, updateCharacter, dispatch,\n                );\n                setEditCategoryModalView(!editCategoryModalView);\n              }}\n            />\n            <Button\n              buttonStyle={styles.editCategoryModal__deleteButton}\n              title=\"Delete\"\n              onPress={() => {\n                setEditCategoryModalView(!editCategoryModalView);\n                setDeleteCategoryModalView(!deleteCategoryModalView);\n              }}\n            />\n          </View>\n        </View>\n      </Overlay>\n      <Overlay\n        name=\"delete category modal\"\n        isVisible={deleteCategoryModalView}\n        overlayStyle={styles.deleteCategoryModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        fullScreen\n        onBackdropPress={() => {\n          setDeleteCategoryModalView(!deleteCategoryModalView);\n        }}\n      >\n        <View style={styles.deleteCategoryModal__block}>\n          <Text style={styles.deleteCategoryModal__text}>\n            You are about to delete\n          </Text>\n          <Text style={styles.deleteCategoryModal__category__name}>\n            {CategoryTitle}\n          </Text>\n          <Text style={styles.deleteCategoryModal__text}>\n            and all the items it contains.\n          </Text>\n          <View style={styles.editModal__textBlock}>\n            <Text style={styles.deleteCategoryModal__warningText}>\n              This action is irreversible.\n            </Text>\n          </View>\n          <Button\n            title=\"Delete\"\n            buttonStyle={styles.editCategoryModal__deleteButton}\n            onPress={() => {\n              deleteCategory(character, categoryKey, updateCharacter, dispatch);\n              setDeleteCategoryModalView(!deleteCategoryModalView);\n            }}\n          />\n        </View>\n      </Overlay>\n      <Overlay\n        name=\"add item modal\"\n        isVisible={addItemModalView}\n        overlayStyle={styles.addItemModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        fullScreen\n        onBackdropPress={() => {\n          setNewItemName('');\n          setAddItemModalView(!addItemModalView);\n        }}\n      >\n        <ScrollView>\n          <View style={styles.addItemModal__block}>\n            <Text style={styles.addItemModal__title}>Add item</Text>\n            {itemModalProperties.map((property) => (\n              property.name !== itemModalProperties[0].name ? (\n                <PropertyRow\n                  property={property}\n                  styles={styles}\n                  changePropertyValue={changePropertyValue}\n                  key={performance.now()}\n                  itemModalProperties={itemModalProperties}\n                  setItemModalProperties={setItemModalProperties}\n                />\n              ) : (\n                <View\n                  key=\"title\"\n                  style={styles.addItemModal__block__title__row}\n                >\n                  <View style={styles.addItemModal__row__name}>\n                    <Text style={styles.addItemModal__itemName}>{property.name}</Text>\n                  </View>\n                  <View style={styles.addItemModal__row__value}>\n                    <TextInput\n                      placeholder=\"Name\"\n                      style={styles.addItemModal__inputText}\n                      value={newItemName}\n                      onChangeText={(text) => setNewItemName(text)}\n                    />\n                  </View>\n                </View>\n              )\n            ))}\n            <TouchableOpacity\n              onPress={() => {\n                setItemModalProperties([...itemModalProperties, { name: '', value: '', uniqueKey: `${performance.now()}${performance.now()}` }]);\n              }}\n            >\n              <Image source={addBlueIcon} style={styles.addBlueIcon} />\n            </TouchableOpacity>\n            <Button\n              title=\"Add Item\"\n              buttonStyle={styles.addItemModal__button}\n              onPress={() => {\n                createItem(\n                  character, categoryKey, newItemName, itemModalProperties,\n                  updateCharacter, dispatch,\n                );\n                setAddItemModalView(!addItemModalView);\n              }}\n            />\n          </View>\n        </ScrollView>\n      </Overlay>\n      <Overlay\n        name=\"edit item modal\"\n        isVisible={editItemModalView}\n        overlayStyle={styles.addItemModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        fullScreen\n        onBackdropPress={() => {\n          setNewItemName('');\n          setEditItemModalView(!editItemModalView);\n        }}\n      >\n        <ScrollView>\n          <View style={styles.addItemModal__block}>\n            <Text style={styles.addItemModal__title}>Edit</Text>\n            <TextInput\n              style={styles.addItemModal__title__input}\n              value={newItemName}\n              onChangeText={(text) => setNewItemName(text)}\n            />\n            {itemModalProperties.map((property) => (\n              property.name !== 'itemTitle' ? (\n                <PropertyRow\n                  property={property}\n                  styles={styles}\n                  changePropertyValue={changePropertyValue}\n                  key={performance.now()}\n                  itemModalProperties={itemModalProperties}\n                  setItemModalProperties={setItemModalProperties}\n                />\n              ) : (\n                <View\n                  key=\"title\"\n                  style={styles.addItemModal__block__row}\n                >\n                  <View style={styles.addItemModal__row__name}>\n                    <Text style={styles.addItemModal__itemName}>Item Name:</Text>\n                  </View>\n                  <View style={styles.addItemModal__row__value}>\n                    <TextInput\n                      placeholder=\"value\"\n                      style={styles.addItemModal__inputText}\n                      value={newItemName}\n                      onChangeText={(text) => setNewItemName(text)}\n                    />\n                  </View>\n                </View>\n              )\n            ))}\n            <TouchableOpacity\n              onPress={() => {\n                setItemModalProperties([...itemModalProperties, { name: '', value: '', uniqueKey: `${performance.now()}${performance.now()}` }]);\n              }}\n            >\n              <Image source={addBlueIcon} style={styles.addBlueIcon} />\n            </TouchableOpacity>\n            <View style={styles.editItemModal__buttons}>\n              <Button\n                title=\"Delete Item\"\n                buttonStyle={styles.editItemModal__editButton}\n                onPress={() => {\n                  setDeleteItemModalView(!deleteItemModalView);\n                  setEditItemModalView(!editItemModalView);\n                }}\n              />\n              <Button\n                title=\"Edit Item\"\n                buttonStyle={styles.editItemModal__deleteButton}\n                onPress={() => {\n                  editItem(\n                    character, actualItem, newItemName,\n                    itemModalProperties, updateCharacter, dispatch,\n                  );\n                  setEditItemModalView(!editItemModalView);\n                }}\n              />\n            </View>\n          </View>\n        </ScrollView>\n      </Overlay>\n      <Overlay\n        name=\"delete item modal\"\n        isVisible={deleteItemModalView}\n        overlayStyle={styles.deleteCategoryModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        fullScreen\n        onBackdropPress={() => {\n          setDeleteCategoryModalView(!deleteCategoryModalView);\n        }}\n      >\n        <View style={styles.deleteCategoryModal__block}>\n          <Text style={styles.deleteCategoryModal__text}>\n            You are about to delete\n          </Text>\n          <Text style={styles.deleteCategoryModal__category__name}>\n            {newItemName}\n          </Text>\n          <Text style={styles.deleteCategoryModal__text}>\n            and all the properties it contains.\n          </Text>\n          <View style={styles.editModal__textBlock}>\n            <Text style={styles.deleteCategoryModal__warningText}>\n              This action is irreversible.\n            </Text>\n          </View>\n          <Button\n            title=\"Delete\"\n            buttonStyle={styles.editCategoryModal__deleteButton}\n            onPress={() => {\n              deleteItem(character, actualItem, updateCharacter, dispatch);\n              setNewItemName('');\n              setDeleteItemModalView(!deleteItemModalView);\n            }}\n          />\n        </View>\n      </Overlay>\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterInventory);\n"]},"metadata":{},"sourceType":"module"}