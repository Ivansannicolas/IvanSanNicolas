{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/PropertyRow/PropertyRow.jsx\";\nimport React, { useState } from 'react';\nimport { View, TextInput, TouchableOpacity, Image } from 'react-native-elements';\nimport garbageIcon from \"../../../images/garbage-icon.png\";\nexport default function PropertyRow(_ref) {\n  var property = _ref.property,\n      changePropertyValue = _ref.changePropertyValue;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      propertyName = _useState2[0],\n      setPropertyName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      propertyValue = _useState4[0],\n      setPropertyValue = _useState4[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Property name\",\n    value: propertyName,\n    onChangeText: function onChangeText(text) {\n      setPropertyName(text);\n      changePropertyValue(property, 'name', text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"value\",\n    value: propertyValue,\n    onChangeText: function onChangeText(text) {\n      setPropertyValue(text);\n      changePropertyValue(property, 'value', text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: garbageIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/PropertyRow/PropertyRow.jsx"],"names":["React","useState","View","TextInput","TouchableOpacity","Image","garbageIcon","PropertyRow","property","changePropertyValue","propertyName","setPropertyName","propertyValue","setPropertyValue","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,IADF,EACQC,SADR,EACmBC,gBADnB,EACqCC,KADrC,QAEO,uBAFP;AAGA,OAAOC,WAAP;AAEA,eAAe,SAASC,WAAT,OAAwD;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,MAAvBC,mBAAuB,QAAvBA,mBAAuB;;AAAA,kBAC7BR,QAAQ,CAAC,EAAD,CADqB;AAAA;AAAA,MAC9DS,YAD8D;AAAA,MAChDC,eADgD;;AAAA,mBAE3BV,QAAQ,CAAC,EAAD,CAFmB;AAAA;AAAA,MAE9DW,aAF8D;AAAA,MAE/CC,gBAF+C;;AAIrE,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,eADd;AAEE,IAAA,KAAK,EAAEH,YAFT;AAGE,IAAA,YAAY,EAAE,sBAACI,IAAD,EAAU;AACtBH,MAAAA,eAAe,CAACG,IAAD,CAAf;AACAL,MAAAA,mBAAmB,CAACD,QAAD,EAAW,MAAX,EAAmBM,IAAnB,CAAnB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,KAAK,EAAEF,aAFT;AAGE,IAAA,YAAY,EAAE,sBAACE,IAAD,EAAU;AACtBD,MAAAA,gBAAgB,CAACC,IAAD,CAAhB;AACAL,MAAAA,mBAAmB,CAACD,QAAD,EAAW,OAAX,EAAoBM,IAApB,CAAnB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAER,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CADF;AAuBD","sourcesContent":["import React, { useState } from 'react';\nimport {\n  View, TextInput, TouchableOpacity, Image,\n} from 'react-native-elements';\nimport garbageIcon from '../../../images/garbage-icon.png';\n\nexport default function PropertyRow({ property, changePropertyValue }) {\n  const [propertyName, setPropertyName] = useState('');\n  const [propertyValue, setPropertyValue] = useState('');\n\n  return (\n    <View>\n      <TextInput\n        placeholder=\"Property name\"\n        value={propertyName}\n        onChangeText={(text) => {\n          setPropertyName(text);\n          changePropertyValue(property, 'name', text);\n        }}\n      />\n      <TextInput\n        placeholder=\"value\"\n        value={propertyValue}\n        onChangeText={(text) => {\n          setPropertyValue(text);\n          changePropertyValue(property, 'value', text);\n        }}\n      />\n      <TouchableOpacity>\n        <Image source={garbageIcon} />\n      </TouchableOpacity>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}