{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport actionTypes from \"./ActionTypes\";\n\nfunction loadError(error) {\n  return {\n    type: actionTypes.LOAD_ERROR,\n    error: error\n  };\n}\n\nfunction loadUserSuccess(user) {\n  return {\n    type: actionTypes.LOAD_USER,\n    user: user\n  };\n}\n\nexport default function loadUser(userId) {\n  return function _callee(dispatch) {\n    var endpoint, _await$axios$get, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            endpoint = 'http://192.168.1.134:1240/user';\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(endpoint, {\n              userId: userId\n            }));\n\n          case 4:\n            _await$axios$get = _context.sent;\n            data = _await$axios$get.data;\n            dispatch(loadUserSuccess(data));\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch(loadError(_context.t0));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/redux/actions/userActions.js"],"names":["axios","actionTypes","loadError","error","type","LOAD_ERROR","loadUserSuccess","user","LOAD_USER","loadUser","userId","dispatch","endpoint","get","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;;AAKA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI,UADb;AAELF,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;;AAED,SAASG,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,SAAO;AACLH,IAAAA,IAAI,EAAEH,WAAW,CAACO,SADb;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID;;AAED,eAAe,SAASE,QAAT,CAAkBC,MAAlB,EAA0B;AACvC,SAAO,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,QADD,GACY,gCADZ;AAAA;AAAA;AAAA,6CAGoBZ,KAAK,CAACa,GAAN,CAAUD,QAAV,EAAoB;AAAEF,cAAAA,MAAM,EAANA;AAAF,aAApB,CAHpB;;AAAA;AAAA;AAGKI,YAAAA,IAHL,oBAGKA,IAHL;AAIHH,YAAAA,QAAQ,CAACL,eAAe,CAACQ,IAAD,CAAhB,CAAR;AAJG;AAAA;;AAAA;AAAA;AAAA;AAMHH,YAAAA,QAAQ,CAACT,SAAS,aAAV,CAAR;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AASD","sourcesContent":["import axios from 'axios';\nimport actionTypes from './ActionTypes';\n\n// homeIp: 'http://192.168.1.134:1240'\n// skylabIp: 'http://192.168.0.61:1240'\n\nfunction loadError(error) {\n  return {\n    type: actionTypes.LOAD_ERROR,\n    error,\n  };\n}\n\nfunction loadUserSuccess(user) {\n  return {\n    type: actionTypes.LOAD_USER,\n    user,\n  };\n}\n\nexport default function loadUser(userId) {\n  return async (dispatch) => {\n    const endpoint = 'http://192.168.1.134:1240/user';\n    try {\n      const { data } = await axios.get(endpoint, { userId });\n      dispatch(loadUserSuccess(data));\n    } catch (error) {\n      dispatch(loadError(error));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}