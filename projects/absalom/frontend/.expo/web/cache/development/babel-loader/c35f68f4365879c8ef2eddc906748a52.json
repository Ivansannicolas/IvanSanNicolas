{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport actionTypes from \"./ActionTypes\";\n\nfunction loadError(error) {\n  return {\n    type: actionTypes.LOAD_ERROR,\n    error: error\n  };\n}\n\nexport function loadCharactersSuccess(characters) {\n  return {\n    type: actionTypes.LOAD_CHARACTERS,\n    characters: characters\n  };\n}\nexport function loadCharactersByOwner(ownerId) {\n  return function _callee(dispatch) {\n    var endpoint, _await$axios$get, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            endpoint = 'http://192.168.43.40:1240/characters';\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(endpoint, {\n              params: {\n                ownerId: ownerId\n              }\n            }));\n\n          case 4:\n            _await$axios$get = _context.sent;\n            data = _await$axios$get.data;\n            dispatch(loadCharactersSuccess(data));\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch(loadError(_context.t0));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/redux/actions/charactersActions.js"],"names":["axios","actionTypes","loadError","error","type","LOAD_ERROR","loadCharactersSuccess","characters","LOAD_CHARACTERS","loadCharactersByOwner","ownerId","dispatch","endpoint","get","params","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI,UADb;AAELF,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;;AAED,OAAO,SAASG,qBAAT,CAA+BC,UAA/B,EAA2C;AAChD,SAAO;AACLH,IAAAA,IAAI,EAAEH,WAAW,CAACO,eADb;AAELD,IAAAA,UAAU,EAAVA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,qBAAT,CAA+BC,OAA/B,EAAwC;AAC7C,SAAO,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,QADD,GACY,sCADZ;AAAA;AAAA;AAAA,6CAGoBZ,KAAK,CAACa,GAAN,CAAUD,QAAV,EAAoB;AAAEE,cAAAA,MAAM,EAAE;AAAEJ,gBAAAA,OAAO,EAAPA;AAAF;AAAV,aAApB,CAHpB;;AAAA;AAAA;AAGKK,YAAAA,IAHL,oBAGKA,IAHL;AAIHJ,YAAAA,QAAQ,CAACL,qBAAqB,CAACS,IAAD,CAAtB,CAAR;AAJG;AAAA;;AAAA;AAAA;AAAA;AAMHJ,YAAAA,QAAQ,CAACT,SAAS,aAAV,CAAR;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AASD","sourcesContent":["import axios from 'axios';\nimport actionTypes from './ActionTypes';\n\nfunction loadError(error) {\n  return {\n    type: actionTypes.LOAD_ERROR,\n    error,\n  };\n}\n\nexport function loadCharactersSuccess(characters) {\n  return {\n    type: actionTypes.LOAD_CHARACTERS,\n    characters,\n  };\n}\n\nexport function loadCharactersByOwner(ownerId) {\n  return async (dispatch) => {\n    const endpoint = 'http://192.168.43.40:1240/characters';\n    try {\n      const { data } = await axios.get(endpoint, { params: { ownerId } });\n      dispatch(loadCharactersSuccess(data));\n    } catch (error) {\n      dispatch(loadError(error));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}