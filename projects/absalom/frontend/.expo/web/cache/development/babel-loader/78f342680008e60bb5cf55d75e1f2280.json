{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterNotes/CharacterNotes.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from 'react-redux';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterNotesStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport tansparentAddIcon from \"../../images/add-icon-transparent.png\";\nimport addBlueIcon from \"../../images/add-icon-blue.png\";\nimport dotIcon from \"../../images/dot-icon.png\";\n\nfunction CharacterNotes(_ref) {\n  var _this = this;\n\n  var characterItem = _ref.characterItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n\n  var _useState = useState(characterItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  useEffect(function () {\n    setCharacter(characterItem);\n  });\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, character ? React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.character__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.character__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, character.name + \" Notes\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), character.notes.characterNotes.map(function (note) {\n    return React.createElement(View, {\n      style: styles.notes__note,\n      key: performance.now(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.inventory__category__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.category__title__name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: styles.inventory__category__title__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, note.title))), React.createElement(TouchableOpacity, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      source: tansparentAddIcon,\n      style: styles.addBlueIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }\n    }))), note.entries.map(function (entry) {\n      return React.createElement(View, {\n        style: styles.note__row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.note__row__dot,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }\n      }, React.createElement(Image, {\n        source: dotIcon,\n        style: styles.dotIcon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.note__row__entry,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.note__row__entry__text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, entry)));\n    }));\n  })), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: addBlueIcon,\n    style: styles.addIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })))) : React.createElement(View, {\n    style: styles.character__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.character__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"No Character\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterNotes);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterNotes/CharacterNotes.jsx"],"names":["React","useState","useEffect","connect","TouchableOpacity","NavigationBar","styles","absalomBackground","tansparentAddIcon","addBlueIcon","dotIcon","CharacterNotes","characterItem","userId","dispatch","navigation","character","setCharacter","backgroundImage","container","notes","character__title","title__bar","character__name","name","characterNotes","map","note","notes__note","performance","now","inventory__category__title","category__title__name","inventory__category__title__text","title","entries","entry","note__row","note__row__dot","note__row__entry","note__row__entry__text","addIcon__block","addIcon","mapStateToProps","charactersReducer","usersReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  ImageBackground, Text, View, ScrollView, Image,\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterNotesStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport tansparentAddIcon from '../../images/add-icon-transparent.png';\nimport addBlueIcon from '../../images/add-icon-blue.png';\nimport dotIcon from '../../images/dot-icon.png';\n\nfunction CharacterNotes({\n  characterItem, userId, dispatch, navigation,\n}) {\n  const [character, setCharacter] = useState(characterItem);\n\n  useEffect(() => {\n    setCharacter(characterItem);\n  });\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      {character ? (\n        <>\n          <ScrollView style={styles.container}>\n            <View style={styles.notes}>\n              <View style={styles.character__title}>\n                <View style={styles.title__bar} />\n                <Text style={styles.character__name}>{`${character.name} Notes`}</Text>\n                <View style={styles.title__bar} />\n              </View>\n              {character.notes.characterNotes.map((note) => (\n                <View style={styles.notes__note} key={performance.now()}>\n                  <View style={styles.inventory__category__title}>\n                    <View style={styles.category__title__name}>\n                      <TouchableOpacity>\n                        <Text style={styles.inventory__category__title__text}>{note.title}</Text>\n                      </TouchableOpacity>\n                    </View>\n                    <TouchableOpacity>\n                      <Image source={tansparentAddIcon} style={styles.addBlueIcon} />\n                    </TouchableOpacity>\n                  </View>\n                  {note.entries.map((entry) => (\n                    <View style={styles.note__row}>\n                      <View style={styles.note__row__dot}>\n                        <Image source={dotIcon} style={styles.dotIcon} />\n                      </View>\n                      <View style={styles.note__row__entry}>\n                        <Text style={styles.note__row__entry__text}>{entry}</Text>\n                      </View>\n                    </View>\n                  ))}\n                </View>\n              ))}\n            </View>\n            <TouchableOpacity style={styles.addIcon__block}>\n              <Image source={addBlueIcon} style={styles.addIcon} />\n            </TouchableOpacity>\n          </ScrollView>\n        </>\n      ) : (\n        <View style={styles.character__title}>\n          <View style={styles.title__bar} />\n          <Text style={styles.character__name}>No Character</Text>\n          <View style={styles.title__bar} />\n        </View>\n      )}\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterNotes);\n"]},"metadata":{},"sourceType":"module"}