{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default function addImage(character, defaultImage, imageUri, updateCharacterFunction, dispatch) {\n  debugger;\n\n  var newCharacter = _objectSpread({}, character);\n\n  var defaultImageBase64 = \"data:image/jpg;base64,\" + defaultImage.base64;\n\n  function imageToBase64(image) {\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    image.crossOrigin = 'anonymous';\n    ctx.drawImage(image, 0, 0);\n    return canvas.toDataURL();\n  }\n\n  var uriStart = imageUri.slice(0, 4);\n  console.log(uriStart);\n  var newImage = {\n    imageBase64: imageUri,\n    uniqueKey: \"\" + performance.now() + performance.now()\n  };\n\n  if (uriStart === 'file') {\n    newImage.imageBase64 = imageToBase64(imageUri);\n    console.log('File converted:');\n    console.log(newImage.imageBase64);\n  } else if (!newImage.imageBase64.length) {\n    newImage.imageBase64 = defaultImageBase64;\n  } else {\n    newImage.imageBase64 = imageUri;\n  }\n\n  newCharacter.sheet.uploads.push(newImage);\n  dispatch(updateCharacterFunction(newCharacter._id, newCharacter));\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterSheet/CharacterSheetFunctions.js"],"names":["addImage","character","defaultImage","imageUri","updateCharacterFunction","dispatch","newCharacter","defaultImageBase64","base64","imageToBase64","image","canvas","document","createElement","ctx","getContext","width","height","crossOrigin","drawImage","toDataURL","uriStart","slice","console","log","newImage","imageBase64","uniqueKey","performance","now","length","sheet","uploads","push","_id"],"mappings":";;;;;;AAAA,eAAe,SAASA,QAAT,CACbC,SADa,EAEbC,YAFa,EAGbC,QAHa,EAIbC,uBAJa,EAKbC,QALa,EAMb;AACA;;AACA,MAAMC,YAAY,qBAAQL,SAAR,CAAlB;;AACA,MAAMM,kBAAkB,8BAA4BL,YAAY,CAACM,MAAjE;;AAEA,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,QAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACAJ,IAAAA,MAAM,CAACK,KAAP,GAAeN,KAAK,CAACM,KAArB;AACAL,IAAAA,MAAM,CAACM,MAAP,GAAgBP,KAAK,CAACO,MAAtB;AAEAP,IAAAA,KAAK,CAACQ,WAAN,GAAoB,WAApB;AAEAJ,IAAAA,GAAG,CAACK,SAAJ,CAAcT,KAAd,EAAqB,CAArB,EAAwB,CAAxB;AAEA,WAAOC,MAAM,CAACS,SAAP,EAAP;AACD;;AAED,MAAMC,QAAQ,GAAGlB,QAAQ,CAACmB,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,MAAMI,QAAQ,GAAG;AACfC,IAAAA,WAAW,EAAEvB,QADE;AAEfwB,IAAAA,SAAS,OAAKC,WAAW,CAACC,GAAZ,EAAL,GAAyBD,WAAW,CAACC,GAAZ;AAFnB,GAAjB;;AAKA,MAAIR,QAAQ,KAAK,MAAjB,EAAyB;AACvBI,IAAAA,QAAQ,CAACC,WAAT,GAAuBjB,aAAa,CAACN,QAAD,CAApC;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,WAArB;AACD,GAJD,MAIO,IAAI,CAACD,QAAQ,CAACC,WAAT,CAAqBI,MAA1B,EAAkC;AACvCL,IAAAA,QAAQ,CAACC,WAAT,GAAuBnB,kBAAvB;AACD,GAFM,MAEA;AACLkB,IAAAA,QAAQ,CAACC,WAAT,GAAuBvB,QAAvB;AACD;;AAEDG,EAAAA,YAAY,CAACyB,KAAb,CAAmBC,OAAnB,CAA2BC,IAA3B,CAAgCR,QAAhC;AAEApB,EAAAA,QAAQ,CAACD,uBAAuB,CAACE,YAAY,CAAC4B,GAAd,EAAmB5B,YAAnB,CAAxB,CAAR;AACD","sourcesContent":["export default function addImage(\n  character,\n  defaultImage,\n  imageUri,\n  updateCharacterFunction,\n  dispatch,\n) {\n  debugger;\n  const newCharacter = { ...character };\n  const defaultImageBase64 = `data:image/jpg;base64,${defaultImage.base64}`;\n\n  function imageToBase64(image) {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    image.crossOrigin = 'anonymous';\n\n    ctx.drawImage(image, 0, 0);\n\n    return canvas.toDataURL();\n  }\n\n  const uriStart = imageUri.slice(0, 4);\n  console.log(uriStart);\n  const newImage = {\n    imageBase64: imageUri,\n    uniqueKey: `${performance.now()}${performance.now()}`,\n  };\n\n  if (uriStart === 'file') {\n    newImage.imageBase64 = imageToBase64(imageUri);\n    console.log('File converted:');\n    console.log(newImage.imageBase64);\n  } else if (!newImage.imageBase64.length) {\n    newImage.imageBase64 = defaultImageBase64;\n  } else {\n    newImage.imageBase64 = imageUri;\n  }\n\n  newCharacter.sheet.uploads.push(newImage);\n\n  dispatch(updateCharacterFunction(newCharacter._id, newCharacter));\n}\n"]},"metadata":{},"sourceType":"module"}