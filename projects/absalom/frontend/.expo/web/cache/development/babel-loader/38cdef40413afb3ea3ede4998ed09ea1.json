{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport function createNote(character, noteName, updateCharacterFunction, dispatch) {\n  var updatedCharacter = _objectSpread({}, character);\n\n  var newNote = {\n    title: noteName,\n    entries: [],\n    uniqueKey: \"\" + performance.now() + performance.now()\n  };\n\n  if (!noteName.length) {\n    newNote.title = 'New Note';\n  }\n\n  newNote.uniqueKey = \"\" + Date.now() + performance.now();\n  updatedCharacter.notes.characterNotes.push(newNote);\n  dispatch(updateCharacterFunction(updatedCharacter._id, updatedCharacter));\n}\nexport function editNote(character, noteKey, noteTitle, updateCharacterFunction, dispatch) {\n  var updatedCharacter = _objectSpread({}, character);\n\n  var newTitle = noteTitle;\n\n  if (!newTitle.length) {\n    newTitle = 'New Note';\n  }\n\n  updatedCharacter.notes.characterNotes.forEach(function (note) {\n    if (note.uniqueKey === noteKey) {\n      note.title = noteTitle;\n    }\n  });\n  dispatch(updateCharacterFunction(updatedCharacter._id, updatedCharacter));\n}\nexport function deleteNote(character, noteKey, updateCharacterFunction, dispatch) {\n  var updatedCharacter = _objectSpread({}, character);\n\n  updatedCharacter.notes.characterNotes = updatedCharacter.notes.characterNotes.filter(function (note) {\n    return note.uniqueKey !== noteKey;\n  });\n  dispatch(updateCharacterFunction(updatedCharacter._id, updatedCharacter));\n}\nexport function createEntry(character, noteKey, entryText, updateCharacterFunction, dispatch) {\n  var updatedCharacter = _objectSpread({}, character);\n\n  var newEntry = {\n    text: entryText,\n    uniqueKey: ''\n  };\n\n  if (!newEntry.text.length) {\n    newEntry.text = 'New Entry';\n  }\n\n  newEntry.uniqueKey = \"\" + Date.now() + performance.now();\n  updatedCharacter.notes.characterNotes.forEach(function (note) {\n    if (note.uniqueKey === noteKey) {\n      note.entries.push(newEntry);\n    }\n  });\n  dispatch(updateCharacterFunction(updatedCharacter._id, updatedCharacter));\n}\nexport function editEntry(character, noteKey, entryKey, entryText, updateCharacterFunction, dispatch) {\n  debugger;\n\n  var updatedCharacter = _objectSpread({}, character);\n\n  var newEntryText = entryText;\n\n  if (!newEntryText.length) {\n    newEntryText = 'New Entry';\n  }\n\n  updatedCharacter.notes.characterNotes.forEach(function (note) {\n    if (note.uniqueKey === noteKey) {\n      note.entries.forEach(function (entry) {\n        if (entry.uniqueKey === entryKey) {\n          entry.text = newEntryText;\n        }\n      });\n    }\n  });\n  dispatch(updateCharacterFunction(updatedCharacter._id, updatedCharacter));\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterNotes/CharacterNotesFunctions.js"],"names":["createNote","character","noteName","updateCharacterFunction","dispatch","updatedCharacter","newNote","title","entries","uniqueKey","performance","now","length","Date","notes","characterNotes","push","_id","editNote","noteKey","noteTitle","newTitle","forEach","note","deleteNote","filter","createEntry","entryText","newEntry","text","editEntry","entryKey","newEntryText","entry"],"mappings":"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","sourcesContent":["export function createNote(character, noteName, updateCharacterFunction, dispatch) {\n  const updatedCharacter = { ...character };\n  const newNote = {\n    title: noteName,\n    entries: [],\n    uniqueKey: `${performance.now()}${performance.now()}`,\n  };\n  if (!noteName.length) {\n    newNote.title = 'New Note';\n  }\n  newNote.uniqueKey = `${Date.now()}${performance.now()}`;\n  updatedCharacter.notes.characterNotes.push(newNote);\n  dispatch(updateCharacterFunction(updatedCharacter._id, updatedCharacter));\n}\n\nexport function editNote(character, noteKey, noteTitle, updateCharacterFunction, dispatch) {\n  const updatedCharacter = { ...character };\n  let newTitle = noteTitle;\n  if (!newTitle.length) {\n    newTitle = 'New Note';\n  }\n  updatedCharacter.notes.characterNotes.forEach((note) => {\n    if (note.uniqueKey === noteKey) {\n      note.title = noteTitle;\n    }\n  });\n  dispatch(updateCharacterFunction(updatedCharacter._id, updatedCharacter));\n}\n\nexport function deleteNote(\n  character, noteKey, updateCharacterFunction, dispatch,\n) {\n  const updatedCharacter = { ...character };\n  updatedCharacter.notes.characterNotes = updatedCharacter.notes.characterNotes.filter(\n    (note) => note.uniqueKey !== noteKey,\n  );\n  dispatch(updateCharacterFunction(updatedCharacter._id, updatedCharacter));\n}\n\nexport function createEntry(character, noteKey, entryText, updateCharacterFunction, dispatch) {\n  const updatedCharacter = { ...character };\n  const newEntry = {\n    text: entryText,\n    uniqueKey: '',\n  };\n  if (!newEntry.text.length) {\n    newEntry.text = 'New Entry';\n  }\n  newEntry.uniqueKey = `${Date.now()}${performance.now()}`;\n\n  updatedCharacter.notes.characterNotes.forEach((note) => {\n    if (note.uniqueKey === noteKey) {\n      note.entries.push(newEntry);\n    }\n  });\n  dispatch(updateCharacterFunction(updatedCharacter._id, updatedCharacter));\n}\n\nexport function editEntry(\n  character, noteKey, entryKey, entryText, updateCharacterFunction, dispatch,\n) {\n  debugger;\n  const updatedCharacter = { ...character };\n  let newEntryText = entryText;\n\n  if (!newEntryText.length) {\n    newEntryText = 'New Entry';\n  }\n\n  updatedCharacter.notes.characterNotes.forEach((note) => {\n    if (note.uniqueKey === noteKey) {\n      note.entries.forEach((entry) => {\n        if (entry.uniqueKey === entryKey) {\n          entry.text = newEntryText;\n        }\n      });\n    }\n  });\n  dispatch(updateCharacterFunction(updatedCharacter._id, updatedCharacter));\n}\n"]},"metadata":{},"sourceType":"module"}