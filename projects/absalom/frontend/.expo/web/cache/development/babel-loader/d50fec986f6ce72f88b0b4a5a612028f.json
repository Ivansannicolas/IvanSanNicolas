{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx\";\nimport 'react-native-gesture-handler';\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport { loadUser } from \"../../redux/actions/userActions\";\nimport { loadCharacter } from \"../../redux/actions/characterActions\";\nimport styles from \"./CharacterListStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\n\nfunction CharacterList(_ref) {\n  var _this = this;\n\n  var userItem = _ref.userItem,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n  debugger;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characterList = _useState2[0],\n      setCharacterList = _useState2[1];\n\n  useEffect(function () {\n    if (!userItem._id) {\n      dispatch(loadUser('5fc3f007332636744ff4a820'));\n      setCharacterList([]);\n    } else {\n      setCharacterList(userItem.characters);\n    }\n  }, [userItem, userItem.characters]);\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, characterList.length ? React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, userItem.userName + \" Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.characterList__list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, characterList.map(function (character) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.characterList__list__block,\n      key: \"\" + character._id + Math.random(),\n      onPress: function onPress() {\n        dispatch(loadCharacter('null'));\n        dispatch(loadCharacter(character._id));\n        navigation.navigate('Character Detail');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__character__firstRow__name__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.characterList__character__firstRow__name__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }\n    }, character.name)), React.createElement(Text, {\n      style: styles.characterList__character__firstRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Level:\", ' ', character.lvl)), React.createElement(View, {\n      style: styles.characterList__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, character.game), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, character.race), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characterList__character__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, character.characterClass)));\n  }))) : React.createElement(View, {\n    style: styles.characterList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.characterList__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Loading...\"))));\n}\n\nfunction mapStateToProps(_ref2) {\n  var usersReducer = _ref2.usersReducer;\n  return {\n    userItem: usersReducer.userItem\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterList/CharacterList.jsx"],"names":["React","useState","useEffect","connect","loadUser","loadCharacter","styles","absalomBackground","CharacterList","userItem","dispatch","navigation","characterList","setCharacterList","_id","characters","backgroundImage","container","length","title__bar","characterList__title","userName","characterList__list","map","character","characterList__list__block","Math","random","navigate","characterList__list__block__row","characterList__character__firstRow__name__block","characterList__character__firstRow__name__text","name","characterList__character__firstRow__text","lvl","characterList__character__secondRow__text","game","race","characterClass","mapStateToProps","usersReducer"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport 'react-native-gesture-handler';\nimport React, { useState, useEffect } from 'react';\nimport {\n  ScrollView, ImageBackground,\n  View, Text, TouchableOpacity,\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport { loadUser } from '../../redux/actions/userActions';\nimport { loadCharacter } from '../../redux/actions/characterActions';\nimport styles from './CharacterListStyles';\nimport absalomBackground from '../../images/absalom-background.png';\n\nfunction CharacterList({ userItem, dispatch, navigation }) {\n  debugger;\n  const [characterList, setCharacterList] = useState([]);\n\n  useEffect(() => {\n    if (!userItem._id) {\n      dispatch(loadUser('5fc3f007332636744ff4a820'));\n      setCharacterList([]);\n    } else {\n      setCharacterList(userItem.characters);\n    }\n  }, [userItem, userItem.characters]);\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <ScrollView style={styles.container}>\n        {characterList.length ? (\n          <View style={styles.characterList}>\n            <View style={styles.title__bar} />\n            <Text style={styles.characterList__title}>{`${userItem.userName} Characters`}</Text>\n            <View style={styles.title__bar} />\n            <View style={styles.characterList__list}>\n              {characterList.map((character) => (\n                <TouchableOpacity\n                  style={styles.characterList__list__block}\n                  key={`${character._id}${Math.random()}`}\n                  onPress={() => {\n                    dispatch(loadCharacter('null'));\n                    dispatch(loadCharacter(character._id));\n                    navigation.navigate('Character Detail');\n                  }}\n                >\n                  <View style={styles.characterList__list__block__row}>\n                    <View style={styles.characterList__character__firstRow__name__block}>\n                      <Text style={styles.characterList__character__firstRow__name__text}>\n                        {character.name}\n                      </Text>\n                    </View>\n                    <Text style={styles.characterList__character__firstRow__text}>\n                      Level:\n                      {' '}\n                      {character.lvl}\n                    </Text>\n                  </View>\n                  <View style={styles.characterList__list__block__row}>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.game}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.race}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characterList__character__secondRow__text}\n                    >\n                      {character.characterClass}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n          </View>\n        ) : (\n          <View style={styles.characterList}>\n            <Text style={styles.characterList__title}>Loading...</Text>\n          </View>\n        )}\n      </ScrollView>\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    userItem: usersReducer.userItem,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterList);\n"]},"metadata":{},"sourceType":"module"}