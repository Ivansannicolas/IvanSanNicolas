{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/UserDetail/UserDetail.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { loadUser, updateUser } from \"../../redux/actions/userActions\";\nimport { setCharacterId, loadCharacterByKey } from \"../../redux/actions/characterActions\";\nimport updateUserName from \"./UserDetailFunctions\";\nimport Header from \"../Header/Header\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\nimport ListRow from \"./ListRow/ListRow\";\nimport styles from \"./UserDetailStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\n\nfunction UserDetail(_ref) {\n  var _this = this;\n\n  var userItem = _ref.userItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation,\n      charactersArray = _ref.charactersArray;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editModalView = _useState2[0],\n      setEditModalView = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editModalTextValue = _useState4[0],\n      setEditModalTextValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      editListModalView = _useState6[0],\n      setEditListModalView = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      editListModalArrayCategory = _useState8[0],\n      setEditListModalArrayCategory = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editListModalArrayValue = _useState10[0],\n      setEditListModalArrayValue = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      deleteUserModalView = _useState12[0],\n      setDeleteUserModalView = _useState12[1];\n\n  useEffect(function () {\n    if (!userItem || !userItem.userName || (userItem == null ? void 0 : userItem._id) !== userId) {\n      dispatch(loadUser(userId));\n    }\n  }, [userItem, userId]);\n\n  function changeListValue(user, editValue, text, setItemModalProperties, list, listCategory) {\n    var newList = _toConsumableArray(list);\n\n    switch (listCategory) {\n      case 'games':\n        {}\n        break;\n\n      default:\n        break;\n    }\n\n    user.forEach(function (value) {\n      if (value.uniqueKey === editValue.uniqueKey) {\n        value.title = text;\n      }\n    });\n    setItemModalProperties(newList);\n  }\n\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    alwaysBounceVertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, userItem && userItem != null && userItem._id ? React.createElement(View, {\n    style: styles.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.user__title,\n    name: \"user title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.user__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, userItem.userName), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.user__profilePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: userItem.profilePic\n    },\n    style: styles.user__profilePic__image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.user__userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.user__userName__block__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Name:\")), React.createElement(TouchableOpacity, {\n    style: styles.user__userName__block,\n    onPress: function onPress() {\n      setEditModalTextValue(userItem.userName);\n      setEditModalView(!editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, userItem.userName))), React.createElement(TouchableOpacity, {\n    name: \"games\",\n    style: styles.user__games,\n    onPress: function onPress() {\n      setEditListModalArrayCategory('games');\n      setEditListModalArrayValue(_toConsumableArray(userItem.favouriteGames));\n      setEditListModalView(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.user__games__title__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Favourite Games\")), React.createElement(View, {\n    style: styles.user__games__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, userItem.favouriteGames.map(function (actualGame) {\n    return React.createElement(View, {\n      style: styles.user__game__block,\n      key: \"\" + Math.random() + Math.random(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.user__game__block__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, actualGame.title));\n  }))), React.createElement(TouchableOpacity, {\n    name: \"languages\",\n    style: styles.user__games,\n    onPress: function onPress() {\n      setEditListModalArrayCategory('languages');\n      setEditListModalArrayValue(_toConsumableArray(userItem.languages));\n      setEditListModalView(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.user__games__title__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.user__userName__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Languages\")), React.createElement(View, {\n    style: styles.user__games__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, userItem.languages.map(function (actualLanguage) {\n    return React.createElement(View, {\n      style: styles.user__game__block,\n      key: \"\" + Math.random() + Math.random(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.user__game__block__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, actualLanguage.title));\n  }))), React.createElement(View, {\n    style: styles.user__characters,\n    name: \"user characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.user__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, userItem.userName, ' ', \"Characters\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.user__characters__list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, charactersArray.map(function (character) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.user__characters__list__block,\n      key: \"\" + character._id + Math.random(),\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        dispatch(setCharacterId(character._id));\n        dispatch(loadCharacterByKey(character.uniqueKey, userId));\n        navigation.navigate('CharacterDetail');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.user__characters__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.characterList__character__firstRow__name__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.characterList__character__firstRow__name__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, character.name)), React.createElement(Text, {\n      testID: \"LevelText\",\n      style: styles.characterList__character__firstRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"Level:\", ' ', character.lvl)), React.createElement(View, {\n      style: styles.user__characters__list__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characters__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, character.game), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characters__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, character.race), React.createElement(Text, {\n      id: Math.random(),\n      style: styles.characters__secondRow__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, character.characterClass)));\n  })), React.createElement(View, {\n    style: styles.user__deleteButton__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    type: \"solid\",\n    title: \"Delete User\",\n    buttonStyle: styles.button__delete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  })), React.createElement(Overlay, {\n    name: \"edit modal\",\n    isVisible: editModalView,\n    overlayStyle: styles.editModal,\n    backdropStyle: styles.modal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setEditModalView(!editModalView);\n      setEditModalTextValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.editModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"Edit you user name\"), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.editModal__text,\n    maxLength: 30,\n    multiline: true,\n    autoCorrect: false,\n    value: editModalTextValue,\n    onChangeText: function onChangeText(text) {\n      return setEditModalTextValue(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  })), React.createElement(Button, {\n    title: \"Confirm\",\n    buttonStyle: styles.buttonConfirmEditModal,\n    onPress: function onPress() {\n      updateUserName(userItem, editModalTextValue, updateUser, dispatch, 'user');\n      setEditModalTextValue('');\n      setEditModalView(!editModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }))), React.createElement(Overlay, {\n    name: \"delete user modal\",\n    isVisible: deleteUserModalView,\n    overlayStyle: styles.editModal,\n    backdropStyle: styles.editModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      setDeleteUserModalView(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.character__description__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, \"You are about to delete\"), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.deleteModal__warningText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, \"This action is irreversible.\")), React.createElement(Button, {\n    title: \"Delete\",\n    buttonStyle: styles.button__delete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }))), React.createElement(Overlay, {\n    name: \"edit list modal\",\n    isVisible: editListModalView,\n    overlayStyle: styles.editModal,\n    backdropStyle: styles.modal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setEditListModalView(!editListModalView);\n      setEditListModalArrayValue([]);\n      setEditListModalArrayCategory('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.editModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.editModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, \"Edit you user\", ' ', editListModalArrayCategory), React.createElement(ScrollView, {\n    horizontal: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, editListModalArrayValue.map(function (value) {\n    return React.createElement(View, {\n      style: styles.editListModal__block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, React.createElement(ListRow, {\n      user: userItem,\n      value: value,\n      styles: styles,\n      changeListValue: changeListValue,\n      key: performance.now(),\n      list: editListModalArrayValue,\n      listCategory: editListModalArrayCategory,\n      setItemModalProperties: setEditListModalArrayValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 23\n      }\n    }));\n  })), React.createElement(Button, {\n    title: \"Confirm\",\n    buttonStyle: styles.buttonConfirmEditModal,\n    onPress: function onPress() {\n      updateUserName(userItem, editListModalArrayValue, updateUser, dispatch, editListModalArrayCategory);\n      setEditListModalView(!editListModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  })))) : React.createElement(View, {\n    style: styles.character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.no__user__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }), React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }))), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    charactersArray: charactersReducer.charactersArray,\n    userId: usersReducer.userId,\n    userItem: usersReducer.userItem\n  };\n}\n\nexport default connect(mapStateToProps)(UserDetail);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/UserDetail/UserDetail.jsx"],"names":["React","useState","useEffect","Button","Overlay","connect","loadUser","updateUser","setCharacterId","loadCharacterByKey","updateUserName","Header","NavigationBar","LoadingSpinner","ListRow","styles","absalomBackground","UserDetail","userItem","userId","dispatch","navigation","charactersArray","editModalView","setEditModalView","editModalTextValue","setEditModalTextValue","editListModalView","setEditListModalView","editListModalArrayCategory","setEditListModalArrayCategory","editListModalArrayValue","setEditListModalArrayValue","deleteUserModalView","setDeleteUserModalView","userName","_id","changeListValue","user","editValue","text","setItemModalProperties","list","listCategory","newList","forEach","value","uniqueKey","title","backgroundImage","container","user__title","title__bar","user__name","user__profilePic","uri","profilePic","user__profilePic__image","user__userName","user__userName__block__title","user__userName__text","user__userName__block","user__userName__name","user__games","favouriteGames","user__games__title__block","user__games__block","map","actualGame","user__game__block","Math","random","user__game__block__title","languages","actualLanguage","user__characters","user__characters__list","character","user__characters__list__block","navigate","user__characters__list__block__row","characterList__character__firstRow__name__block","characterList__character__firstRow__name__text","name","characterList__character__firstRow__text","lvl","characters__secondRow__text","game","race","characterClass","user__deleteButton__container","button__delete","editModal","modal__background","editModal__block","editModal__title","editModal__textBlock","editModal__text","buttonConfirmEditModal","editModal__background","character__description__text","deleteModal__warningText","editListModal__block","performance","now","no__user__title","mapStateToProps","charactersReducer","usersReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  ImageBackground, Text, View, ScrollView,\n  Image, TextInput, TouchableOpacity,\n} from 'react-native';\nimport { Button, Overlay } from 'react-native-elements';\nimport { connect } from 'react-redux';\n// import { PropTypes } from 'prop-types';\nimport { loadUser, updateUser } from '../../redux/actions/userActions';\nimport { setCharacterId, loadCharacterByKey } from '../../redux/actions/characterActions';\nimport updateUserName from './UserDetailFunctions';\nimport Header from '../Header/Header';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport ListRow from './ListRow/ListRow';\nimport styles from './UserDetailStyles';\n\nimport absalomBackground from '../../images/absalom-background.png';\n\nfunction UserDetail({\n  userItem, userId, dispatch, navigation, charactersArray,\n}) {\n  const [editModalView, setEditModalView] = useState(false);\n  const [editModalTextValue, setEditModalTextValue] = useState('');\n\n  const [editListModalView, setEditListModalView] = useState(false);\n  const [editListModalArrayCategory, setEditListModalArrayCategory] = useState('');\n  const [editListModalArrayValue, setEditListModalArrayValue] = useState([]);\n\n  const [deleteUserModalView, setDeleteUserModalView] = useState(false);\n\n  useEffect(() => {\n    if (!userItem || !userItem.userName || userItem?._id !== userId) {\n      dispatch(loadUser(userId));\n    }\n  }, [userItem, userId]);\n\n  function changeListValue(user, editValue, text, setItemModalProperties, list, listCategory) {\n    const newList = [...list];\n\n    switch (listCategory) {\n      case 'games': {\n\n      }\n        break;\n\n      default:\n        break;\n    }\n    user.forEach((value) => {\n      if (value.uniqueKey === editValue.uniqueKey) {\n        value.title = text;\n      }\n    });\n\n    setItemModalProperties(newList);\n  }\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      <Header navigation={navigation} userId={userId} dispatch={dispatch} />\n      <ScrollView style={styles.container} alwaysBounceVertical>\n        {(userItem && userItem?._id) ? (\n          <View style={styles.user}>\n            <View style={styles.user__title} name=\"user title\">\n              <View style={styles.title__bar} />\n              <Text style={styles.user__name}>{userItem.userName}</Text>\n              <View style={styles.title__bar} />\n            </View>\n            <View style={styles.user__profilePic}>\n              <Image\n                source={{ uri: userItem.profilePic }}\n                style={styles.user__profilePic__image}\n              />\n            </View>\n            <View style={styles.user__userName}>\n              <View style={styles.user__userName__block__title}>\n                <Text style={styles.user__userName__text}>Name:</Text>\n              </View>\n              <TouchableOpacity\n                style={styles.user__userName__block}\n                onPress={() => {\n                  setEditModalTextValue(userItem.userName);\n                  setEditModalView(!editModalView);\n                }}\n              >\n                <Text style={styles.user__userName__name}>{userItem.userName}</Text>\n              </TouchableOpacity>\n            </View>\n            <TouchableOpacity\n              name=\"games\"\n              style={styles.user__games}\n              onPress={() => {\n                setEditListModalArrayCategory('games');\n                setEditListModalArrayValue([...userItem.favouriteGames]);\n                setEditListModalView(true);\n              }}\n            >\n              <View style={styles.user__games__title__block}>\n                <Text style={styles.user__userName__text}>Favourite Games</Text>\n              </View>\n              <View style={styles.user__games__block}>\n                {userItem.favouriteGames.map((actualGame) => (\n                  <View style={styles.user__game__block} key={`${Math.random()}${Math.random()}`}>\n                    <Text style={styles.user__game__block__title}>{actualGame.title}</Text>\n                  </View>\n                ))}\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              name=\"languages\"\n              style={styles.user__games}\n              onPress={() => {\n                setEditListModalArrayCategory('languages');\n                setEditListModalArrayValue([...userItem.languages]);\n                setEditListModalView(true);\n              }}\n            >\n              <View style={styles.user__games__title__block}>\n                <Text style={styles.user__userName__text}>Languages</Text>\n              </View>\n              <View style={styles.user__games__block}>\n                {userItem.languages.map((actualLanguage) => (\n                  <View style={styles.user__game__block} key={`${Math.random()}${Math.random()}`}>\n                    <Text style={styles.user__game__block__title}>{actualLanguage.title}</Text>\n                  </View>\n                ))}\n              </View>\n            </TouchableOpacity>\n            <View style={styles.user__characters} name=\"user characters\">\n              <View style={styles.title__bar} />\n              <Text style={styles.user__name}>\n                {userItem.userName}\n                {' '}\n                Characters\n              </Text>\n              <View style={styles.title__bar} />\n            </View>\n            <View style={styles.user__characters__list}>\n              {charactersArray.map((character) => (\n                <TouchableOpacity\n                  style={styles.user__characters__list__block}\n                  key={`${character._id}${Math.random()}`}\n                  activeOpacity={0.8}\n                  onPress={() => {\n                    dispatch(setCharacterId(character._id));\n                    dispatch(loadCharacterByKey(character.uniqueKey, userId));\n                    navigation.navigate('CharacterDetail');\n                  }}\n                >\n                  <View style={styles.user__characters__list__block__row}>\n                    <View style={styles.characterList__character__firstRow__name__block}>\n                      <Text style={styles.characterList__character__firstRow__name__text}>\n                        {character.name}\n                      </Text>\n                    </View>\n                    <Text\n                      testID=\"LevelText\"\n                      style={styles.characterList__character__firstRow__text}\n                    >\n                      Level:\n                      {' '}\n                      {character.lvl}\n                    </Text>\n                  </View>\n                  <View style={styles.user__characters__list__block__row}>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characters__secondRow__text}\n                    >\n                      {character.game}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characters__secondRow__text}\n                    >\n                      {character.race}\n                    </Text>\n                    <Text\n                      id={Math.random()}\n                      style={styles.characters__secondRow__text}\n                    >\n                      {character.characterClass}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n            <View style={styles.user__deleteButton__container}>\n              <Button\n                type=\"solid\"\n                title=\"Delete User\"\n                buttonStyle={styles.button__delete}\n              />\n            </View>\n            <Overlay\n              name=\"edit modal\"\n              isVisible={editModalView}\n              overlayStyle={styles.editModal}\n              backdropStyle={styles.modal__background}\n              animationType=\"fade\"\n              onBackdropPress={() => {\n                setEditModalView(!editModalView);\n                setEditModalTextValue('');\n              }}\n            >\n              <View style={styles.editModal__block}>\n                <Text style={styles.editModal__title}>\n                  Edit you user name\n                </Text>\n                <View style={styles.editModal__textBlock}>\n                  <TextInput\n                    style={styles.editModal__text}\n                    maxLength={30}\n                    multiline\n                    autoCorrect={false}\n                    value={editModalTextValue}\n                    onChangeText={(text) => setEditModalTextValue(text)}\n                  />\n                </View>\n                <Button\n                  title=\"Confirm\"\n                  buttonStyle={styles.buttonConfirmEditModal}\n                  onPress={() => {\n                    updateUserName(userItem, editModalTextValue, updateUser, dispatch, 'user');\n                    setEditModalTextValue('');\n                    setEditModalView(!editModalView);\n                  }}\n                />\n              </View>\n            </Overlay>\n            <Overlay\n              name=\"delete user modal\"\n              isVisible={deleteUserModalView}\n              overlayStyle={styles.editModal}\n              backdropStyle={styles.editModal__background}\n              animationType=\"fade\"\n              fullScreen\n              onBackdropPress={() => {\n                setDeleteUserModalView(false);\n              }}\n            >\n              <View style={styles.editModal__block}>\n                <Text style={styles.character__description__text}>\n                  You are about to delete\n                </Text>\n                <View style={styles.editModal__textBlock}>\n                  <Text style={styles.deleteModal__warningText}>\n                    This action is irreversible.\n                  </Text>\n                </View>\n                <Button\n                  title=\"Delete\"\n                  buttonStyle={styles.button__delete}\n                />\n              </View>\n            </Overlay>\n            <Overlay\n              name=\"edit list modal\"\n              isVisible={editListModalView}\n              overlayStyle={styles.editModal}\n              backdropStyle={styles.modal__background}\n              animationType=\"fade\"\n              onBackdropPress={() => {\n                setEditListModalView(!editListModalView);\n                setEditListModalArrayValue([]);\n                setEditListModalArrayCategory('');\n              }}\n            >\n              <View style={styles.editModal__block}>\n                <Text style={styles.editModal__title}>\n                  Edit you user\n                  {' '}\n                  {editListModalArrayCategory}\n                </Text>\n                <ScrollView horizontal={false}>\n                  {editListModalArrayValue.map((value) => (\n                    <View style={styles.editListModal__block}>\n                      <ListRow\n                        user={userItem}\n                        value={value}\n                        styles={styles}\n                        changeListValue={changeListValue}\n                        key={performance.now()}\n                        list={editListModalArrayValue}\n                        listCategory={editListModalArrayCategory}\n                        setItemModalProperties={setEditListModalArrayValue}\n                      />\n                    </View>\n                  ))}\n                </ScrollView>\n                <Button\n                  title=\"Confirm\"\n                  buttonStyle={styles.buttonConfirmEditModal}\n                  onPress={() => {\n                    updateUserName(\n                      userItem, editListModalArrayValue,\n                      updateUser, dispatch, editListModalArrayCategory,\n                    );\n                    setEditListModalView(!editListModalView);\n                  }}\n                />\n              </View>\n            </Overlay>\n          </View>\n        ) : (\n          <View style={styles.character}>\n            <View style={styles.title__bar} />\n            <Text style={styles.no__user__title} />\n            <View style={styles.title__bar} />\n            <LoadingSpinner />\n          </View>\n        )}\n      </ScrollView>\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    charactersArray: charactersReducer.charactersArray,\n    userId: usersReducer.userId,\n    userItem: usersReducer.userItem,\n  };\n}\n\nexport default connect(mapStateToProps)(UserDetail);\n"]},"metadata":{},"sourceType":"module"}