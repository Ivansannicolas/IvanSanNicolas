{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/CharacterInventory.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Overlay, Button } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { updateCharacter } from \"../../redux/actions/characterActions\";\nimport { createCategory, createItem, deleteCategory, editCategory } from \"./CharacterInventoryFunctions\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport styles from \"./CharacterInventoryStyles\";\nimport absalomBackground from \"../../images/absalom-background.png\";\nimport addIcon from \"../../images/add-icon.png\";\nimport addBlueIcon from \"../../images/add-icon-blue.png\";\nimport tansparentAddIcon from \"../../images/add-icon-transparent.png\";\nimport garbageIcon from \"../../images/garbage-icon.png\";\nimport PropertyRow from \"./PropertyRow/PropertyRow\";\n\nfunction CharacterInventory(_ref) {\n  var _this = this;\n\n  var characterItem = _ref.characterItem,\n      userId = _ref.userId,\n      dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n\n  var _useState = useState(characterItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoryModalView = _useState4[0],\n      setCategoryModalView = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      categoryModalValue = _useState6[0],\n      setCategoryModalValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      editCategoryModalView = _useState8[0],\n      setEditCategoryModalView = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      categoryKey = _useState10[0],\n      setCategoryKey = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      editCategoryModalValue = _useState12[0],\n      setEditCategoryModalValue = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      deleteCategoryModalView = _useState14[0],\n      setDeleteCategoryModalView = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      CategoryTitle = _useState16[0],\n      setCategoryTitle = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      addItemModalView = _useState18[0],\n      setAddItemModalView = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      itemModalProperties = _useState20[0],\n      setItemModalProperties = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      newItemName = _useState22[0],\n      setNewItemName = _useState22[1];\n\n  useEffect(function () {\n    setCharacter(characterItem);\n  }, [characterItem]);\n\n  function changePropertyValue(property, value, text) {\n    property[value] = text;\n  }\n\n  return React.createElement(ImageBackground, {\n    source: absalomBackground,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, character ? React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inventory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.inventory__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.inventory__title__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, character.name + \" Inventory\"), React.createElement(View, {\n    style: styles.title__bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })), character.inventory.categories.map(function (category) {\n    return React.createElement(View, {\n      style: styles.inventory__category,\n      key: performance.now(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.inventory__category__title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.category__title__name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setCategoryTitle(category.title);\n        setCategoryKey(category.uniqueKey);\n        setEditCategoryModalView(!editCategoryModalView);\n        setEditCategoryModalValue(category.title);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.inventory__category__title__text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, category.title))), React.createElement(TouchableOpacity, {\n      style: styles.category__title__addIcon,\n      onPress: function onPress() {\n        setCategoryKey(category.uniqueKey);\n        console.log(category);\n        console.log(category.uniqueKey);\n        setItemModalProperties([{\n          name: 'Item Name',\n          value: ''\n        }]);\n        setAddItemModalView(!addItemModalView);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      source: tansparentAddIcon,\n      style: styles.addIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }))), category.items.map(function (item) {\n      return React.createElement(View, {\n        style: styles.inventory__category__item,\n        key: performance.now(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: styles.inventory__category__item__title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inventory__category__item__title__text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 23\n        }\n      }, item.itemTitle)), item.properties.map(function (property) {\n        if (property !== 'itemTitle' && property !== '_id' && property !== 'properties') {\n          return React.createElement(View, {\n            style: styles.inventory__category__item__row,\n            key: performance.now(),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 27\n            }\n          }, React.createElement(View, {\n            style: styles.inventory__category__item__row__name,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            style: styles.inventory__category__item__text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 31\n            }\n          }, \"\" + property.name)), React.createElement(View, {\n            style: styles.inventory__category__item__row__value,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            style: styles.inventory__category__item__text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 31\n            }\n          }, property.value)));\n        }\n      }));\n    }));\n  }))) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 40,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"No Character\")), React.createElement(Overlay, {\n    name: \"add category modal\",\n    isVisible: categoryModalView,\n    overlayStyle: styles.categoryModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setCategoryModalView(!categoryModalView);\n      setCategoryModalValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.categoryModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.categoryModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Add new category\"), React.createElement(TextInput, {\n    style: styles.categoryModal__text,\n    placeholder: \"Category Name\",\n    value: categoryModalValue,\n    onChangeText: function onChangeText(text) {\n      return setCategoryModalValue(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styles.categoryModal__button,\n    title: \"Create Category\",\n    onPress: function onPress() {\n      setCategoryModalView(!categoryModalView);\n      createCategory(character, categoryModalValue, updateCharacter, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }))), React.createElement(Overlay, {\n    name: \"edit category modal\",\n    isVisible: editCategoryModalView,\n    overlayStyle: styles.editCategoryModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    onBackdropPress: function onBackdropPress() {\n      setEditCategoryModalView(!editCategoryModalView);\n      setEditCategoryModalValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.categoryModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.categoryModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"Edit category\"), React.createElement(TextInput, {\n    style: styles.categoryModal__text,\n    placeholder: \"Category Name\",\n    value: editCategoryModalValue,\n    onChangeText: function onChangeText(text) {\n      return setEditCategoryModalValue(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.editCategoryModal__buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    buttonStyle: styles.editCategoryModal__editButton,\n    title: \"Edit\",\n    onPress: function onPress() {\n      editCategory(character, categoryKey, editCategoryModalValue, updateCharacter, dispatch);\n      setEditCategoryModalView(!editCategoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styles.editCategoryModal__deleteButton,\n    title: \"Delete\",\n    onPress: function onPress() {\n      setEditCategoryModalView(!editCategoryModalView);\n      setDeleteCategoryModalView(!deleteCategoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  })))), React.createElement(Overlay, {\n    name: \"delete category modal\",\n    isVisible: deleteCategoryModalView,\n    overlayStyle: styles.deleteCategoryModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      setDeleteCategoryModalView(!deleteCategoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.deleteCategoryModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.deleteCategoryModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"You are about to delete\"), React.createElement(Text, {\n    style: styles.deleteCategoryModal__category__name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, CategoryTitle), React.createElement(Text, {\n    style: styles.deleteCategoryModal__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, \"and all the items it contains.\"), React.createElement(View, {\n    style: styles.editModal__textBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.deleteCategoryModal__warningText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"This action is irreversible.\")), React.createElement(Button, {\n    title: \"Delete\",\n    buttonStyle: styles.editCategoryModal__deleteButton,\n    onPress: function onPress() {\n      deleteCategory(character, categoryKey, updateCharacter, dispatch);\n      setDeleteCategoryModalView(!deleteCategoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }))), React.createElement(Overlay, {\n    name: \"add item modal\",\n    isVisible: addItemModalView,\n    overlayStyle: styles.addItemModal,\n    backdropStyle: styles.categoryModal__background,\n    animationType: \"fade\",\n    fullScreen: true,\n    onBackdropPress: function onBackdropPress() {\n      setAddItemModalView(!addItemModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addItemModal__block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addItemModal__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"Add item\"), itemModalProperties.map(function (property) {\n    return property.name !== itemModalProperties[0].name ? React.createElement(PropertyRow, {\n      property: property,\n      styles: styles,\n      changePropertyValue: changePropertyValue,\n      key: performance.now(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }) : React.createElement(View, {\n      key: \"title\",\n      style: styles.addItemModal__block__row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.addItemModal__row__name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.addItemModal__itemName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, property.name)), React.createElement(View, {\n      style: styles.addItemModal__row__value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"value\",\n      style: styles.addItemModal__inputText,\n      value: newItemName,\n      onChangeText: function onChangeText(text) {\n        return setNewItemName(text);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: styles.addItemModal__row__garbage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      source: garbageIcon,\n      style: styles.garbageIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    })));\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setItemModalProperties([].concat(_toConsumableArray(itemModalProperties), [{\n        name: '',\n        value: ''\n      }]));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: addBlueIcon,\n    style: styles.addBlueIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  })), React.createElement(Button, {\n    title: \"Add Item\",\n    buttonStyle: styles.addItemModal__button,\n    onPress: function onPress() {\n      createItem(character, categoryKey, newItemName, itemModalProperties, updateCharacter, dispatch);\n      setAddItemModalView(!addItemModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  })))), React.createElement(TouchableOpacity, {\n    style: styles.addIcon__block,\n    onPress: function onPress() {\n      return setCategoryModalView(!categoryModalView);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: addIcon,\n    style: styles.addIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  })), React.createElement(NavigationBar, {\n    navigation: navigation,\n    userId: userId,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(_ref2) {\n  var charactersReducer = _ref2.charactersReducer,\n      usersReducer = _ref2.usersReducer;\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterInventory);","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterInventory/CharacterInventory.jsx"],"names":["React","useEffect","useState","Overlay","Button","connect","updateCharacter","createCategory","createItem","deleteCategory","editCategory","NavigationBar","styles","absalomBackground","addIcon","addBlueIcon","tansparentAddIcon","garbageIcon","PropertyRow","CharacterInventory","characterItem","userId","dispatch","navigation","character","setCharacter","categoryModalView","setCategoryModalView","categoryModalValue","setCategoryModalValue","editCategoryModalView","setEditCategoryModalView","categoryKey","setCategoryKey","editCategoryModalValue","setEditCategoryModalValue","deleteCategoryModalView","setDeleteCategoryModalView","CategoryTitle","setCategoryTitle","addItemModalView","setAddItemModalView","itemModalProperties","setItemModalProperties","newItemName","setNewItemName","changePropertyValue","property","value","text","backgroundImage","container","inventory","inventory__title","title__bar","inventory__title__text","name","categories","map","category","inventory__category","performance","now","inventory__category__title","category__title__name","title","uniqueKey","inventory__category__title__text","category__title__addIcon","console","log","items","item","inventory__category__item","inventory__category__item__title","inventory__category__item__title__text","itemTitle","properties","inventory__category__item__row","inventory__category__item__row__name","inventory__category__item__text","inventory__category__item__row__value","marginTop","textAlign","categoryModal","categoryModal__background","categoryModal__block","categoryModal__title","categoryModal__text","categoryModal__button","editCategoryModal","editCategoryModal__buttons","editCategoryModal__editButton","editCategoryModal__deleteButton","deleteCategoryModal","deleteCategoryModal__block","deleteCategoryModal__text","deleteCategoryModal__category__name","editModal__textBlock","deleteCategoryModal__warningText","addItemModal","addItemModal__block","addItemModal__title","addItemModal__block__row","addItemModal__row__name","addItemModal__itemName","addItemModal__row__value","addItemModal__inputText","addItemModal__row__garbage","addItemModal__button","addIcon__block","mapStateToProps","charactersReducer","usersReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  ScrollView, ImageBackground, TextInput,\n  View, Text, TouchableOpacity, Image,\n} from 'react-native';\nimport { Overlay, Button } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { updateCharacter } from '../../redux/actions/characterActions';\nimport {\n  createCategory, createItem, deleteCategory, editCategory,\n} from './CharacterInventoryFunctions';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport styles from './CharacterInventoryStyles';\nimport absalomBackground from '../../images/absalom-background.png';\nimport addIcon from '../../images/add-icon.png';\nimport addBlueIcon from '../../images/add-icon-blue.png';\nimport tansparentAddIcon from '../../images/add-icon-transparent.png';\nimport garbageIcon from '../../images/garbage-icon.png';\nimport PropertyRow from './PropertyRow/PropertyRow';\n\nfunction CharacterInventory({\n  characterItem, userId, dispatch, navigation,\n}) {\n  const [character, setCharacter] = useState(characterItem);\n  const [categoryModalView, setCategoryModalView] = useState(false);\n  const [categoryModalValue, setCategoryModalValue] = useState('');\n\n  const [editCategoryModalView, setEditCategoryModalView] = useState(false);\n  const [categoryKey, setCategoryKey] = useState('');\n  const [editCategoryModalValue, setEditCategoryModalValue] = useState('');\n\n  const [deleteCategoryModalView, setDeleteCategoryModalView] = useState(false);\n  const [CategoryTitle, setCategoryTitle] = useState(false);\n\n  const [addItemModalView, setAddItemModalView] = useState(false);\n  const [itemModalProperties, setItemModalProperties] = useState([]);\n\n  const [newItemName, setNewItemName] = useState('');\n\n  useEffect(() => {\n    setCharacter(characterItem);\n  }, [characterItem]);\n\n  function changePropertyValue(property, value, text) {\n    property[value] = text;\n  }\n\n  return (\n    <ImageBackground source={absalomBackground} style={styles.backgroundImage}>\n      {character ? (\n        <ScrollView style={styles.container}>\n          <View style={styles.inventory}>\n            <View style={styles.inventory__title}>\n              <View style={styles.title__bar} />\n              <Text style={styles.inventory__title__text}>{`${character.name} Inventory`}</Text>\n              <View style={styles.title__bar} />\n            </View>\n            {character.inventory.categories.map((category) => (\n              <View style={styles.inventory__category} key={performance.now()}>\n                <View style={styles.inventory__category__title}>\n                  <View style={styles.category__title__name}>\n                    <TouchableOpacity\n                      onPress={() => {\n                        setCategoryTitle(category.title);\n                        setCategoryKey(category.uniqueKey);\n                        setEditCategoryModalView(!editCategoryModalView);\n                        setEditCategoryModalValue(category.title);\n                      }}\n                    >\n                      <Text style={styles.inventory__category__title__text}>{category.title}</Text>\n                    </TouchableOpacity>\n                  </View>\n                  <TouchableOpacity\n                    style={styles.category__title__addIcon}\n                    onPress={() => {\n                      setCategoryKey(category.uniqueKey);\n                      console.log(category);\n                      console.log(category.uniqueKey);\n                      setItemModalProperties([{ name: 'Item Name', value: '' }]);\n                      setAddItemModalView(!addItemModalView);\n                    }}\n                  >\n                    <Image source={tansparentAddIcon} style={styles.addIcon} />\n                  </TouchableOpacity>\n                </View>\n                {category.items.map((item) => (\n                  <View style={styles.inventory__category__item} key={performance.now()}>\n                    <View style={styles.inventory__category__item__title}>\n                      <Text\n                        style={styles.inventory__category__item__title__text}\n                      >\n                        {item.itemTitle}\n                      </Text>\n                    </View>\n                    {item.properties.map((property) => {\n                      if (property !== 'itemTitle' && property !== '_id' && property !== 'properties') {\n                        return (\n                          <View\n                            style={styles.inventory__category__item__row}\n                            key={performance.now()}\n                          >\n                            <View style={styles.inventory__category__item__row__name}>\n                              <Text style={styles.inventory__category__item__text}>{`${property.name}`}</Text>\n                            </View>\n                            <View style={styles.inventory__category__item__row__value}>\n                              <Text\n                                style={styles.inventory__category__item__text}\n                              >\n                                {property.value}\n                              </Text>\n                            </View>\n                          </View>\n                        );\n                      }\n                    })}\n                  </View>\n                ))}\n              </View>\n            ))}\n          </View>\n        </ScrollView>\n      ) : (\n        <View>\n          <Text style={{ marginTop: 40, textAlign: 'center' }}>No Character</Text>\n        </View>\n      )}\n      <Overlay\n        name=\"add category modal\"\n        isVisible={categoryModalView}\n        overlayStyle={styles.categoryModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        onBackdropPress={() => {\n          setCategoryModalView(!categoryModalView);\n          setCategoryModalValue('');\n        }}\n      >\n        <View style={styles.categoryModal__block}>\n          <Text style={styles.categoryModal__title}>Add new category</Text>\n          <TextInput\n            style={styles.categoryModal__text}\n            placeholder=\"Category Name\"\n            value={categoryModalValue}\n            onChangeText={(text) => setCategoryModalValue(text)}\n          />\n          <Button\n            buttonStyle={styles.categoryModal__button}\n            title=\"Create Category\"\n            onPress={() => {\n              setCategoryModalView(!categoryModalView);\n              createCategory(character, categoryModalValue, updateCharacter, dispatch);\n            }}\n          />\n        </View>\n      </Overlay>\n      <Overlay\n        name=\"edit category modal\"\n        isVisible={editCategoryModalView}\n        overlayStyle={styles.editCategoryModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        onBackdropPress={() => {\n          setEditCategoryModalView(!editCategoryModalView);\n          setEditCategoryModalValue('');\n        }}\n      >\n        <View style={styles.categoryModal__block}>\n          <Text style={styles.categoryModal__title}>\n            Edit category\n          </Text>\n          <TextInput\n            style={styles.categoryModal__text}\n            placeholder=\"Category Name\"\n            value={editCategoryModalValue}\n            onChangeText={(text) => setEditCategoryModalValue(text)}\n          />\n          <View style={styles.editCategoryModal__buttons}>\n            <Button\n              buttonStyle={styles.editCategoryModal__editButton}\n              title=\"Edit\"\n              onPress={() => {\n                editCategory(\n                  character, categoryKey, editCategoryModalValue, updateCharacter, dispatch,\n                );\n                setEditCategoryModalView(!editCategoryModalView);\n              }}\n            />\n            <Button\n              buttonStyle={styles.editCategoryModal__deleteButton}\n              title=\"Delete\"\n              onPress={() => {\n                setEditCategoryModalView(!editCategoryModalView);\n                setDeleteCategoryModalView(!deleteCategoryModalView);\n              }}\n            />\n          </View>\n        </View>\n      </Overlay>\n      <Overlay\n        name=\"delete category modal\"\n        isVisible={deleteCategoryModalView}\n        overlayStyle={styles.deleteCategoryModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        fullScreen\n        onBackdropPress={() => {\n          setDeleteCategoryModalView(!deleteCategoryModalView);\n        }}\n      >\n        <View style={styles.deleteCategoryModal__block}>\n          <Text style={styles.deleteCategoryModal__text}>\n            You are about to delete\n          </Text>\n          <Text style={styles.deleteCategoryModal__category__name}>\n            {CategoryTitle}\n          </Text>\n          <Text style={styles.deleteCategoryModal__text}>\n            and all the items it contains.\n          </Text>\n          <View style={styles.editModal__textBlock}>\n            <Text style={styles.deleteCategoryModal__warningText}>\n              This action is irreversible.\n            </Text>\n          </View>\n          <Button\n            title=\"Delete\"\n            buttonStyle={styles.editCategoryModal__deleteButton}\n            onPress={() => {\n              deleteCategory(character, categoryKey, updateCharacter, dispatch);\n              setDeleteCategoryModalView(!deleteCategoryModalView);\n            }}\n          />\n        </View>\n      </Overlay>\n      <Overlay\n        name=\"add item modal\"\n        isVisible={addItemModalView}\n        overlayStyle={styles.addItemModal}\n        backdropStyle={styles.categoryModal__background}\n        animationType=\"fade\"\n        fullScreen\n        onBackdropPress={() => {\n          setAddItemModalView(!addItemModalView);\n        }}\n      >\n        <ScrollView>\n          <View style={styles.addItemModal__block}>\n            <Text style={styles.addItemModal__title}>Add item</Text>\n            {itemModalProperties.map((property) => (\n              property.name !== itemModalProperties[0].name ? (\n                <PropertyRow\n                  property={property}\n                  styles={styles}\n                  changePropertyValue={changePropertyValue}\n                  key={performance.now()}\n                />\n              ) : (\n                <View\n                  key=\"title\"\n                  style={styles.addItemModal__block__row}\n                >\n                  <View style={styles.addItemModal__row__name}>\n                    <Text style={styles.addItemModal__itemName}>{property.name}</Text>\n                  </View>\n                  <View style={styles.addItemModal__row__value}>\n                    <TextInput\n                      placeholder=\"value\"\n                      style={styles.addItemModal__inputText}\n                      value={newItemName}\n                      onChangeText={(text) => setNewItemName(text)}\n                    />\n                  </View>\n                  <TouchableOpacity style={styles.addItemModal__row__garbage}>\n                    <Image source={garbageIcon} style={styles.garbageIcon} />\n                  </TouchableOpacity>\n                </View>\n              )\n            ))}\n            <TouchableOpacity\n              onPress={() => {\n                setItemModalProperties([...itemModalProperties, { name: '', value: '' }]);\n              }}\n            >\n              <Image source={addBlueIcon} style={styles.addBlueIcon} />\n            </TouchableOpacity>\n            <Button\n              title=\"Add Item\"\n              buttonStyle={styles.addItemModal__button}\n              onPress={() => {\n                createItem(\n                  character, categoryKey, newItemName, itemModalProperties,\n                  updateCharacter, dispatch,\n                );\n                setAddItemModalView(!addItemModalView);\n              }}\n            />\n          </View>\n        </ScrollView>\n      </Overlay>\n\n      <TouchableOpacity\n        style={styles.addIcon__block}\n        onPress={() => setCategoryModalView(!categoryModalView)}\n      >\n        <Image source={addIcon} style={styles.addIcon} />\n      </TouchableOpacity>\n      <NavigationBar navigation={navigation} userId={userId} dispatch={dispatch} />\n    </ImageBackground>\n  );\n}\n\nfunction mapStateToProps({ charactersReducer, usersReducer }) {\n  return {\n    characterItem: charactersReducer.characterItem,\n    userId: usersReducer.userId,\n  };\n}\n\nexport default connect(mapStateToProps)(CharacterInventory);\n"]},"metadata":{},"sourceType":"module"}