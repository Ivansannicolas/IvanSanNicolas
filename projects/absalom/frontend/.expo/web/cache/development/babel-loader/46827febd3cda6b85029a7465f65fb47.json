{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { updateCharacter } from \"../../redux/actions/characterActions\";\nexport var setVisibility = {\n  sheetVisibility: 'Sheet visibility',\n  inventoryVisibility: 'Inventory visibility',\n  notesVisibility: 'Notes visibility'\n};\nexport function changeSetVisibility(actualCharacter, setCharacterFunction, setId, actualSetVisibility, dispatch) {\n  var updatedcharacter = _objectSpread({}, actualCharacter);\n\n  var characterId = updatedcharacter._id;\n\n  switch (setId) {\n    case actualSetVisibility.inventoryVisibility:\n      if (updatedcharacter.inventory.public) {\n        updatedcharacter.inventory.public = false;\n      } else {\n        updatedcharacter.inventory.public = true;\n      }\n\n      break;\n\n    case actualSetVisibility.sheetVisibility:\n      if (updatedcharacter.sheet.public) {\n        updatedcharacter.sheet.public = false;\n      } else {\n        updatedcharacter.sheet.public = true;\n      }\n\n      break;\n\n    case actualSetVisibility.notesVisibility:\n      if (updatedcharacter.notes.public) {\n        updatedcharacter.notes.public = false;\n      } else {\n        updatedcharacter.notes.public = true;\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  setCharacterFunction(updatedcharacter);\n  dispatch(updateCharacter(characterId, updatedcharacter));\n}\nexport function displayDeleteCharacterModal(setDeleteCharacterModalView, deleteCharacterModalView) {\n  setDeleteCharacterModalView(!deleteCharacterModalView);\n}\nexport function displayEditModal(setModalVisibility, modalVisibility) {\n  setModalVisibility(!modalVisibility);\n}\nexport var editCharacterMethods = {\n  editCharacterName: function editCharacterName(actualCharacter, text, setCharacterFunction, dispatch) {\n    var updatedCharacter = _objectSpread({}, actualCharacter);\n\n    var characterId = updatedCharacter._id;\n    var newText = text;\n\n    if (!newText.length) {\n      newText = 'Adventurer';\n    }\n\n    updatedCharacter.name = text;\n    setCharacterFunction(text);\n    dispatch(updateCharacter(characterId, updatedCharacter));\n  },\n  editCharacterGame: function editCharacterGame(actualCharacter, text, setCharacterFunction, dispatch) {\n    var updatedCharacter = _objectSpread({}, actualCharacter);\n\n    var characterId = updatedCharacter._id;\n    updatedCharacter.game = text;\n    setCharacterFunction(text);\n    dispatch(updateCharacter(characterId, updatedCharacter));\n  },\n  editCharacterRace: function editCharacterRace(actualCharacter, text, setCharacterFunction, dispatch) {\n    var updatedCharacter = _objectSpread({}, actualCharacter);\n\n    var characterId = updatedCharacter._id;\n    updatedCharacter.race = text;\n    setCharacterFunction(text);\n    dispatch(updateCharacter(characterId, updatedCharacter));\n  },\n  editCharacterClass: function editCharacterClass(actualCharacter, text, setCharacterFunction, dispatch) {\n    var updatedCharacter = _objectSpread({}, actualCharacter);\n\n    var characterId = updatedCharacter._id;\n    updatedCharacter.characterClass = text;\n    setCharacterFunction(text);\n    dispatch(updateCharacter(characterId, updatedCharacter));\n  },\n  editCharacterLvl: function editCharacterLvl(actualCharacter, text, setCharacterFunction, dispatch) {\n    var updatedCharacter = _objectSpread({}, actualCharacter);\n\n    var characterId = updatedCharacter._id;\n    updatedCharacter.lvl = text;\n    setCharacterFunction(text);\n    dispatch(updateCharacter(characterId, updatedCharacter));\n  },\n  editName: 'Edit Name',\n  editGame: 'Edit Game',\n  editRace: 'Edit Race',\n  editClass: 'Edit Class',\n  editLvl: 'Edit Level'\n};\nexport function editCharacter(editType, actualCharacter, actualTextValue, characterMethods, displayModal, setEditModalView, editModalView, setCharacterName, setCharacterGame, setCharacterRace, setCharacterClass, setCharacterLvl, dispatch) {\n  switch (editType) {\n    case characterMethods.editName:\n      characterMethods.editCharacterName(actualCharacter, actualTextValue, setCharacterName, dispatch);\n      break;\n\n    case characterMethods.editGame:\n      characterMethods.editCharacterGame(actualCharacter, actualTextValue, setCharacterGame, dispatch);\n      break;\n\n    case characterMethods.editRace:\n      characterMethods.editCharacterRace(actualCharacter, actualTextValue, setCharacterRace, dispatch);\n      break;\n\n    case characterMethods.editClass:\n      characterMethods.editCharacterClass(actualCharacter, actualTextValue, setCharacterClass, dispatch);\n      break;\n\n    case characterMethods.editLvl:\n      characterMethods.editCharacterLvl(actualCharacter, actualTextValue, setCharacterLvl, dispatch);\n      break;\n\n    default:\n      break;\n  }\n\n  displayModal(setEditModalView, editModalView);\n}","map":{"version":3,"sources":["/Users/ivansan/Documents/Programming-repos/absalom/frontend/src/components/CharacterDetail/CharacterDetailFunctions.js"],"names":["updateCharacter","setVisibility","sheetVisibility","inventoryVisibility","notesVisibility","changeSetVisibility","actualCharacter","setCharacterFunction","setId","actualSetVisibility","dispatch","updatedcharacter","characterId","_id","inventory","public","sheet","notes","displayDeleteCharacterModal","setDeleteCharacterModalView","deleteCharacterModalView","displayEditModal","setModalVisibility","modalVisibility","editCharacterMethods","editCharacterName","text","updatedCharacter","newText","length","name","editCharacterGame","game","editCharacterRace","race","editCharacterClass","characterClass","editCharacterLvl","lvl","editName","editGame","editRace","editClass","editLvl","editCharacter","editType","actualTextValue","characterMethods","displayModal","setEditModalView","editModalView","setCharacterName","setCharacterGame","setCharacterRace","setCharacterClass","setCharacterLvl"],"mappings":"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","sourcesContent":["import { updateCharacter } from '../../redux/actions/characterActions';\n\nexport const setVisibility = {\n  sheetVisibility: 'Sheet visibility',\n  inventoryVisibility: 'Inventory visibility',\n  notesVisibility: 'Notes visibility',\n};\n\nexport function changeSetVisibility(\n  actualCharacter, setCharacterFunction, setId, actualSetVisibility, dispatch,\n) {\n  const updatedcharacter = { ...actualCharacter };\n  const characterId = updatedcharacter._id;\n  switch (setId) {\n    case actualSetVisibility.inventoryVisibility:\n      if (updatedcharacter.inventory.public) {\n        updatedcharacter.inventory.public = false;\n      } else {\n        updatedcharacter.inventory.public = true;\n      }\n      break;\n    case actualSetVisibility.sheetVisibility:\n      if (updatedcharacter.sheet.public) {\n        updatedcharacter.sheet.public = false;\n      } else {\n        updatedcharacter.sheet.public = true;\n      }\n      break;\n    case actualSetVisibility.notesVisibility:\n      if (updatedcharacter.notes.public) {\n        updatedcharacter.notes.public = false;\n      } else {\n        updatedcharacter.notes.public = true;\n      }\n      break;\n\n    default:\n      break;\n  }\n  setCharacterFunction(updatedcharacter);\n  dispatch(updateCharacter(characterId, updatedcharacter));\n}\n\nexport function displayDeleteCharacterModal(setDeleteCharacterModalView, deleteCharacterModalView) {\n  setDeleteCharacterModalView(!deleteCharacterModalView);\n}\n\nexport function displayEditModal(setModalVisibility, modalVisibility) {\n  setModalVisibility(!modalVisibility);\n}\n\nexport const editCharacterMethods = {\n  editCharacterName(actualCharacter, text, setCharacterFunction, dispatch) {\n    const updatedCharacter = { ...actualCharacter };\n    const characterId = updatedCharacter._id;\n    let newText = text;\n\n    if (!newText.length) {\n      newText = 'Adventurer';\n    }\n\n    updatedCharacter.name = text;\n\n    setCharacterFunction(text);\n    dispatch(updateCharacter(characterId, updatedCharacter));\n  },\n  editCharacterGame(actualCharacter, text, setCharacterFunction, dispatch) {\n    const updatedCharacter = { ...actualCharacter };\n    const characterId = updatedCharacter._id;\n\n    updatedCharacter.game = text;\n\n    setCharacterFunction(text);\n    dispatch(updateCharacter(characterId, updatedCharacter));\n  },\n  editCharacterRace(actualCharacter, text, setCharacterFunction, dispatch) {\n    const updatedCharacter = { ...actualCharacter };\n    const characterId = updatedCharacter._id;\n\n    updatedCharacter.race = text;\n\n    setCharacterFunction(text);\n    dispatch(updateCharacter(characterId, updatedCharacter));\n  },\n  editCharacterClass(actualCharacter, text, setCharacterFunction, dispatch) {\n    const updatedCharacter = { ...actualCharacter };\n    const characterId = updatedCharacter._id;\n\n    updatedCharacter.characterClass = text;\n\n    setCharacterFunction(text);\n    dispatch(updateCharacter(characterId, updatedCharacter));\n  },\n  editCharacterLvl(actualCharacter, text, setCharacterFunction, dispatch) {\n    const updatedCharacter = { ...actualCharacter };\n    const characterId = updatedCharacter._id;\n\n    updatedCharacter.lvl = text;\n\n    setCharacterFunction(text);\n    dispatch(updateCharacter(characterId, updatedCharacter));\n  },\n  editName: 'Edit Name',\n  editGame: 'Edit Game',\n  editRace: 'Edit Race',\n  editClass: 'Edit Class',\n  editLvl: 'Edit Level',\n\n};\n\nexport function editCharacter(\n  editType, actualCharacter, actualTextValue, characterMethods, displayModal,\n  setEditModalView, editModalView, setCharacterName, setCharacterGame, setCharacterRace,\n  setCharacterClass, setCharacterLvl, dispatch,\n) {\n  switch (editType) {\n    case characterMethods.editName:\n      characterMethods.editCharacterName(actualCharacter, actualTextValue,\n        setCharacterName, dispatch);\n      break;\n    case characterMethods.editGame:\n      characterMethods.editCharacterGame(actualCharacter, actualTextValue,\n        setCharacterGame, dispatch);\n      break;\n    case characterMethods.editRace:\n      characterMethods.editCharacterRace(actualCharacter, actualTextValue,\n        setCharacterRace, dispatch);\n      break;\n    case characterMethods.editClass:\n      characterMethods.editCharacterClass(actualCharacter, actualTextValue,\n        setCharacterClass, dispatch);\n      break;\n    case characterMethods.editLvl:\n      characterMethods.editCharacterLvl(actualCharacter, actualTextValue,\n        setCharacterLvl, dispatch);\n      break;\n    default:\n      break;\n  }\n  displayModal(setEditModalView, editModalView);\n}\n"]},"metadata":{},"sourceType":"module"}